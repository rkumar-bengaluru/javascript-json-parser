{"version":3,"sources":["webpack://RJsonParser/webpack/universalModuleDefinition","webpack://RJsonParser/./src/app.js","webpack://RJsonParser/./src/io/CharStream.js","webpack://RJsonParser/./src/io/Reader.js","webpack://RJsonParser/./src/io/String.js","webpack://RJsonParser/./src/io/StringReader.js","webpack://RJsonParser/./src/json/JsonBoolean.js","webpack://RJsonParser/./src/json/JsonList.js","webpack://RJsonParser/./src/json/JsonMap.js","webpack://RJsonParser/./src/json/JsonNull.js","webpack://RJsonParser/./src/json/JsonNumber.js","webpack://RJsonParser/./src/json/JsonObject.js","webpack://RJsonParser/./src/json/JsonString.js","webpack://RJsonParser/./src/logger/logger.js","webpack://RJsonParser/./src/parser/RJsonAbsParser.js","webpack://RJsonParser/./src/parser/RJsonConstants.js","webpack://RJsonParser/./src/parser/RJsonLexer.js","webpack://RJsonParser/./src/parser/RJsonParser.js","webpack://RJsonParser/./src/parser/RJsonParserError.js","webpack://RJsonParser/./src/parser/RJsonToken.js","webpack://RJsonParser/./src/parser/RJsonTokenMgrError.js"],"names":["root","factory","exports","module","define","amd","this","example","init","console","log","target","document","getElementById","jsonObj","value","parse","appendable","destination","formatJsonToString","formatInputString","formatJsonToHtml","innerHTML","formatHtml","e","stack","JSON","stringify","addEventListener","format","logger","CharStream","stream","maxNextCharInd","nextCharInd","bufline","bufcolumn","column","line","bufpos","bufsize","available","maxBufSize","inBuf","prevCharIsCR","prevCharIsLF","tabSize","tokenBegin","nextCharBuf","Array","buffer","inputStream","readFromBuffer","readChar","c","adjustBuffSize","readByte","checkSpecial","updateLineColumn","fillBuff","debug","i","read","close","Error","backup","olumn","amount","expandBuff","toString","Reader","newInput","constructor","TypeError","prototype","getChars","input","length","next","mark","cbuf","offset","len","srcBegin","srcEnd","dst","dstBegin","String","chars","count","join","StringReader","super","ensureOpen","n","Math","min","JsonBoolean","isKey","currentLevel","_input","JsonList","jsonObject","push","j","tabs","size","forEach","element","cAppendable","_root","JsonMap","jsonObjectKey","jsonObjectValue","set","info","key","keyAppendable","valueAppendable","keyValue","JsonNumber","JsonObject","_isKey","_keyValue","_rawInput","newRoot","newKey","raw","newValue","JsonString","concat","msg","RJsonAbsParser","rinput","startNow","undefined","reader","lexer","token","jj_nt","getNextToken","jj_gen","jj_la1","jj_la1_0","jj_kind","nativeNumbers","o","kind","STRING_SINGLE_EMPTY","STRING_DOUBLE_EMPTY","STRING_SINGLE_NONEMPTY","STRING_DOUBLE_NONEMPTY","string","SYMBOL","symbol","NULL","nullValue","NUMBER_INTEGER","NUMBER_DECIMAL","TRUE","FALSE","booleanValue","number","jj_consume_token","s","doubleQuoteString","singleQuoteString","image","sjj_gen","b","x","t","RJsonConstants","EOF","C_SINGLE_COMMENT","C_MULTILINE_COMMENT","SH_SINGLE_COMMENT","WHITESPACE","EOL","COMMA","BRACE_OPEN","BRACE_CLOSE","COLON","BRACKET_OPEN","BRACKET_CLOSE","ZERO","DIGIT_NONZERO","DIGIT","QUOTE_DOUBLE","QUOTE_SINGLE","STRING_SINGLE_BODY","STRING_DOUBLE_BODY","DEFAULT","LEXICAL_ERROR","tokenImage","RJsonLexer","istream","input_stream","curChar","matchedKind","matchedPos","toToken","curLexState","strLiteralImages","matchedToken","curPos","EOFLoop","beginToken","fillToken","analyzeCurrentCharacter","error_line","getEndLine","error_column","getEndColumn","error_after","EOFSeen","e1","getImage","consume_char","charCodeAt","stopAtPos","moveChar01","moveChar","findNumber","code","startState","isDigit","active0","moveChar02","findStringLiteral","old0","moveChar03","moveChar04","pos","checkForSpace","beginLine","getBeginLine","beginColumn","getBeginColumn","endLine","endColumn","im","spaceDetected","RJsonParser","toReturn","anything","rawInput","ensureEOF","object","list","map","Map","objectKey","put","label_1","add","label_2","oldToken","generateParseException","k","l","jj_expentries","la1tokens","jj_expentry","exptokseq","getMessage","runParser","RJsonParserError","_currentTokenVal","_expectedTokenSequencesVal","_tokenImageVal","currentToken","expectedTokenSequences","eol","maxSize","expected","retval","tok","add_escapes","str","ch","charAt","substring","RJsonToken","ofkind","nimage","_kind","_image","_next","specialToken","newNext","_beginLine","_endLine","_beginColumn","_endColumn","newKind","RJsonTokenMgrError","lexState","errorLine","errorColumn","errorAfter","addEscapes","reason","message","LexicalError"],"mappings":"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","file":"app.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RJsonParser\"] = factory();\n\telse\n\t\troot[\"RJsonParser\"] = factory();\n})(this, function() {\nreturn ","import RJsonParser from \"./parser/RJsonParser\"\r\n\r\nimport css from \"./css/style.css\";\r\n\r\nvar example = {\"name\":\"sonoo\",\"salary\":600000.0,\"age\":27};\r\n\r\nformat();\r\n\r\nfunction formatInputString(jsonObj) {\r\n    var appendable = {\r\n        destination: \"\"\r\n    }\r\n    jsonObj.formatJsonToString(appendable, -1);\r\n    console.log(appendable.destination);\r\n    document.getElementById('inputtextarea').value = appendable.destination;\r\n}\r\n\r\nfunction formatHtml(jsonObj) {\r\n    var appendable = {\r\n        destination: \"\"\r\n    }\r\n    jsonObj.formatJsonToHtml(appendable, -1);\r\n    console.log(appendable.destination);\r\n    document.getElementById('json').innerHTML = appendable.destination;\r\n}\r\n\r\nfunction init() {\r\n    try {\r\n        console.log('reformatting.');\r\n        var target = document.getElementById('inputtextarea');\r\n        let instance = new RJsonParser(target.value);\r\n        \r\n        var jsonObj = instance.parse();\r\n        formatInputString(jsonObj);\r\n        formatHtml(jsonObj);\r\n    } catch (e) {\r\n        console.log(e.stack);\r\n        //document.getElementById('inputtextarea').innerHTML = e.message;\r\n    }\r\n}\r\n\r\nfunction format() {\r\n    try {\r\n        var target = document.getElementById('inputtextarea');\r\n        target.value = JSON.stringify(example);\r\n        init();\r\n        document.getElementById('loadjson').addEventListener('click', () => {\r\n            console.log('###############load json...' + document.getElementById('inputtextarea').value);\r\n            //alert('-----------' + document.getElementById('inputtextarea').innerHTML);\r\n            init();\r\n        })\r\n    } catch (e) {\r\n        console.log(e.stack);\r\n        //document.getElementById('inputtextarea').innerHTML = e.message;\r\n    }\r\n}\r\n\r\n\r\n","import String from '../io/String.js';\r\n\r\nvar logger = require('../logger/logger');\r\n\r\nexport default class CharStream {\r\n    maxBufSize = 4096;\r\n\r\n    constructor(stream) {\r\n        this.maxNextCharInd = 0;\r\n        this.nextCharInd = -1;\r\n\r\n        this.bufline = [];\r\n        this.bufcolumn = [];\r\n        this.column = 0;\r\n        this.line = 1;\r\n\r\n        this.bufpos = -1;\r\n        this.bufsize = 0;\r\n        this.available = this.maxBufSize;\r\n        this.inBuf = 0;\r\n\r\n        this.prevCharIsCR = false;\r\n        this.prevCharIsLF = false;\r\n        this.tabSize = 4;\r\n\r\n        this.tokenBegin = 0;\r\n        this.nextCharBuf = new Array(this.maxBufSize);\r\n        this.buffer = [];\r\n        this.inputStream = stream;\r\n    }\r\n\r\n    beginToken() {\r\n        if (this.inBuf > 0) {\r\n            // lookahead and backup has happened.\r\n            return this.readFromBuffer();\r\n        }\r\n        this.tokenBegin = 0;\r\n        this.bufpos = -1;\r\n        return this.readChar();\r\n    }\r\n\r\n    readChar() {\r\n        if (this.inBuf > 0) {\r\n            // lookahead and backup has happened.\r\n            return this.readFromBuffer();\r\n        }\r\n        if (++this.bufpos === this.available)\r\n            this.adjustBuffSize();\r\n\r\n        let c;\r\n        if ((this.buffer[this.bufpos] = c = this.readByte()) == '\\\\') {\r\n            return this.checkSpecial(c);\r\n        } else {\r\n            this.updateLineColumn(c);\r\n            return c;\r\n        }\r\n    }\r\n\r\n    readByte() {\r\n        \r\n        if (++this.nextCharInd >= this.maxNextCharInd)\r\n            this.fillBuff();\r\n        logger.debug(\"nextCharInd=\" + (this.nextCharInd) + \",this.maxNextCharInd=\" + this.maxNextCharInd);\r\n        return this.nextCharBuf[this.nextCharInd];\r\n    }\r\n\r\n    fillBuff() {\r\n        let i;\r\n        if (this.maxNextCharInd === this.maxBufSize)\r\n            this.maxNextCharInd = this.nextCharInd = 0;\r\n        try {\r\n            if ((i = this.inputStream.read(this.nextCharBuf, this.maxNextCharInd, this.maxBufSize - this.maxNextCharInd)) === -1) {\r\n                this.inputStream.close();\r\n                throw new Error(\"stream has not enough data.\");\r\n            } else {\r\n                this.maxNextCharInd += i;\r\n            }\r\n        } catch (e) {\r\n            if (this.bufpos != 0) {\r\n                --this.bufpos;\r\n                this.backup(0);\r\n            } else {\r\n                this.bufline[this.bufpos] = this.line;\r\n                this.bufcolumn[this.bufpos] = this.olumn;\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    backup(amount) {\r\n        //logger.debug('inBuf-' + this.inBuf + \",bufPos-\" + this.bufpos);\r\n        this.inBuf += amount;\r\n        if ((this.bufpos -= amount) < 0)\r\n            this.bufpos += this.bufsize;\r\n        //this.tokenBegin = amount;\r\n        //logger.debug('inBuf-' + this.inBuf + \",bufPos-\" + this.bufpos);\r\n    }\r\n\r\n    readFromBuffer() {\r\n        //logger.debug('reading from inBuf-' + this.inBuf);\r\n        --this.inBuf;\r\n        if (++this.bufpos == this.bufsize)\r\n            this.bufpos = 0;\r\n        return this.buffer[this.bufpos];\r\n    }\r\n\r\n    adjustBuffSize() {\r\n        if (this.available === this.bufsize) {\r\n            if (this.tokenBegin > 2048) {\r\n                this.bufpos = 0;\r\n            } else {\r\n                this.expandBuff(true);\r\n            }\r\n        } else if (this.available > this.tokenBegin) {\r\n            this.available = this.bufsize;\r\n        } else if ((this.tokenBegin - this.available) < 2048) {\r\n            this.expandBuff(true);\r\n        } else {\r\n            this.available = this.tokenBegin;\r\n        }\r\n    }\r\n\r\n    expandBuff() {\r\n        throw new Error(\"Implementation to be done....\");\r\n    }\r\n\r\n    checkSpecial(c) {\r\n        throw new Error(\"Implementation to be done....\");\r\n    }\r\n\r\n    updateLineColumn(c) {\r\n        this.column++;\r\n        if (this.prevCharIsLF) {\r\n            this.prevCharIsLF = false;\r\n            this.line += (this.column = 1);\r\n        } else if (this.prevCharIsCR) {\r\n            this.prevCharIsCR = false;\r\n            if (c == '\\n') {\r\n                this.prevCharIsLF = true;\r\n            } else {\r\n                this.line += (this.column = 1);\r\n            }\r\n        }\r\n\r\n        switch (c) {\r\n            case '\\r':\r\n                this.tokenBegin++;\r\n                this.prevCharIsCR = true;\r\n                break;\r\n            case '\\n':\r\n                this.tokenBegin++;\r\n                this.prevCharIsLF = true;\r\n                break;\r\n            case '\\t':\r\n                this.tokenBegin++;\r\n                this.column--;\r\n                this.column += (this.tabSize - (this.column % this.tabSize));\r\n                break;\r\n            case 32:\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.bufline[this.bufpos] = this.line;\r\n        this.bufcolumn[this.bufpos] = this.column;\r\n    }\r\n\r\n    spaceDetected() {\r\n        this.tokenBegin++;\r\n    }\r\n\r\n    getImage() {\r\n        var response;\r\n        //logger.debug(\"bufpos=\" + this.bufpos + \",tokenBegin=\" + this.tokenBegin);\r\n        //logger.debug(\"buffer=\" + this.buffer[0] + \",\" + this.buffer[1] + \",\" + this.buffer[2] + \",\" + this.buffer[3] + \",\" + this.buffer[4]);\r\n        if (this.bufpos >= this.tokenBegin) {\r\n            response = new String(this.buffer, this.tokenBegin, this.bufpos - this.tokenBegin + 1);\r\n            //logger.debug(\"response=\" + response.toString());\r\n        } else {\r\n            response = new String(this.buffer, this.tokenBegin, this.bufsize - this.tokenBegin).toString() + new String(this.buffer, 0, this.bufpos + 1).toString();\r\n            //logger.debug(\"response=\" + response.toString());\r\n        }\r\n        return response.stringify();\r\n    }\r\n\r\n    get getColumn() {\r\n        return this.bufcolumn[this.bufpos];\r\n    }\r\n\r\n    get getLine() {\r\n        return this.bufline[this.bufpos];\r\n    }\r\n\r\n    get getEndLine() {\r\n        return this.bufline[this.bufpos];\r\n    }\r\n\r\n    get getBeginColumn() {\r\n        return this.bufcolumn[this.tokenBegin];\r\n    }\r\n\r\n    get getBeginLine() {\r\n        return this.bufline[this.tokenBegin];\r\n    }\r\n}","export default class Reader {\r\n\r\n    constructor(newInput) {\r\n        if (this.constructor === Reader) {\r\n            throw new TypeError(\"Can not construct abstract class.\");\r\n        }\r\n\r\n        if (this.read === Reader.prototype.read) {\r\n            // Error Type 4. Child has not implemented this abstract method.\r\n            throw new TypeError(\"Please implement abstract method read.\");\r\n        }\r\n\r\n        if (this.getChars === Reader.prototype.getChars) {\r\n            // Error Type 4. Child has not implemented this abstract method.\r\n            throw new TypeError(\"Please implement abstract method getChars.\");\r\n        }\r\n\r\n        if (this.close === Reader.prototype.close) {\r\n            // Error Type 4. Child has not implemented this abstract method.\r\n            throw new TypeError(\"Please implement abstract close getChars.\");\r\n        }\r\n        \r\n        this.input = newInput;\r\n        this.length = this.input.length;\r\n        this.next = 0;\r\n        this.mark = 0;\r\n    }\r\n\r\n    read(cbuf, offset, len) {\r\n        throw new TypeError(\"Do not call abstract method read from child.\");\r\n    }\r\n\r\n    getChars(srcBegin, srcEnd, dst, dstBegin) {\r\n        throw new TypeError(\"Do not call abstract method getChars from child.\");\r\n    }\r\n\r\n    close() {\r\n        throw new TypeError(\"Do not call abstract method close from child.\");\r\n    }\r\n\r\n    ensureOpen() {\r\n        if (this.input === null)\r\n            throw new Error('Stream closed');\r\n    }\r\n}","export default class String {\r\n\r\n    constructor(chars, offset, count) {\r\n        if (offset < 0)\r\n            throw new Error('Offset cannot be negative');\r\n        if (count < 0)\r\n            throw new Error('count cannot be negative');\r\n\r\n        let i;\r\n        this.value = [];\r\n        for (i = offset; i < (offset + count); i++) {\r\n            //this.value.push(chars[i]);\r\n            if(chars[i] != '\\\"')\r\n                this.value[i] = chars[i];\r\n        }\r\n    }\r\n\r\n    toString() {\r\n        return this.value.join(\"\");\r\n    }\r\n\r\n    stringify() {\r\n        return this.value.join(\"\");\r\n    }\r\n}\r\n","import Reader from './Reader.js';\r\n\r\nvar logger = require('../logger/logger');\r\n\r\nexport default class StringReader extends Reader {\r\n\r\n    constructor(newInput) {\r\n        super(newInput);\r\n    }\r\n    /*\r\n     * Reads characters into a portion of an array. This method will block until some input is \r\n     * available, an I/O error occurs, or the end of the stream is reached.\r\n     * \r\n     * return The number of characters read, or -1 if the end of the stream has been reached\r\n     */\r\n    read(cbuf, offset, len) {\r\n        this.ensureOpen();\r\n        if ((offset < 0) || (offset > cbuf.length) || (len < 0) ||\r\n            ((offset + len) > cbuf.length) || ((offset + len) < 0)) {\r\n            throw new Error('index out of bounds.');\r\n        } else if (len == 0) {\r\n            return 0;\r\n        }\r\n        if (this.next >= this.length)\r\n            return -1;\r\n        var n = Math.min(this.length - this.next, len);\r\n        this.getChars(this.next, this.next + n, cbuf, offset);\r\n        this.next += n;\r\n        return n;\r\n    }\r\n\r\n    getChars(srcBegin, srcEnd, dst, dstBegin) {\r\n        if (srcBegin < 0) {\r\n            new Error('index out of bounds - ' + srcBegin);\r\n        }\r\n        if (srcEnd > this.input.length) {\r\n            new Error('index out of bounds - ' + srcEnd);\r\n        }   \r\n        if (srcBegin > srcEnd) {\r\n            throw new Error('index out of bounds - ' + (srcEnd - srcBegin));\r\n        }\r\n        var i;\r\n        for(i = srcBegin; i <= srcEnd; i++) {\r\n            dst[dstBegin] = this.input[i];\r\n            dstBegin++;\r\n        }\r\n    }\r\n\r\n    close() {\r\n        this.input = null;\r\n    }\r\n}","\r\nimport JsonObject from './JsonObject.js';\r\n\r\nexport default class JsonBoolean extends JsonObject {\r\n\r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        //console.log('destination->' + destination);\r\n        if(this._input)\r\n            appendable.destination = true;\r\n        else \r\n            appendable.destination = false;\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        destination += \"<span class=\\\"type-boolean\\\">\";\r\n        destination += this._input + \"</span>\";\r\n        appendable.destination = destination;\r\n    }\r\n}","\r\nimport JsonObject from './JsonObject.js';\r\n\r\nexport default class JsonList extends JsonObject {\r\n    \r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n    }\r\n\r\n    add(jsonObject) {\r\n        this._input.push(jsonObject);\r\n        return this;\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        ++currentLevel;\r\n        let tabs = '';\r\n        let i,j;\r\n        for (i = 0; i < currentLevel; i++)\r\n            tabs += \"\\t\";\r\n        let destination = \"\";\r\n        destination += \"\\n\" + tabs + \"[\\n\";\r\n        j = 0;\r\n        let size = this._input.length;\r\n        this._input.forEach(element => {\r\n            var cAppendable = {\r\n                destination : \"\"\r\n            }\r\n            element.formatJsonToString(cAppendable,currentLevel);\r\n            destination += cAppendable.destination;\r\n            if(j != (size-1))\r\n                destination += \",\\n\";\r\n            j++;\r\n        });\r\n        destination += \"\\n\" + tabs + \"]\";\r\n        appendable.destination += destination;\r\n        //console.log('destination->' + destination);\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        if(this._root) {\r\n            destination += \"<div class=\\\"json-viewer\\\"><code class=\\\"js\\\" id=\\\"js\\\">\";\r\n        }\r\n        \r\n        let size = this._input.length;\r\n        destination += \"<a class=\\\"list-link\\\" href=\\\"javascript:void(0)\\\">[\";\r\n        destination += \"<span style=\\\"color: #1d57d4;\\\"><i onClick=\\\"spanClicked(event);\\\" class=\\\"far fa-minus-square\\\"></i></span>\";\r\n        destination += \"<span style=\\\"color: #1d57d4;\\\" class=\\\"hide\\\"><i onClick=\\\"spanClicked(event);\\\" class=\\\"fas fa-plus-square\\\"></i></span>\";\r\n        destination += \"<span class=\\\"hide\\\"><span onClick=\\\"spanClicked(event);\\\" class=\\\"items-ph\\\">\" + size + \" items</span></span>\";\r\n        destination += \"</a>\";\r\n        let i,j;\r\n        destination += \"<ul data-level=\\\"\" + ++currentLevel + \"\\\" class=\\\"type-array\\\">\";\r\n        this._input.forEach(element => {\r\n            j++;\r\n            destination += \"<li>\";\r\n            var cAppendable = {\r\n                destination : 0\r\n            }\r\n            element.formatJsonToHtml(cAppendable,currentLevel);\r\n            destination += cAppendable.destination;\r\n            if(j != (size-1))\r\n                destination += \"<span class=\\\"type-comma\\\">\" + \",\" + \"</span>\";\r\n            destination += \"</li>\";\r\n        });\r\n        destination += \"</ul>\";\r\n        destination += \"<span class=\\\"type-symbol\\\">]</span>\";\r\n        if(this._root) {\r\n            destination += \"</code></div>\";\r\n        }\r\n\r\n        appendable.destination = destination;\r\n    }\r\n}","var logger = require('../logger/logger');\r\n\r\nimport JsonObject from './JsonObject.js';\r\n\r\nexport default class JsonMap extends JsonObject {\r\n    \r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n    }\r\n\r\n    put(jsonObjectKey,jsonObjectValue) {\r\n        this._input.set(jsonObjectKey, jsonObjectValue);\r\n        logger.debug('map size ->' + this._input.size);\r\n        return this;\r\n    }\r\n    \r\n    formatJsonToString(appendable, currentLevel) {\r\n        ++currentLevel;\r\n        let tabs = '';\r\n        let i,j;\r\n        for (i = 0; i < currentLevel; i++)\r\n            tabs += \"\\t\";\r\n        let destination = \"\";\r\n        destination += \"\" + tabs + \"{\\n\";\r\n        j = 0;\r\n        let size = this._input.size;\r\n        logger.info('size of the map ' + this._input.size);\r\n\r\n        this._input.forEach(function(value, key) {\r\n            var keyAppendable = {\r\n                destination : \"\"\r\n            }\r\n            var valueAppendable = {\r\n                destination : \"\"\r\n            }\r\n         \r\n            key.formatJsonToString(keyAppendable,currentLevel);\r\n            destination += keyAppendable.destination;\r\n            destination += \" : \";\r\n            \r\n            value.keyValue = true;\r\n            value.formatJsonToString(valueAppendable,currentLevel);\r\n            destination += valueAppendable.destination;\r\n            if(j != (size-1))\r\n                destination += \",\\n\";\r\n            j++;  \r\n        });\r\n        destination += \"\\n\" + tabs + \"}\";\r\n        appendable.destination += destination;\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        logger.debug('formatting to html...' + this._root);\r\n        if(this._root) {\r\n            destination += \"<div class=\\\"json-viewer\\\"><code class=\\\"js\\\" id=\\\"js\\\">\";\r\n        }\r\n        logger.debug('formatting to html...');\r\n        \r\n        let size = this._input.size;\r\n        destination += \"<a class=\\\"list-link\\\" href=\\\"javascript:void(0)\\\">{\";\r\n        destination += \"<span style=\\\"color: #1d57d4;\\\"><i onClick=\\\"spanClicked(event);\\\" class=\\\"far fa-minus-square\\\"></i></span>\";\r\n        destination += \"<span style=\\\"color: #1d57d4;\\\" class=\\\"hide\\\"><i onClick=\\\"spanClicked(event);\\\" class=\\\"fas fa-plus-square\\\"></i></span>\";\r\n        destination += \"<span class=\\\"hide\\\"><span onClick=\\\"spanClicked(event);\\\" class=\\\"items-ph\\\">\" + size + \" items</span></span>\";\r\n        destination += \"</a>\";\r\n        let j;\r\n        destination += \"<ul data-level=\\\"\" + ++currentLevel + \"\\\" class=\\\"type-array\\\">\";\r\n        this._input.forEach(function(value, key) {\r\n            destination += \"<li>\";\r\n            var keyAppendable = {\r\n                destination : \"\"\r\n            }\r\n            key.formatJsonToHtml(keyAppendable,currentLevel);\r\n            destination += keyAppendable.destination;\r\n            destination += \"<span class=\\\"type-colon\\\">:</span>\";\r\n\t\t\tvar valueAppendable = {\r\n                destination : \"\"\r\n            }\r\n            value.formatJsonToHtml(valueAppendable,currentLevel);\r\n            destination += valueAppendable.destination;\r\n           \r\n            if(j != (size-1))\r\n                destination += \"<span class=\\\"type-comma\\\">\" + \",\" + \"</span>\";\r\n            destination += \"</li>\";\r\n            j++;  \r\n        });\r\n        destination += \"</ul>\";\r\n        destination += \"<span class=\\\"type-symbol\\\">}</span>\";\r\n        if(this._root) {\r\n            destination += \"</code></div>\";\r\n        }\r\n\r\n        appendable.destination = destination;\r\n    }\r\n}","\r\nimport JsonObject from './JsonObject.js';\r\n\r\nexport default class JsonBoolean extends JsonObject {\r\n\r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        //console.log('destination->' + destination);\r\n        appendable.destination = null;\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        destination += \"<span class=\\\"type-null\\\">\";\r\n        destination += this._input + \"</span>\";\r\n        appendable.destination = destination;\r\n    }\r\n}","\r\nimport JsonObject from './JsonObject.js';\r\n\r\nexport default class JsonNumber extends JsonObject {\r\n\r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        //console.log('destination->' + destination);\r\n        appendable.destination += this._input;\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        destination += \"<span class=\\\"type-number\\\">\";\r\n        destination += this._input + \"</span>\";\r\n        appendable.destination = destination;\r\n    }\r\n}","export default class JsonObject {\r\n\r\n    constructor(root, isKey, input) {\r\n        // if (this.constructor === JsonObject) {\r\n        //     throw new TypeError(\"Can not construct abstract class.\");\r\n        // }\r\n\r\n        if (this.formatJsonToString === JsonObject.prototype.formatJsonToString) {\r\n            // Error Type 4. Child has not implemented this abstract method.\r\n            throw new TypeError(\"Please implement abstract method formatJsonToString.\");\r\n        }\r\n\r\n        if (this.formatJsonToHtml === JsonObject.prototype.formatJsonToHtml) {\r\n            // Error Type 4. Child has not implemented this abstract method.\r\n            throw new TypeError(\"Please implement abstract method formatJsonToHtml.\");\r\n        }\r\n        this._root = root;\r\n        this._isKey = isKey;\r\n        this._input = input;\r\n        this._keyValue = false;\r\n        this._rawInput = '';\r\n    }\r\n\r\n    get root() {\r\n        return this._root;\r\n    }\r\n\r\n    set root(newRoot) {\r\n        this._root = newRoot;\r\n    }\r\n\r\n    get isKey() {\r\n        return this._isKey;\r\n    }\r\n\r\n    set isKey(newKey) {\r\n        this._isKey = newKey;\r\n    }\r\n\r\n    get input() {\r\n        return this._input;\r\n    }\r\n\r\n    set input(newInput) {\r\n        this._input = newInput;\r\n    }\r\n\r\n    get rawInput() {\r\n        return this._rawInput;\r\n    }\r\n\r\n    set rawInput(raw) {\r\n        this._rawInput = raw;\r\n    }\r\n\r\n    set keyValue(newValue) {\r\n        this._keyValue = newValue;\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        throw new TypeError(\"Do not call abstract method toString from child.\");\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        throw new TypeError(\"Do not call abstract method toHtml from child.\");\r\n    }\r\n}","import JsonObject from './JsonObject.js';\r\n\r\nvar logger = require('../logger/logger');\r\n\r\nexport default class JsonString extends JsonObject {\r\n\r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        ++currentLevel;\r\n        let destination = \"\";\r\n        let tabs = '';\r\n        let i;\r\n        for (i = 0; i < currentLevel; i++)\r\n            tabs = tabs.concat(\"\\t\");\r\n        logger.debug('appendable->' + appendable);\r\n        if (this._isKey) {\r\n            destination += tabs + \"\\\"\" + this._input + \"\\\"\";\r\n        } else if (this._keyValue) {    \r\n            destination += \"\\\"\" + this._input + \"\\\"\";\r\n        } else {\r\n            destination += tabs + \"\\\"\" + this._input + \"\\\"\";\r\n        }\r\n        logger.debug('destination->' + destination);\r\n        appendable.destination = destination;\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        if (this._isKey) {\r\n            destination += \"<span class=\\\"type-key\\\">\\\"\";\r\n        } else {\r\n            destination += \"<span class=\\\"type-string\\\">\\\"\";\r\n        }\r\n        destination += this._input + \"\\\"</span>\";\r\n        appendable.destination = destination;\r\n    }\r\n}","module.exports.debug = (msg) => {\r\n    //console.log(msg);\r\n}\r\nmodule.exports.info = (msg) => {\r\n    //console.log(msg);\r\n}","import JsonString from \"../json/JsonString\";\r\nimport JsonBoolean from \"../json/JsonBoolean\";\r\nimport JsonNumber from \"../json/JsonNumber\";\r\nimport JsonNull from \"../json/JsonNull\";\r\nimport RJsonConstants from \"./RJsonConstants\";\r\nimport StringReader from \"../io/StringReader\";\r\nimport CharStream from \"../io/CharStream\";\r\nimport RJsonLexer from \"./RJsonLexer\";\r\nimport RJsonToken from \"./RJsonToken\";\r\n\r\nexport default class RJsonAbsParser extends RJsonConstants {\r\n\r\n    constructor(rinput,startNow) {\r\n        super();\r\n        \r\n        if(startNow === undefined) {\r\n            this.init(rinput);\r\n        }\r\n    }\r\n\r\n    init(rinput) {\r\n        this.input = rinput;\r\n        this.reader = new StringReader(this.input);\r\n        this.stream = new CharStream(this.reader);\r\n        this.lexer = new RJsonLexer(this.stream);\r\n        this.token = new RJsonToken();\r\n        this.token.next = this.jj_nt = this.lexer.getNextToken();\r\n        this.jj_gen = 0;\r\n        this.jj_la1 = new Array(13);\r\n        this.jj_la1_0 = [0xccf8480, 0x78000, 0x1ccf8000, 0x40, 0x1ccf8000, 0x40, 0xccf8480, 0xccf8000, 0x60000, 0x18000, 0xcc00000, 0x8800000, 0x4400000,];;\r\n        var i;\r\n        for (i = 0; i < 13; i++)\r\n            this.jj_la1[i] = -1;\r\n\r\n        this.jj_kind = -1;\r\n        this.nativeNumbers = false;\r\n    }\r\n\r\n    getNextToken() {\r\n        if ((this.token = this.jj_nt).next != null) this.jj_nt = this.jj_nt.next;\r\n        else this.jj_nt = this.jj_nt.next = this.lexer.getNextToken();\r\n        this.jj_gen++;\r\n        return this.token;\r\n    }\r\n\r\n    objectKey() {\r\n        let o, key;\r\n        switch (this.jj_nt.kind) {\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                key = this.string();\r\n                break;\r\n            case SYMBOL:\r\n                key = this.symbol();\r\n                break;\r\n            case NULL:\r\n                this.nullValue();\r\n                key = null;\r\n                break;\r\n            case this.NUMBER_INTEGER:\r\n            case this.NUMBER_DECIMAL:\r\n            case this.TRUE:\r\n            case this.FALSE:\r\n                switch (this.jj_nt.kind) {\r\n                    case this.TRUE:\r\n                    case this.FALSE:\r\n                        o = this.booleanValue();\r\n                        break;\r\n                    case this.NUMBER_INTEGER:\r\n                    case this.NUMBER_DECIMAL:\r\n                        o = this.number();\r\n                        break;\r\n                    default:\r\n                        this.jj_la1[1] = this.jj_gen;\r\n                        this.jj_consume_token(-1);\r\n                        throw new Error();\r\n                }\r\n                key = o;\r\n                break;\r\n            default:\r\n                this.jj_la1[2] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n        { if (true) { key.key = true; return key; } }\r\n    }\r\n\r\n    string() {\r\n        let s;\r\n        switch (this.jj_nt.kind) {\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                s = this.doubleQuoteString();\r\n                break;\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n                s = this.singleQuoteString();\r\n                break;\r\n            default:\r\n                this.jj_la1[10] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n        { if (true) return s; }\r\n    }\r\n\r\n    doubleQuoteString() {\r\n        switch (this.jj_nt.kind) {\r\n            case this.STRING_DOUBLE_EMPTY:\r\n                this.jj_consume_token(this.STRING_DOUBLE_EMPTY);\r\n                { if (true) return new JsonString(false, false, \"\"); }\r\n                break;\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                this.jj_consume_token(this.STRING_DOUBLE_NONEMPTY);\r\n                var image = this.token.image;\r\n                { if (true) return new JsonString(false, false, image); }\r\n                break;\r\n            default:\r\n                this.jj_la1[11] = this.sjj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n    }\r\n\r\n    singleQuoteString() {\r\n        switch (this.jj_nt.kind) {\r\n            case this.STRING_SINGLE_EMPTY:\r\n                this.jj_consume_token(this.STRING_SINGLE_EMPTY);\r\n                { if (true) return new JsonString(false, false, \"\"); }\r\n                break;\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n                this.jj_consume_token(this.STRING_SINGLE_NONEMPTY);\r\n                var image = token.image;\r\n                { if (true) return new JsonString(false, false, image); }\r\n                break;\r\n            default:\r\n                this.jj_la1[12] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n    }\r\n\r\n    symbol() {\r\n        this.jj_consume_token(this.SYMBOL);\r\n        { if (true) return new JsonString(false, false, token.image); }\r\n    }\r\n\r\n    nullValue() {\r\n        this.jj_consume_token(this.NULL);\r\n        { if (true) return new JsonNull(); }\r\n    }\r\n\r\n    booleanValue() {\r\n        var b;\r\n        switch (this.jj_nt.kind) {\r\n            case this.TRUE:\r\n                this.jj_consume_token(this.TRUE);\r\n                b = true;\r\n                break;\r\n            case this.FALSE:\r\n                this.jj_consume_token(this.FALSE);\r\n                b = false;\r\n                break;\r\n            default:\r\n                this.jj_la1[8] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n        { if (true) return new JsonBoolean(b); }\r\n    }\r\n\r\n    value() {\r\n        let x;\r\n        switch (this.jj_nt.kind) {\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                x = this.string();\r\n                break;\r\n            case this.NUMBER_INTEGER:\r\n            case this.NUMBER_DECIMAL:\r\n                x = this.number();\r\n                break;\r\n            case this.TRUE:\r\n            case this.FALSE:\r\n                x = this.booleanValue();\r\n                break;\r\n            case this.NULL:\r\n                x = this.nullValue();\r\n                break;\r\n            default:\r\n                this.jj_la1[7] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n        { if (true) return x; }\r\n    }\r\n\r\n    number() {\r\n        let t;\r\n        switch (this.jj_nt.kind) {\r\n            case this.NUMBER_DECIMAL:\r\n                t = this.jj_consume_token(this.NUMBER_DECIMAL);\r\n                if (nativeNumbers) {\r\n                    { if (true) return new JsonNumber(false, false, t.image); }\r\n                } else {\r\n                    { if (true) return new JsonNumber(false, false, t.image); }\r\n                }\r\n                break;\r\n            case this.NUMBER_INTEGER:\r\n                t = this.jj_consume_token(this.NUMBER_INTEGER);\r\n                if (this.nativeNumbers) {\r\n                    { if (true) return new JsonNumber(false, false, t.image); }\r\n                } else {\r\n                    { if (true) return new JsonNumber(false, false, t.image); }\r\n                }\r\n                break;\r\n            default:\r\n                this.jj_la1[9] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n    }\r\n}","export default class RJsonConstants {\r\n\r\n    constructor() {\r\n        /** End of File. */\r\n        this.EOF = 0;\r\n        /** RegularExpression Id. */\r\n        this.C_SINGLE_COMMENT = 1;\r\n        /** RegularExpression Id. */\r\n        this.C_MULTILINE_COMMENT = 2;\r\n        /** RegularExpression Id. */\r\n        this.SH_SINGLE_COMMENT = 3;\r\n        /** RegularExpression Id. */\r\n        this.WHITESPACE = 4;\r\n        /** RegularExpression Id. */\r\n        this.EOL = 5;\r\n        /** RegularExpression Id. */\r\n        this.COMMA = 6;\r\n        /** RegularExpression Id. */\r\n        this.BRACE_OPEN = 7;\r\n        /** RegularExpression Id. */\r\n        this.BRACE_CLOSE = 8;\r\n        /** RegularExpression Id. */\r\n        this.COLON = 9;\r\n        /** RegularExpression Id. */\r\n        this.BRACKET_OPEN = 10;\r\n        /** RegularExpression Id. */\r\n        this.BRACKET_CLOSE = 11;\r\n        /** RegularExpression Id. */\r\n        this.ZERO = 12;\r\n        /** RegularExpression Id. */\r\n        this.DIGIT_NONZERO = 13;\r\n        /** RegularExpression Id. */\r\n        this.DIGIT = 14;\r\n        /** RegularExpression Id. */\r\n        this.NUMBER_INTEGER = 15;\r\n        /** RegularExpression Id. */\r\n        this.NUMBER_DECIMAL = 16;\r\n        /** RegularExpression Id. */\r\n        this.TRUE = 17;\r\n        /** RegularExpression Id. */\r\n        this.FALSE = 18;\r\n        /** RegularExpression Id. */\r\n        this.NULL = 19;\r\n        /** RegularExpression Id. */\r\n        this.QUOTE_DOUBLE = 20;\r\n        /** RegularExpression Id. */\r\n        this.QUOTE_SINGLE = 21;\r\n        /** RegularExpression Id. */\r\n        this.STRING_SINGLE_EMPTY = 22;\r\n        /** RegularExpression Id. */\r\n        this.STRING_DOUBLE_EMPTY = 23;\r\n        /** RegularExpression Id. */\r\n        this.STRING_SINGLE_BODY = 24;\r\n        /** RegularExpression Id. */\r\n        this.STRING_DOUBLE_BODY = 25;\r\n        /** RegularExpression Id. */\r\n        this.STRING_SINGLE_NONEMPTY = 26;\r\n        /** RegularExpression Id. */\r\n        this.STRING_DOUBLE_NONEMPTY = 27;\r\n        /** RegularExpression Id. */\r\n        this.SYMBOL = 28;\r\n\r\n        /** Lexical state. */\r\n        this.DEFAULT = 0;\r\n\r\n        this.LEXICAL_ERROR = 0;\r\n\r\n        /** Literal token values. */\r\n        this.tokenImage = [\r\n            \"<EOF>\",\r\n            \"<C_SINGLE_COMMENT>\",\r\n            \"<C_MULTILINE_COMMENT>\",\r\n            \"<SH_SINGLE_COMMENT>\",\r\n            \"<WHITESPACE>\",\r\n            \"<EOL>\",\r\n            \"\\\",\\\"\",\r\n            \"\\\"{\\\"\",\r\n            \"\\\"}\\\"\",\r\n            \"\\\":\\\"\",\r\n            \"\\\"[\\\"\",\r\n            \"\\\"]\\\"\",\r\n            \"\\\"0\\\"\",\r\n            \"<DIGIT_NONZERO>\",\r\n            \"<DIGIT>\",\r\n            \"<NUMBER_INTEGER>\",\r\n            \"<NUMBER_DECIMAL>\",\r\n            \"\\\"true\\\"\",\r\n            \"\\\"false\\\"\",\r\n            \"\\\"null\\\"\",\r\n            \"\\\"\\\\\\\"\\\"\",\r\n            \"\\\"\\\\\\'\\\"\",\r\n            \"\\\"\\\\\\'\\\\\\'\\\"\",\r\n            \"\\\"\\\\\\\"\\\\\\\"\\\"\",\r\n            \"<STRING_SINGLE_BODY>\",\r\n            \"<STRING_DOUBLE_BODY>\",\r\n            \"<STRING_SINGLE_NONEMPTY>\",\r\n            \"<STRING_DOUBLE_NONEMPTY>\",\r\n            \"<SYMBOL>\",\r\n        ];\r\n    }\r\n}","import RJsonToken from './RJsonToken.js';\r\nimport RJsonTokenMgrError from './RJsonTokenMgrError.js';\r\nimport RJsonConstants from './RJsonConstants.js';\r\n\r\nvar logger = require('../logger/logger');\r\n\r\nexport default class RJsonLexer extends RJsonConstants {\r\n\r\n    constructor(istream) {\r\n        super();\r\n        this.input_stream = istream;\r\n        this.curChar = '';\r\n        this.matchedKind = 0;\r\n        this.matchedPos = 0;\r\n        this.toToken = [0x1ccf8fc1,];\r\n        this.curLexState = 0;\r\n        // this.strLiteralImages = [\r\n        //     \"\", null, null, null, null, 'null', '0o54', 0o173, 0o175, 0o072, 0o133, \r\n        //     0o135, null, null, null, null, null, null, null, null, null, null, \"\\'\", \r\n        //     \"\\\"\", null, null, null, null, null, ];\r\n        this.strLiteralImages = [\r\n            \"\", null, null, null, null, 'null', ',', '{', '}', ':', '[',\r\n            ']', null, null, null, null, null, null, null, null, null, null, \"\\'\",\r\n            \"\\\"\", null, null, null, null, null,];\r\n    }\r\n\r\n    getNextToken() {\r\n        logger.debug(\"getNextToken()\");\r\n        var matchedToken = null;\r\n        var curPos = 0;\r\n        EOFLoop:\r\n        for (; ;) {\r\n            try {\r\n                this.curChar = this.input_stream.beginToken();\r\n            } catch (e) {\r\n                //logger.debug(e.stack);\r\n                this.matchedKind = 0;\r\n                matchedToken = this.fillToken();\r\n                return matchedToken;\r\n            }\r\n            logger.debug(\"this.curChar =\" + this.curChar);\r\n            this.matchedKind = 0x7fffffff;\r\n            this.matchedPos = 0;\r\n            curPos = this.analyzeCurrentCharacter();\r\n            logger.debug(\"matchedKind()->\" + this.matchedKind + \",curPos->\" + curPos);\r\n            if (this.matchedKind != 0x7fffffff) {\r\n               \r\n                if (this.matchedPos + 1 < curPos) {\r\n                    this.input_stream.backup(curPos - this.matchedPos - 1); // possible backtracking.\r\n                }\r\n                logger.debug(\"curPos=\" + curPos);\r\n                if ((this.matchedKind == this.C_SINGLE_COMMENT)\r\n                    || (this.matchedKind == this.C_MULTILINE_COMMENT)) {\r\n                    this.matchedToken = this.fillToken();\r\n                    logger.debug(\"getNextToken()::Matched\" + this.matchedKind);\r\n                    return matchedToken;\r\n                }\r\n                if (this.matchedKind == this.BRACE_OPEN || this.matchedKind == this.TRUE\r\n                    || this.matchedKind == this.NUMBER_INTEGER\r\n                    || this.matchedKind == this.NULL\r\n                    || this.matchedKind == this.COMMA) {\r\n                    matchedToken = this.fillToken();\r\n                    logger.debug(\"getNextToken()::Matched->\" + matchedToken);\r\n                    return matchedToken;\r\n                }\r\n                if ((this.toToken[this.matchedKind >> 6] & (1 << (this.matchedKind & 77))) != 0) {\r\n                    matchedToken = this.fillToken();\r\n                    logger.debug(\"getNextToken()::Matched >> 6->\" + this.matchedKind);\r\n                    return matchedToken;\r\n                } else {\r\n                    continue EOFLoop;\r\n                }\r\n            }\r\n            // error begins.....\r\n            let error_line = this.input_stream.getEndLine;\r\n            let error_column = this.input_stream.getEndColumn;\r\n            let error_after = null;\r\n            let EOFSeen = false;\r\n            try {\r\n                this.input_stream.readChar();\r\n                this.input_stream.backup(1);\r\n            } catch (e1) {\r\n                logger.debug(e1.stack);\r\n                EOFSeen = true;\r\n                error_after = curPos <= 1 ? \"\" : this.input_stream.getImage();\r\n                if (this.curChar == '\\n' || this.curChar == '\\r') {\r\n                    error_line++;\r\n                    error_column = 0;\r\n                } else {\r\n                    error_column++;\r\n                }\r\n            }\r\n            logger.debug('xxxxxxxxxxxx');\r\n            if (!EOFSeen) {\r\n                logger.debug('xxxxxxxxxxxx');\r\n                this.input_stream.backup(1);\r\n                error_after = curPos <= 1 ? \"\" : this.input_stream.getImage();\r\n            }\r\n            logger.debug('zzzzzzzzzzzzzzzz');\r\n            throw new RJsonTokenMgrError(EOFSeen, this.curLexState, error_line, error_column, error_after, this.curChar, this.LEXICAL_ERROR);\r\n        }\r\n    }\r\n\r\n    analyzeCurrentCharacter() {\r\n        if (this.curChar == ' ' || this.curChar == '\\t' || this.curChar == '\\n' || this.curChar == '\\r') {\r\n            this.consume_char();\r\n            try {\r\n                this.curChar = this.input_stream.readChar();\r\n            } catch (e) {\r\n                // hack for special characters after the last token.\r\n                this.matchedKind = 0;\r\n                return 1;\r\n            }\r\n            return this.analyzeCurrentCharacter();\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        //logger.debug('analyzeCurrentCharacter()->' + code);\r\n        switch (code) {\r\n            case 123: // '{'\r\n                return this.stopAtPos(0, this.BRACE_OPEN);\r\n            case 125: // '}'\r\n                return this.stopAtPos(0, this.BRACE_CLOSE);\r\n            case 34: // '\"'\r\n                return this.moveChar01(8);\r\n            case 39: // '\\''\r\n                return this.moveChar01(4);\r\n            case 44: // ','\r\n                return this.stopAtPos(0, this.COMMA);\r\n            case 58: // ':'\r\n                return this.stopAtPos(0, this.COLON);\r\n            case 91: // '['\r\n                return this.stopAtPos(0, this.BRACKET_OPEN);\r\n            case 93: // ']'\r\n                return this.stopAtPos(0, this.BRACKET_CLOSE);\r\n            case 70: // 'F'\r\n            case 102: // 'f'\r\n                return this.moveChar01(4);\r\n            case 78: // 'N'\r\n            case 110: // 'n'\r\n                return this.moveChar01(8);\r\n            case 84: // 'T'\r\n            case 116: // 't'\r\n                return this.moveChar01(2);\r\n            case 47: // '/'\r\n                return this.moveChar01(6);\r\n            case 35: // '#'\r\n                return this.moveChar(0, '\\n');\r\n            default:\r\n                return this.findNumber(0, 0);\r\n        }\r\n    }\r\n\r\n    isDigit() {\r\n        logger.debug(\"\\\"\" + this.curChar + \"\\\"\");\r\n        let code = this.curChar.charCodeAt();\r\n\r\n        if (code == 46) { // '.'\r\n            return true;\r\n        }\r\n\r\n        if (code > 47 && code < 58) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    findNumber(startState, curPos) {\r\n        logger.debug(\"\\\"\" + this.curChar + \"\\\"\");\r\n        while (this.isDigit()) {\r\n            ++curPos;\r\n            try {\r\n                this.curChar = this.input_stream.readChar();\r\n            } catch (e) {\r\n                return curPos;\r\n            }\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        logger.debug(\"\\\"\" + this.curChar + \"\\\"\");\r\n        if (code == 44 || code == 125\r\n            || this.curChar == '\\r' || this.curChar == '\\n' || this.curChar == ' '\r\n            || this.curChar == '\\t') {\r\n            --curPos;\r\n            logger.debug(\"\\\"\" + this.curChar + \"\\\"\");\r\n            this.matchedKind = this.NUMBER_INTEGER;\r\n            this.matchedPos = curPos;\r\n            this.input_stream.backup(1);\r\n            return curPos;\r\n        }\r\n        // not a valid numbers\r\n        return curPos;\r\n    }\r\n\r\n    findStringLiteral(curPos, active0) {\r\n        //logger.debug(\"finding string literal\");\r\n        var kind = 0x7fffffff;\r\n        try {\r\n            this.curChar = this.input_stream.readChar();\r\n        } catch (e) {\r\n            return 1;\r\n        }\r\n        for (; ;) {\r\n            let code = this.curChar.charCodeAt();\r\n            //logger.debug(\"findStringLiteral() = \" + code);\r\n            switch (code) {\r\n                case 34: // '\"'\r\n                    kind = this.STRING_DOUBLE_NONEMPTY;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            ++curPos;\r\n            if (kind != 0x7fffffff) {\r\n                this.matchedKind = kind;\r\n                this.matchedPos = curPos;\r\n                //logger.debug(\"returning curPos = \" + curPos);\r\n                return curPos;\r\n            }\r\n            try {\r\n                this.curChar = this.input_stream.readChar();\r\n            } catch (e) {\r\n                logger.debug(e.stack);\r\n                return curPos;\r\n            }\r\n        }\r\n    }\r\n\r\n    moveChar(curPos, target) {\r\n        logger.debug(\"moveChar::curChar=\" + this.curChar + \",target=\" + target);\r\n        var kind = 0x7fffffff;\r\n        try {\r\n            this.curChar = this.input_stream.readChar();\r\n        } catch (e) {\r\n            return 1;\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        for (; ;) {\r\n            if (this.curChar == '\\n' || this.curChar == '\\r' || this.curChar == '\\f') {\r\n                kind = this.C_SINGLE_COMMENT;\r\n            }\r\n            if (code == 42) { // '*'\r\n                \r\n                // lookahead for char '/'\r\n                try {\r\n                    this.curChar = this.input_stream.readChar();\r\n                } catch (e) {\r\n                    return 1;\r\n                }\r\n                let ccode = this.curChar.charCodeAt();\r\n                if (ccode == 47) {\r\n                    ++curPos;\r\n                    kind = this.C_MULTILINE_COMMENT;\r\n                } else {\r\n                    this.input_stream.backup(1);\r\n                }\r\n            }\r\n\r\n            ++curPos;\r\n            if (kind != 0x7fffffff) {\r\n                this.matchedKind = kind;\r\n                this.matchedPos = curPos;\r\n                return curPos;\r\n            }\r\n            try {\r\n                this.curChar = this.input_stream.readChar();\r\n            } catch (e) {\r\n                return curPos;\r\n            }\r\n            code = this.curChar.charCodeAt();\r\n        }\r\n    }\r\n\r\n    moveChar01(active0) {\r\n        try {\r\n            this.curChar = this.input_stream.readChar();\r\n        } catch (e) {\r\n            return 1;\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        logger.debug(\"moveChar01::curChar=\" + this.curChar + \",code=\" + code);\r\n        switch (code) {\r\n            case 34: // '\"'\r\n                if ((active0 & 8) != 0)\r\n                    return this.stopAtPos(1, this.STRING_DOUBLE_EMPTY);\r\n                break;\r\n            case 39: // '\\''\r\n                if ((active0 & 4) != 0)\r\n                    return this.stopAtPos(1, this.STRING_SINGLE_EMPTY);\r\n                break;\r\n            case 65: // 'A'\r\n            case 97: // 'a'\r\n                if ((active0 & 4) != 0)\r\n                    return this.moveChar02(active0, 4);\r\n                break;\r\n            case 82: // 'R'\r\n            case 114: // 'r'\r\n                if ((active0 & 2) != 0)\r\n                    return this.moveChar02(active0, 4);\r\n                break;\r\n            case 85: // 'U'\r\n            case 117: // 'u'\r\n                if ((active0 & 8) != 0)\r\n                    return this.moveChar02(active0, 8);\r\n                break;\r\n            case 47: // '/' - C_SINGLE_COMMENT\r\n                if ((active0 & 6) != 0)\r\n                    return this.moveChar(0, '\\n');\r\n                break;\r\n            case 42: // '*' - C_MULTILINE_COMMENT\r\n                if ((active0 & 6) != 0)\r\n                    return this.moveChar(0, '*');\r\n                break;\r\n            default:\r\n                break;\r\n\r\n        }\r\n        return this.findStringLiteral(0, active0);\r\n    }\r\n\r\n    moveChar02(old0, active0) {\r\n        try {\r\n            this.curChar = this.input_stream.readChar();\r\n        } catch (e) {\r\n            return 2;\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        logger.debug(\"moveChar02::curChar=\" + this.curChar + \",code=\" + code);\r\n        switch (code) {\r\n            case 76: // L\r\n            case 108:// l\r\n                return this.moveChar03(active0, 5);\r\n            case 85:// U\r\n            case 117:// u\r\n                return this.moveChar03(active0, 2);\r\n            default:\r\n                break;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    moveChar03(old0, active0) {\r\n        try {\r\n            this.curChar = this.input_stream.readChar();\r\n        } catch (e) {\r\n            return 3;\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        logger.debug(\"moveChar03::curChar=\" + this.curChar + \",code=\" + code);\r\n        switch (code) {\r\n            case 69: // E\r\n            case 101: // e\r\n                if ((active0 & 2) != 0)\r\n                    return this.stopAtPos(3, this.TRUE);\r\n                break;\r\n            case 76: // L\r\n            case 108:// l\r\n                \r\n                if ((active0 & 5) != 0) {\r\n                    logger.debug('moveChar03->foundNull-' + (active0 & 5));\r\n                    return this.stopAtPos(3, this.NULL);\r\n                }\r\n                break;\r\n            case 83: // S\r\n            case 115:// s\r\n                return this.moveChar04(active0, 4);\r\n            default:\r\n                break;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    moveChar04(old0, active0) {\r\n        try {\r\n            this.curChar = this.input_stream.readChar();\r\n        } catch (e) {\r\n            return 4;\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        logger.debug(\"moveChar04::curChar=\" + this.curChar + \",code=\" + code);\r\n        switch (code) {\r\n            case 69: // E\r\n            case 101:// e\r\n                if ((active0 & 4) != 0)\r\n                    return this.stopAtPos(4, this.FALSE);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    stopAtPos(pos, kind) {\r\n        this.matchedKind = kind;\r\n        this.matchedPos = pos;\r\n        return pos + 1;\r\n    }\r\n\r\n    checkForSpace() {\r\n        let code = this.curChar.charCodeAt();\r\n        if (code == 32) {\r\n            try {\r\n                curChar = input_stream.readChar();\r\n            } catch (e) {\r\n            }\r\n            let ccode = this.curChar.charCodeAt();\r\n            if (ccode != 32) {\r\n                input_stream.backup(1);\r\n                return;\r\n            } else {\r\n                this.checkForSpace();\r\n            }\r\n        }\r\n    }\r\n\r\n    fillToken() {\r\n        let beginLine = this.input_stream.getBeginLine;\r\n        let beginColumn = this.input_stream.getBeginColumn;\r\n        let endLine = this.input_stream.getEndLine;\r\n        let endColumn = this.input_stream.getEndColumn;\r\n        var im = this.strLiteralImages[this.matchedKind];\r\n        let tokenImage = (im == null) ? this.input_stream.getImage() : im;\r\n        //let tokenImage = this.input_stream.getImage();\r\n        let token = RJsonToken.newToken(this.matchedKind, tokenImage);\r\n        logger.debug('generated new token ->' + token.toString());\r\n        token.beginLine = beginLine;\r\n        token.endLine = endLine;\r\n        token.beginColumn = beginColumn;\r\n        token.endColumn = endColumn;\r\n        return token;\r\n    }\r\n\r\n    consume_char() {\r\n        if (this.curChar == '\\n') {\r\n        } else if (this.curChar == ' ') {\r\n            this.input_stream.spaceDetected();\r\n        }\r\n\r\n    }\r\n}\r\n","import JsonMap from \"../json/JsonMap\";\r\nimport JsonList from \"../json/JsonList\";\r\nimport RJsonAbsParser from \"./RJsonAbsParser\";\r\nimport RJsonParserError from \"./RJsonParserError\";\r\n\r\nvar logger = require('../logger/logger');\r\n\r\nexport default class RJsonParser extends RJsonAbsParser {\r\n\r\n    constructor(rinput,startNow) {\r\n        super(rinput,startNow);\r\n    }\r\n\r\n    parse() {\r\n        var toReturn = this.anything();\r\n        toReturn.root = true;\r\n        toReturn.rawInput = this.input;\r\n        if (!this.ensureEOF()) {\r\n            throw new Error(\"parser.expectedEOF\");\r\n        }\r\n        return toReturn;\r\n    }\r\n\r\n    anything() {\r\n        logger.debug(\"RJsonParser::anything()\" + this.jj_nt);\r\n        let x;\r\n        switch (this.jj_nt.kind) {\r\n            case this.BRACE_OPEN:\r\n                x = this.object();\r\n                break;\r\n            case this.BRACKET_OPEN:\r\n                x = this.list();\r\n                break;\r\n            case this.NUMBER_INTEGER:\r\n            case this.NUMBER_DECIMAL:\r\n            case this.TRUE:\r\n            case this.FALSE:\r\n            case this.NULL:\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                x = this.value();\r\n                break;\r\n            default:\r\n                this.jj_la1[0] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new RJsonParserError();\r\n        }\r\n        { if (true) return x; }\r\n    }\r\n\r\n    object() {\r\n        let map = new JsonMap(true, false, new Map());\r\n        let key, value;\r\n        this.jj_consume_token(this.BRACE_OPEN);\r\n        switch (this.jj_nt.kind) {\r\n            case this.NUMBER_INTEGER:\r\n            case this.NUMBER_DECIMAL:\r\n            case this.TRUE:\r\n            case this.FALSE:\r\n            case this.NULL:\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n            case this.SYMBOL:\r\n                key = this.objectKey();\r\n                this.jj_consume_token(this.COLON);\r\n                value = this.anything();\r\n                value.key = true;\r\n                map.put(key, value);\r\n                key = null; value = null;\r\n                label_1:\r\n                while (true) {\r\n                    switch (this.jj_nt.kind) {\r\n                        case this.COMMA:\r\n                            ;\r\n                            break;\r\n                        default:\r\n                            this.jj_la1[3] = this.jj_gen;\r\n                            break label_1;\r\n                    }\r\n                    this.jj_consume_token(this.COMMA);\r\n                    key = this.objectKey();\r\n                    this.jj_consume_token(this.COLON);\r\n                    value = this.anything();\r\n                    value.key = true;\r\n                    map.put(key, value);\r\n                    key = null; value = null;\r\n                }\r\n                break;\r\n            default:\r\n                this.jj_la1[4] = this.jj_gen;\r\n        }\r\n        this.jj_consume_token(this.BRACE_CLOSE);\r\n        { if (true) return map; }\r\n    }\r\n\r\n    list() {\r\n        let list = new JsonList(true, false, []);\r\n        logger.debug(\"RJsonParser::list()\" + this.jj_nt.toString());\r\n        let value;\r\n        this.jj_consume_token(this.BRACKET_OPEN);\r\n        switch (this.jj_nt.kind) {\r\n            case this.BRACE_OPEN:\r\n            case this.BRACKET_OPEN:\r\n            case this.NUMBER_INTEGER:\r\n            case this.NUMBER_DECIMAL:\r\n            case this.TRUE:\r\n            case this.FALSE:\r\n            case this.NULL:\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                value = this.anything();\r\n                list.add(value);\r\n                value = null;\r\n                label_2:\r\n                while (true) {\r\n                    switch (this.jj_nt.kind) {\r\n                        case this.COMMA:\r\n                            ;\r\n                            break;\r\n                        default:\r\n                            this.jj_la1[5] = this.jj_gen;\r\n                            break label_2;\r\n                    }\r\n                    this.jj_consume_token(this.COMMA);\r\n                    value = this.anything();\r\n                    list.add(value);\r\n                    value = null;\r\n                }\r\n                break;\r\n            default:\r\n                this.jj_la1[6] = this.jj_gen;\r\n                ;\r\n        }\r\n        this.jj_consume_token(this.BRACKET_CLOSE);\r\n        {if (true) return list;}\r\n    }\r\n\r\n    \r\n\r\n    ensureEOF() {\r\n        this.jj_consume_token(0);\r\n        { if (true) return true; }\r\n    }\r\n\r\n    jj_consume_token(kind) {\r\n        \r\n        logger.debug(\"01-RJsonParser::jj_consume_token::this.jj_nt=\" + this.jj_nt + \",cKind=\" + kind + \",this.jj_nt.next=\" + this.jj_nt.next);\r\n        var oldToken = this.token;\r\n        if ((this.token = this.jj_nt).next != null) {\r\n            this.jj_nt = this.jj_nt.next;\r\n        } else {\r\n            this.jj_nt = this.jj_nt.next = this.lexer.getNextToken();\r\n            logger.debug(\"02-RJsonParser::jj_consume_token::this.jj_nt=\" + this.jj_nt + \",cKind=\" + kind+ \",this.jj_nt.next=\" + this.jj_nt.next);\r\n        }\r\n        \r\n        \r\n        if (this.token.kind === kind) {\r\n            this.jj_gen++;\r\n            return this.token;\r\n        }\r\n        this.jj_nt = this.token;\r\n        this.token = oldToken;\r\n        this.jj_kind = kind;\r\n        logger.debug('-------------------');\r\n        throw this.generateParseException();\r\n        \r\n    }\r\n\r\n    generateParseException() {\r\n        logger.debug('generateParseException');\r\n        var jj_expentries = [];\r\n        var la1tokens = [];\r\n        var jj_expentry = [];\r\n        var i, j, k, l;\r\n        if (this.jj_kind >= 0) {\r\n            la1tokens[this.jj_kind] = true;\r\n            this.jj_kind = -1;\r\n        }\r\n        for (i = 0; i < 13; i++) {\r\n            if (this.jj_la1[i] == this.jj_gen) {\r\n                for (j = 0; j < 32; j++) {\r\n                    if ((this.jj_la1_0[i] & (1 << j)) != 0) {\r\n                        la1tokens[j] = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (k = 0; k < 29; k++) {\r\n            if (la1tokens[k]) {\r\n                jj_expentry[0] = k;\r\n                jj_expentries.push(jj_expentry);\r\n            }\r\n        }\r\n        var exptokseq = [];\r\n        for (l = 0; l < jj_expentries.size; l++) {\r\n            exptokseq[l] = jj_expentries[l];\r\n        }\r\n        \r\n        var e =  new RJsonParserError(this.token, exptokseq, this.tokenImage);\r\n        logger.debug('generateParseException ::' + e.getMessage());\r\n        return e;\r\n    }\r\n\r\n    static runParser(input) {\r\n        var instance = new RJsonParser(input);\r\n        var jsonObject = instance.parse();\r\n        return jsonObject;\r\n    }\r\n}\r\n\r\nexport function runParser(input) {\r\n    RJsonParser.runParser(input);\r\n}","export default class RJsonParserError extends Error {\r\n\r\n    constructor(_currentTokenVal, _expectedTokenSequencesVal, _tokenImageVal) {\r\n        super();\r\n        this.currentToken = _currentTokenVal;\r\n        this.expectedTokenSequences = _expectedTokenSequencesVal;\r\n        this.tokenImage = _tokenImageVal;\r\n        this.eol = \"&\";\r\n    }\r\n\r\n    toString() {\r\n        return \"i am exception\";\r\n    }\r\n\r\n    getMessage() {\r\n        let expected = '';\r\n        let maxSize, i, j = 0;\r\n        for (i = 0; i < this.expectedTokenSequences.length; i++) {\r\n            if (maxSize < this.expectedTokenSequences[i].length) {\r\n                maxSize = this.expectedTokenSequences[i].length;\r\n            }\r\n            for (j = 0; j < this.expectedTokenSequences[i].length; j++) {\r\n                expected += this.tokenImage[this.expectedTokenSequences[i][j]] + ' ';\r\n            }\r\n            if (this.expectedTokenSequences[i][this.expectedTokenSequences[i].length - 1] != 0) {\r\n                expected += \"...\";\r\n            }\r\n            expected += eol + \"    \";\r\n        }\r\n\r\n        let retval = \"Encountered \\\"\";\r\n        let tok = this.currentToken.next;\r\n        for (i = 0; i < maxSize; i++) {\r\n            if (i != 0) retval += \" \";\r\n            if (tok.kind == 0) {\r\n                retval += this.tokenImage[0];\r\n                break;\r\n            }\r\n            retval += \" \" + this.tokenImage[tok.kind];\r\n            retval += \" \\\"\";\r\n            retval += this.add_escapes(tok.image);\r\n            retval += \" \\\"\";\r\n            tok = tok.next;\r\n        }\r\n\r\n        retval += \"\\\" at line \" + this.currentToken.next.beginLine + \", column \" + this.currentToken.next;\r\n        retval += \".\" + this.eol;\r\n        if (this.expectedTokenSequences.length == 1) {\r\n            retval += \"Was expecting:\" + this.eol + \"    \";\r\n        } else {\r\n            retval += \"Was expecting one of:\" + this.eol + \"    \";\r\n        }\r\n        retval += expected;\r\n        return retval;\r\n    }\r\n\r\n    addEscapes(str) {\r\n        let i,ch;\r\n        let retval = \"\";\r\n        for (i = 0; i < str.length; i++) {\r\n            switch (str.charAt(i)) {\r\n                case 0:\r\n                    continue;\r\n                case '\\b':\r\n                    retval += \"\\\\b\";\r\n                    continue;\r\n                case '\\t':\r\n                    retval += \"\\\\t\";\r\n                    continue;\r\n                case '\\n':\r\n                    retval += \"\\\\n\";\r\n                    continue;\r\n                case '\\f':\r\n                    retval += \"\\\\f\";\r\n                    continue;\r\n                case '\\r':\r\n                    retval += \"\\\\r\";\r\n                    continue;\r\n                case '\\\"':\r\n                    retval += \"\\\\\\\"\";\r\n                    continue;\r\n                case '\\'':\r\n                    retval += \"\\\\\\'\";\r\n                    continue;\r\n                case '\\\\':\r\n                    retval += \"\\\\\\\\\";\r\n                    continue;\r\n                default:\r\n                    if ((ch = str.charAt(i)) < 0x20 || ch > 0x7e) {\r\n                        var s = \"0000\" + ch.toString();\r\n                        retval += \"\\\\u\" + s.substring(s.length - 4, s.length);\r\n                    } else {\r\n                        retval += ch;\r\n                    }\r\n                    continue;\r\n            }\r\n        }\r\n        return retval.toString();\r\n    }\r\n}","var logger = require('../logger/logger');\r\n\r\nexport default class RJsonToken {\r\n    constructor(ofkind,nimage) {\r\n        this._kind = ofkind;\r\n        this._image = nimage;\r\n        this._next = null;\r\n        this.specialToken = null;\r\n    }\r\n\r\n    set next(newNext) {\r\n        this._next = newNext;\r\n    }\r\n\r\n    get next() {\r\n        return this._next;\r\n    }\r\n\r\n    set beginLine(line) {\r\n        this._beginLine = line;\r\n    }\r\n\r\n    get beginLine() {\r\n        return this._beginLine;\r\n    }\r\n\r\n    set endLine(line) {\r\n        this._endLine = line;\r\n    }\r\n\r\n    set beginColumn(column) {\r\n        this._beginColumn = column;\r\n    }\r\n\r\n    get beginColumn() {\r\n        return this._beginColumn;\r\n    }\r\n\r\n    set endColumn(column) {\r\n        this._endColumn = column;\r\n    }\r\n\r\n    get kind() {\r\n        return this._kind;\r\n    }\r\n\r\n    set kind(newKind) {\r\n        this._kind = newKind;\r\n    }\r\n\r\n    get image() {\r\n        logger.debug('returning from token image length ->' + this._image.length);\r\n        return this._image;\r\n    }\r\n\r\n    static newToken(kind,image) {\r\n        return new RJsonToken(kind,image);\r\n    }\r\n\r\n    toString() {\r\n     return \"kind=\" + this._kind + \",image=\" + this.image;\r\n    }\r\n}","var logger = require('../logger/logger');\r\n\r\nexport default class RJsonTokenMgrError {\r\n    static addEscapes(str) {\r\n        //logger.debug('addEscapes)' + str);\r\n        let i,ch;\r\n        let retval = \"\";\r\n        for (i = 0; i < str.length; i++) {\r\n            switch (str.charAt(i)) {\r\n                case 0:\r\n                    continue;\r\n                case '\\b':\r\n                    retval += \"\\\\b\";\r\n                    continue;\r\n                case '\\t':\r\n                    retval += \"\\\\t\";\r\n                    continue;\r\n                case '\\n':\r\n                    retval += \"\\\\n\";\r\n                    continue;\r\n                case '\\f':\r\n                    retval += \"\\\\f\";\r\n                    continue;\r\n                case '\\r':\r\n                    retval += \"\\\\r\";\r\n                    continue;\r\n                case '\\\"':\r\n                    retval += \"\\\\\\\"\";\r\n                    continue;\r\n                case '\\'':\r\n                    retval += \"\\\\\\'\";\r\n                    continue;\r\n                case '\\\\':\r\n                    retval += \"\\\\\\\\\";\r\n                    continue;\r\n                default:\r\n                    if ((ch = str.charAt(i)) < 0x20 || ch > 0x7e) {\r\n                        var s = \"0000\" + ch.toString();\r\n                        retval += \"\\\\u\" + s.substring(s.length - 4, s.length);\r\n                        //logger.debug('retval' + retval);\r\n                    } else {\r\n                        retval += ch;\r\n                    }\r\n                    continue;\r\n            }\r\n        }\r\n        //logger.debug('8888' + retval.toString());\r\n        return retval.toString();\r\n    }\r\n\r\n    static LexicalError(EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar) {\r\n        let code = curChar.charCodeAt();\r\n        //logger.debug('LexicalError(EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar)');\r\n        var res = \"Lexical error at line \" +\r\n            errorLine + \", column \" +\r\n            errorColumn + \".  Encountered: \" +\r\n            (EOFSeen ? \"<EOF> \" : (\"\\\"\" + RJsonTokenMgrError.addEscapes(curChar) + \"\\\"\") + \" (\" + code + \"), \") +\r\n            \"after : \\\"\" + RJsonTokenMgrError.addEscapes(errorAfter) + \"\\\"\";\r\n        //logger.debug(res);\r\n    }\r\n\r\n    constructor(EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar, reason) {\r\n        this.message = RJsonTokenMgrError.LexicalError(EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar);\r\n        this.reason = reason;\r\n    }\r\n}"],"sourceRoot":""}