{"version":3,"sources":["webpack://RJsonParser/webpack/universalModuleDefinition","webpack://RJsonParser/./src/app.js","webpack://RJsonParser/./src/io/CharStream.js","webpack://RJsonParser/./src/io/IOString.js","webpack://RJsonParser/./src/io/Reader.js","webpack://RJsonParser/./src/io/StringReader.js","webpack://RJsonParser/./src/json/JsonBoolean.js","webpack://RJsonParser/./src/json/JsonList.js","webpack://RJsonParser/./src/json/JsonMap.js","webpack://RJsonParser/./src/json/JsonNull.js","webpack://RJsonParser/./src/json/JsonNumber.js","webpack://RJsonParser/./src/json/JsonObject.js","webpack://RJsonParser/./src/json/JsonString.js","webpack://RJsonParser/./src/logger/logger.js","webpack://RJsonParser/./src/parser/RJsonAbsParser.js","webpack://RJsonParser/./src/parser/RJsonConstants.js","webpack://RJsonParser/./src/parser/RJsonLexer.js","webpack://RJsonParser/./src/parser/RJsonParser.js","webpack://RJsonParser/./src/parser/RJsonParserError.js","webpack://RJsonParser/./src/parser/RJsonToken.js","webpack://RJsonParser/./src/parser/RJsonTokenMgrError.js"],"names":["root","factory","exports","module","define","amd","this","editor","example","init","console","log","document","getElementById","classList","toggle","getValue","instance","jsonObj","parse","appendable","destination","formatJsonToString","setValue","formatInputString","formatJsonToHtml","innerHTML","formatHtml","e","stack","editorEl","CodeMirror","fromTextArea","lineNumbers","styleSelectedText","setSize","JSON","stringify","addEventListener","format","logger","CharStream","stream","maxNextCharInd","nextCharInd","bufline","bufcolumn","column","line","bufpos","bufsize","available","maxBufSize","inBuf","prevCharIsCR","prevCharIsLF","tabSize","tokenBegin","nextCharBuf","Array","buffer","inputStream","readFromBuffer","readChar","c","adjustBuffSize","readByte","checkSpecial","updateLineColumn","fillBuff","debug","charCodeAt","i","read","close","Error","backup","olumn","amount","expandBuff","response","toString","IOString","chars","offset","count","j","value","ccode","code","join","Reader","newInput","constructor","TypeError","prototype","getChars","input","length","next","mark","cbuf","len","srcBegin","srcEnd","dst","dstBegin","StringReader","super","ensureOpen","n","Math","min","JsonBoolean","isKey","currentLevel","_input","JsonList","jsonObject","push","tabs","size","forEach","element","cAppendable","_root","JsonMap","jsonObjectKey","jsonObjectValue","set","info","key","keyAppendable","valueAppendable","keyValue","JsonNumber","JsonObject","_isKey","_keyValue","_rawInput","newRoot","newKey","raw","newValue","JsonString","removeSpecialChars","tmp","r","concat","msg","RJsonAbsParser","rinput","startNow","undefined","reader","lexer","token","jj_nt","getNextToken","jj_gen","jj_la1","jj_la1_0","jj_kind","nativeNumbers","o","kind","STRING_SINGLE_EMPTY","STRING_DOUBLE_EMPTY","STRING_SINGLE_NONEMPTY","STRING_DOUBLE_NONEMPTY","string","SYMBOL","symbol","NULL","nullValue","NUMBER_INTEGER","NUMBER_DECIMAL","TRUE","FALSE","booleanValue","number","jj_consume_token","BRACE_CLOSE","s","doubleQuoteString","singleQuoteString","image","sjj_gen","b","x","t","RJsonConstants","EOF","C_SINGLE_COMMENT","C_MULTILINE_COMMENT","SH_SINGLE_COMMENT","WHITESPACE","EOL","COMMA","BRACE_OPEN","COLON","BRACKET_OPEN","BRACKET_CLOSE","ZERO","DIGIT_NONZERO","DIGIT","QUOTE_DOUBLE","QUOTE_SINGLE","STRING_SINGLE_BODY","STRING_DOUBLE_BODY","DEFAULT","LEXICAL_ERROR","tokenImage","RJsonLexer","istream","input_stream","curChar","matchedKind","matchedPos","toToken","curLexState","strLiteralImages","matchedToken","curPos","EOFLoop","beginToken","fillToken","analyzeCurrentCharacter","error_line","getEndLine","error_column","getEndColumn","error_after","EOFSeen","e1","getImage","consume_char","stopAtPos","moveChar01","moveChar","findNumber","startState","isDigit","active0","target","moveChar02","findStringLiteral","old0","moveChar03","moveChar04","pos","checkForSpace","beginLine","getBeginLine","beginColumn","getBeginColumn","endLine","endColumn","im","spaceDetected","RJsonParser","toReturn","anything","rawInput","ensureEOF","object","list","map","Map","objectKey","put","label_1","add","label_2","oldToken","generateParseException","k","l","jj_expentries","la1tokens","jj_expentry","exptokseq","getMessage","runParser","RJsonParserError","_currentTokenVal","_expectedTokenSequencesVal","_tokenImageVal","name","currentToken","expectedTokenSequences","eol","maxSize","expected","retval","tok","add_escapes","message","str","ch","charAt","substring","RJsonToken","ofkind","nimage","_kind","_image","_next","specialToken","newNext","_beginLine","_endLine","_beginColumn","_endColumn","newKind","RJsonTokenMgrError","lexState","errorLine","errorColumn","errorAfter","addEscapes","reason","LexicalError"],"mappings":"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","file":"app.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RJsonParser\"] = factory();\n\telse\n\t\troot[\"RJsonParser\"] = factory();\n})(this, function() {\nreturn ","import RJsonParser from \"./parser/RJsonParser\"\r\n\r\nimport css from \"./css/style.css\";\r\n\r\nvar example = { \"store\": { \"book\": [{ \"category\": \"reference\", \"author\": \"Nigel Rees\", \"title\": \"Sayings of the Century\", \"price\": 8.95 }, { \"category\": \"fiction\", \"author\": \"Evelyn Waugh\", \"title\": \"Sword of Honour\", \"price\": 12.99 }, { \"category\": \"fiction\", \"author\": \"J. R. R. Tolkien\", \"title\": \"The Lord of the Rings\", \"isbn\": \"0-395-19395-8\", \"price\": 22.99 }], \"bicycle\": { \"color\": \"red\", \"price\": 19.95 } } };\r\n\r\nformat();\r\nvar editor;\r\n\r\nfunction formatInputString(jsonObj) {\r\n    var appendable = {\r\n        destination: \"\"\r\n    }\r\n    jsonObj.formatJsonToString(appendable, -1);\r\n    console.log(appendable.destination);\r\n    editor.setValue(appendable.destination);\r\n    //document.getElementById('inputtextarea').value = appendable.destination;\r\n}\r\n\r\nfunction formatHtml(jsonObj) {\r\n    var appendable = {\r\n        destination: \"\"\r\n    }\r\n    jsonObj.formatJsonToHtml(appendable, -1);\r\n    console.log(appendable.destination);\r\n    document.getElementById('json').innerHTML = appendable.destination;\r\n}\r\n\r\nfunction initCm() {\r\n    var editorEl = document.getElementById(\"inputtextarea\");\r\n    editor = CodeMirror.fromTextArea(editorEl, {\r\n        lineNumbers: true,\r\n        styleSelectedText: true\r\n    });\r\n   \r\n    editor.setValue('loading...');\r\n    editor.setSize(700, 500);\r\n   \r\n}\r\n\r\nfunction init() {\r\n    try {\r\n        console.log('reformatting.');\r\n        document.getElementById(\"input-spinner\").classList.toggle(\"hidden\");\r\n        \r\n        //var target = document.getElementById('inputtextarea');\r\n        console.log('parsing ' + editor.getValue());\r\n        let instance = new RJsonParser(editor.getValue());\r\n        //target.value = 'loading';\r\n        console.log('parsing json...');\r\n        var jsonObj = instance.parse();\r\n        console.log('parsing json done...');\r\n        formatInputString(jsonObj);\r\n        formatHtml(jsonObj);\r\n        document.getElementById(\"input-spinner\").classList.toggle(\"hidden\");\r\n    } catch (e) {\r\n        console.log('exception');\r\n        console.log(e.stack);\r\n        editor.setValue('error loading json...');\r\n        //document.getElementById('inputtextarea').innerHTML = e.message;\r\n    }\r\n}\r\n\r\nfunction onTextEditorChange(cm, evt) {\r\n    console.log('onTextEditorChange(cm, evt)');\r\n    init();\r\n}\r\n\r\nfunction format() {\r\n    try {\r\n        //var target = document.getElementById('inputtextarea');\r\n        //target.value = JSON.stringify(example);\r\n        initCm();\r\n        editor.setValue(JSON.stringify(example));\r\n        init();\r\n        // editor.on(\"change\", (cm, evt) => {\r\n        //     console.log('editor changed ...');\r\n        //     onTextEditorChange(cm, evt)\r\n        // });\r\n        document.getElementById('loadjson').addEventListener('click', () => {\r\n            //console.log('load json...' + document.getElementById('inputtextarea').value);\r\n            //alert('-----------' + document.getElementById('inputtextarea').innerHTML);\r\n            init();\r\n        })\r\n    } catch (e) {\r\n        console.log(e.stack);\r\n        //document.getElementById('inputtextarea').innerHTML = e.message;\r\n    }\r\n}\r\n\r\n\r\n","import IOString from './IOString.js';\r\n\r\nvar logger = require('../logger/logger');\r\n\r\nexport default class CharStream {\r\n    maxBufSize = 4096;\r\n\r\n    constructor(stream) {\r\n        this.maxNextCharInd = 0;\r\n        this.nextCharInd = -1;\r\n\r\n        this.bufline = [];\r\n        this.bufcolumn = [];\r\n        this.column = 0;\r\n        this.line = 1;\r\n\r\n        this.bufpos = -1;\r\n        this.bufsize = 0;\r\n        this.available = this.maxBufSize;\r\n        this.inBuf = 0;\r\n\r\n        this.prevCharIsCR = false;\r\n        this.prevCharIsLF = false;\r\n        this.tabSize = 4;\r\n\r\n        this.tokenBegin = 0;\r\n        this.nextCharBuf = new Array(this.maxBufSize);\r\n        this.buffer = [];\r\n        this.inputStream = stream;\r\n    }\r\n\r\n    beginToken() {\r\n        if (this.inBuf > 0) {\r\n            // lookahead and backup has happened.\r\n            return this.readFromBuffer();\r\n        }\r\n        this.tokenBegin = 0;\r\n        this.bufpos = -1;\r\n        return this.readChar();\r\n    }\r\n\r\n    readChar() {\r\n        if (this.inBuf > 0) {\r\n            // lookahead and backup has happened.\r\n            return this.readFromBuffer();\r\n        }\r\n        if (++this.bufpos === this.available)\r\n            this.adjustBuffSize();\r\n\r\n        let c;\r\n        if ((this.buffer[this.bufpos] = c = this.readByte()) == '\\\\') {\r\n            return this.checkSpecial(c);\r\n        } else {\r\n            this.updateLineColumn(c);\r\n            return c;\r\n        }\r\n    }\r\n\r\n    readByte() {\r\n\r\n        if (++this.nextCharInd >= this.maxNextCharInd)\r\n            this.fillBuff();\r\n        logger.debug(\"nextCharInd=\" + (this.nextCharInd) + \",this.maxNextCharInd=\" + this.maxNextCharInd + \",code=\" + this.nextCharBuf[this.nextCharInd].charCodeAt());\r\n        return this.nextCharBuf[this.nextCharInd];\r\n    }\r\n\r\n    fillBuff() {\r\n        let i;\r\n        if (this.maxNextCharInd === this.maxBufSize)\r\n            this.maxNextCharInd = this.nextCharInd = 0;\r\n        try {\r\n            if ((i = this.inputStream.read(this.nextCharBuf, this.maxNextCharInd, this.maxBufSize - this.maxNextCharInd)) === -1) {\r\n                this.inputStream.close();\r\n                throw new Error(\"stream has not enough data.\");\r\n            } else {\r\n                this.maxNextCharInd += i;\r\n            }\r\n        } catch (e) {\r\n            if (this.bufpos != 0) {\r\n                --this.bufpos;\r\n                this.backup(0);\r\n            } else {\r\n                this.bufline[this.bufpos] = this.line;\r\n                this.bufcolumn[this.bufpos] = this.olumn;\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    backup(amount) {\r\n        //logger.debug('inBuf-' + this.inBuf + \",bufPos-\" + this.bufpos);\r\n        this.inBuf += amount;\r\n        if ((this.bufpos -= amount) < 0)\r\n            this.bufpos += this.bufsize;\r\n        //this.tokenBegin = amount;\r\n        //logger.debug('inBuf-' + this.inBuf + \",bufPos-\" + this.bufpos);\r\n    }\r\n\r\n    readFromBuffer() {\r\n        //logger.debug('reading from inBuf-' + this.inBuf);\r\n        --this.inBuf;\r\n        if (++this.bufpos == this.bufsize)\r\n            this.bufpos = 0;\r\n        return this.buffer[this.bufpos];\r\n    }\r\n\r\n    adjustBuffSize() {\r\n        if (this.available === this.bufsize) {\r\n            if (this.tokenBegin > 2048) {\r\n                this.bufpos = 0;\r\n            } else {\r\n                this.expandBuff(true);\r\n            }\r\n        } else if (this.available > this.tokenBegin) {\r\n            this.available = this.bufsize;\r\n        } else if ((this.tokenBegin - this.available) < 2048) {\r\n            this.expandBuff(true);\r\n        } else {\r\n            this.available = this.tokenBegin;\r\n        }\r\n    }\r\n\r\n    expandBuff() {\r\n        throw new Error(\"Implementation to be done....\");\r\n    }\r\n\r\n    checkSpecial(c) {\r\n        //throw new Error(\"Implementation to be done....\");\r\n        return c;\r\n    }\r\n\r\n    updateLineColumn(c) {\r\n        this.column++;\r\n        if (this.prevCharIsLF) {\r\n            this.prevCharIsLF = false;\r\n            this.line += (this.column = 1);\r\n        } else if (this.prevCharIsCR) {\r\n            this.prevCharIsCR = false;\r\n            if (c == '\\n') {\r\n                this.prevCharIsLF = true;\r\n            } else {\r\n                this.line += (this.column = 1);\r\n            }\r\n        }\r\n\r\n        switch (c) {\r\n            case '\\r':\r\n                //this.tokenBegin++;\r\n                this.prevCharIsCR = true;\r\n                break;\r\n            case '\\n':\r\n                //this.tokenBegin++;\r\n                this.prevCharIsLF = true;\r\n                break;\r\n            case '\\t':\r\n                //this.tokenBegin++;\r\n                this.column--;\r\n                this.column += (this.tabSize - (this.column % this.tabSize));\r\n                break;\r\n            case 32:\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.bufline[this.bufpos] = this.line;\r\n        this.bufcolumn[this.bufpos] = this.column;\r\n    }\r\n\r\n    spaceDetected() {\r\n        this.tokenBegin++;\r\n    }\r\n\r\n    getImage() {\r\n        var response;\r\n        logger.debug(\"bufpos=\" + this.bufpos + \",tokenBegin=\" + this.tokenBegin);\r\n        //logger.debug(\"buffer=\" + this.buffer[0].charCodeAt() + \",\" + this.buffer[1].charCodeAt() );\r\n        //logger.debug(\"buffer=\" + this.buffer[2].charCodeAt() + \",\" + this.buffer[3].charCodeAt() );\r\n        //logger.debug(\"buffer=\" + this.buffer[4].charCodeAt() + \",\" + this.buffer[5].charCodeAt() );\r\n        //logger.debug(\"buffer=\" + this.buffer[6].charCodeAt() + \",\" + this.buffer[7].charCodeAt() );\r\n        if (this.bufpos >= this.tokenBegin) {\r\n            response = new IOString(this.buffer, this.tokenBegin, this.bufpos - this.tokenBegin + 1);\r\n            logger.debug(\"response=\" + response.toString());\r\n        } else {\r\n            response = new IOString(this.buffer, this.tokenBegin, this.bufsize - this.tokenBegin).toString() + new IOString(this.buffer, 0, this.bufpos + 1).toString();\r\n            logger.debug(\"response=\" + response.toString());\r\n        }\r\n        return response.stringify();\r\n    }\r\n\r\n    get getColumn() {\r\n        return this.bufcolumn[this.bufpos];\r\n    }\r\n\r\n    get getLine() {\r\n        return this.bufline[this.bufpos];\r\n    }\r\n\r\n    get getEndLine() {\r\n        return this.bufline[this.bufpos];\r\n    }\r\n\r\n    get getBeginColumn() {\r\n        return this.bufcolumn[this.tokenBegin];\r\n    }\r\n\r\n    get getBeginLine() {\r\n        return this.bufline[this.tokenBegin];\r\n    }\r\n}","var logger = require('../logger/logger');\r\n\r\nexport default class IOString {\r\n\r\n    constructor(chars, offset, count) {\r\n        if (offset < 0)\r\n            throw new Error('Offset cannot be negative');\r\n        if (count < 0)\r\n            throw new Error('count cannot be negative');\r\n\r\n        let i;\r\n        let j= offset;\r\n        this.value = [];\r\n        var ccode = chars[j].charCodeAt();\r\n        // fix for removing white space in the begining of the string.\r\n        while(ccode === 32) {\r\n            j++;\r\n            ccode = chars[j].charCodeAt();\r\n        }\r\n        \r\n        for (i = j; i < (offset + count); i++) {\r\n            var code = chars[i].charCodeAt();\r\n            logger.debug('code at i=' + i +\",code=\" + code);\r\n            //this.value.push(chars[i]);\r\n            if (code != 34) // '\\\"'\r\n                this.value[i] = chars[i];\r\n\r\n        }\r\n    }\r\n\r\n\r\n    toString() {\r\n        return this.value.join(\"\");\r\n    }\r\n\r\n    stringify() {\r\n        return this.value.join(\"\");\r\n    }\r\n}\r\n","export default class Reader {\r\n\r\n    constructor(newInput) {\r\n        if (this.constructor === Reader) {\r\n            throw new TypeError(\"Can not construct abstract class.\");\r\n        }\r\n\r\n        if (this.read === Reader.prototype.read) {\r\n            // Error Type 4. Child has not implemented this abstract method.\r\n            throw new TypeError(\"Please implement abstract method read.\");\r\n        }\r\n\r\n        if (this.getChars === Reader.prototype.getChars) {\r\n            // Error Type 4. Child has not implemented this abstract method.\r\n            throw new TypeError(\"Please implement abstract method getChars.\");\r\n        }\r\n\r\n        if (this.close === Reader.prototype.close) {\r\n            // Error Type 4. Child has not implemented this abstract method.\r\n            throw new TypeError(\"Please implement abstract close getChars.\");\r\n        }\r\n        \r\n        this.input = newInput;\r\n        this.length = this.input.length;\r\n        this.next = 0;\r\n        this.mark = 0;\r\n    }\r\n\r\n    read(cbuf, offset, len) {\r\n        throw new TypeError(\"Do not call abstract method read from child.\");\r\n    }\r\n\r\n    getChars(srcBegin, srcEnd, dst, dstBegin) {\r\n        throw new TypeError(\"Do not call abstract method getChars from child.\");\r\n    }\r\n\r\n    close() {\r\n        throw new TypeError(\"Do not call abstract method close from child.\");\r\n    }\r\n\r\n    ensureOpen() {\r\n        if (this.input === null)\r\n            throw new Error('Stream closed');\r\n    }\r\n}","import Reader from './Reader.js';\r\n\r\nvar logger = require('../logger/logger');\r\n\r\nexport default class StringReader extends Reader {\r\n\r\n    constructor(newInput) {\r\n        super(newInput);\r\n    }\r\n    /*\r\n     * Reads characters into a portion of an array. This method will block until some input is \r\n     * available, an I/O error occurs, or the end of the stream is reached.\r\n     * \r\n     * return The number of characters read, or -1 if the end of the stream has been reached\r\n     */\r\n    read(cbuf, offset, len) {\r\n        this.ensureOpen();\r\n        if ((offset < 0) || (offset > cbuf.length) || (len < 0) ||\r\n            ((offset + len) > cbuf.length) || ((offset + len) < 0)) {\r\n            throw new Error('index out of bounds.');\r\n        } else if (len == 0) {\r\n            return 0;\r\n        }\r\n        if (this.next >= this.length)\r\n            return -1;\r\n        var n = Math.min(this.length - this.next, len);\r\n        this.getChars(this.next, this.next + n, cbuf, offset);\r\n        this.next += n;\r\n        return n;\r\n    }\r\n\r\n    getChars(srcBegin, srcEnd, dst, dstBegin) {\r\n        if (srcBegin < 0) {\r\n            new Error('index out of bounds - ' + srcBegin);\r\n        }\r\n        if (srcEnd > this.input.length) {\r\n            new Error('index out of bounds - ' + srcEnd);\r\n        }   \r\n        if (srcBegin > srcEnd) {\r\n            throw new Error('index out of bounds - ' + (srcEnd - srcBegin));\r\n        }\r\n        var i;\r\n        for(i = srcBegin; i <= srcEnd; i++) {\r\n            dst[dstBegin] = this.input[i];\r\n            dstBegin++;\r\n        }\r\n    }\r\n\r\n    close() {\r\n        this.input = null;\r\n    }\r\n}","\r\nimport JsonObject from './JsonObject.js';\r\n\r\nexport default class JsonBoolean extends JsonObject {\r\n\r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        //console.log('destination->' + destination);\r\n        if(this._input)\r\n            appendable.destination = true;\r\n        else \r\n            appendable.destination = false;\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        destination += \"<span class=\\\"type-boolean\\\">\";\r\n        destination += this._input + \"</span>\";\r\n        appendable.destination = destination;\r\n    }\r\n}","\r\nimport JsonObject from './JsonObject.js';\r\n\r\nexport default class JsonList extends JsonObject {\r\n    \r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n    }\r\n\r\n    add(jsonObject) {\r\n        this._input.push(jsonObject);\r\n        return this;\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        ++currentLevel;\r\n        let tabs = '';\r\n        let i,j;\r\n        for (i = 0; i < currentLevel; i++)\r\n            tabs += \"\\t\";\r\n        let destination = \"\";\r\n        destination += \"\\n\" + tabs + \"[\\n\";\r\n        j = 0;\r\n        let size = this._input.length;\r\n        this._input.forEach(element => {\r\n            var cAppendable = {\r\n                destination : \"\"\r\n            }\r\n            element.formatJsonToString(cAppendable,currentLevel);\r\n            destination += cAppendable.destination;\r\n            if(j != (size-1))\r\n                destination += \",\\n\";\r\n            j++;\r\n        });\r\n        destination += \"\\n\" + tabs + \"]\";\r\n        appendable.destination += destination;\r\n        //console.log('destination->' + destination);\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        if(this._root) {\r\n            destination += \"<div class=\\\"json-viewer\\\"><code class=\\\"js\\\" id=\\\"js\\\">\";\r\n        }\r\n        \r\n        let size = this._input.length;\r\n        destination += \"<a class=\\\"list-link\\\" href=\\\"javascript:void(0)\\\">[\";\r\n        destination += \"<span style=\\\"color: #1d57d4;\\\"><i onClick=\\\"spanClicked(event);\\\" class=\\\"far fa-minus-square\\\"></i></span>\";\r\n        destination += \"<span style=\\\"color: #1d57d4;\\\" class=\\\"hide\\\"><i onClick=\\\"spanClicked(event);\\\" class=\\\"fas fa-plus-square\\\"></i></span>\";\r\n        destination += \"<span class=\\\"hide\\\"><span onClick=\\\"spanClicked(event);\\\" class=\\\"items-ph\\\">\" + size + \" items</span></span>\";\r\n        destination += \"</a>\";\r\n        let j = 0;\r\n        destination += \"<ul data-level=\\\"\" + ++currentLevel + \"\\\" class=\\\"type-array\\\">\";\r\n        this._input.forEach(element => {\r\n           \r\n            destination += \"<li>\";\r\n            var cAppendable = {\r\n                destination : 0\r\n            }\r\n            element.formatJsonToHtml(cAppendable,currentLevel);\r\n            destination += cAppendable.destination;\r\n            if(j != (size-1))\r\n                destination += \"<span class=\\\"type-comma\\\">\" + \",\" + \"</span>\";\r\n            destination += \"</li>\";\r\n            j++;\r\n        });\r\n        destination += \"</ul>\";\r\n        destination += \"<span class=\\\"type-symbol\\\">]</span>\";\r\n        if(this._root) {\r\n            destination += \"</code></div>\";\r\n        }\r\n\r\n        appendable.destination = destination;\r\n    }\r\n}","var logger = require('../logger/logger');\r\n\r\nimport JsonObject from './JsonObject.js';\r\n\r\nexport default class JsonMap extends JsonObject {\r\n    \r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n    }\r\n\r\n    put(jsonObjectKey,jsonObjectValue) {\r\n        this._input.set(jsonObjectKey, jsonObjectValue);\r\n        logger.debug('map size ->' + this._input.size);\r\n        return this;\r\n    }\r\n    \r\n    formatJsonToString(appendable, currentLevel) {\r\n        ++currentLevel;\r\n        let tabs = '';\r\n        let i,j;\r\n        for (i = 0; i < currentLevel; i++)\r\n            tabs += \"\\t\";\r\n        let destination = \"\";\r\n        destination += \"\" + tabs + \"{\\n\";\r\n        j = 0;\r\n        let size = this._input.size;\r\n        logger.info('size of the map ' + this._input.size);\r\n\r\n        this._input.forEach(function(value, key) {\r\n            var keyAppendable = {\r\n                destination : \"\"\r\n            }\r\n            var valueAppendable = {\r\n                destination : \"\"\r\n            }\r\n         \r\n            key.formatJsonToString(keyAppendable,currentLevel);\r\n            destination += keyAppendable.destination;\r\n            destination += \" : \";\r\n            \r\n            value.keyValue = true;\r\n            value.formatJsonToString(valueAppendable,currentLevel);\r\n            destination += valueAppendable.destination;\r\n            if(j != (size-1))\r\n                destination += \",\\n\";\r\n            j++;  \r\n        });\r\n        destination += \"\\n\" + tabs + \"}\";\r\n        appendable.destination += destination;\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        logger.debug('formatting to html...' + this._root);\r\n        if(this._root) {\r\n            destination += \"<div class=\\\"json-viewer\\\"><code class=\\\"js\\\" id=\\\"js\\\">\";\r\n        }\r\n        logger.debug('formatting to html...');\r\n        \r\n        let size = this._input.size;\r\n        destination += \"<a class=\\\"list-link\\\" href=\\\"javascript:void(0)\\\">{\";\r\n        destination += \"<span style=\\\"color: #1d57d4;\\\"><i onClick=\\\"spanClicked(event);\\\" class=\\\"far fa-minus-square\\\"></i></span>\";\r\n        destination += \"<span style=\\\"color: #1d57d4;\\\" class=\\\"hide\\\"><i onClick=\\\"spanClicked(event);\\\" class=\\\"fas fa-plus-square\\\"></i></span>\";\r\n        destination += \"<span class=\\\"hide\\\"><span onClick=\\\"spanClicked(event);\\\" class=\\\"items-ph\\\">\" + size + \" items</span></span>\";\r\n        destination += \"</a>\";\r\n        let j = 0;\r\n        destination += \"<ul data-level=\\\"\" + ++currentLevel + \"\\\" class=\\\"type-array\\\">\";\r\n        this._input.forEach(function(value, key) {\r\n            destination += \"<li>\";\r\n            var keyAppendable = {\r\n                destination : \"\"\r\n            }\r\n            key.formatJsonToHtml(keyAppendable,currentLevel);\r\n            destination += keyAppendable.destination;\r\n            destination += \"<span class=\\\"type-colon\\\">:</span>\";\r\n\t\t\tvar valueAppendable = {\r\n                destination : \"\"\r\n            }\r\n            value.formatJsonToHtml(valueAppendable,currentLevel);\r\n            destination += valueAppendable.destination;\r\n            logger.debug(\"j value \" + j);\r\n            if(j != (size-1))\r\n                destination += \"<span class=\\\"type-comma\\\">\" + \",\" + \"</span>\";\r\n            destination += \"</li>\";\r\n            j++;  \r\n        });\r\n        destination += \"</ul>\";\r\n        destination += \"<span class=\\\"type-symbol\\\">}</span>\";\r\n        if(this._root) {\r\n            destination += \"</code></div>\";\r\n        }\r\n\r\n        appendable.destination = destination;\r\n    }\r\n}","\r\nimport JsonObject from './JsonObject.js';\r\n\r\nexport default class JsonBoolean extends JsonObject {\r\n\r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        //console.log('destination->' + destination);\r\n        appendable.destination = null;\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        destination += \"<span class=\\\"type-null\\\">\";\r\n        destination += this._input + \"</span>\";\r\n        appendable.destination = destination;\r\n    }\r\n}","\r\nimport JsonObject from './JsonObject.js';\r\n\r\nexport default class JsonNumber extends JsonObject {\r\n\r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        //console.log('destination->' + destination);\r\n        appendable.destination += this._input;\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        destination += \"<span class=\\\"type-number\\\">\";\r\n        destination += this._input + \"</span>\";\r\n        appendable.destination = destination;\r\n    }\r\n}","export default class JsonObject {\r\n\r\n    constructor(root, isKey, input) {\r\n        // if (this.constructor === JsonObject) {\r\n        //     throw new TypeError(\"Can not construct abstract class.\");\r\n        // }\r\n\r\n        if (this.formatJsonToString === JsonObject.prototype.formatJsonToString) {\r\n            // Error Type 4. Child has not implemented this abstract method.\r\n            throw new TypeError(\"Please implement abstract method formatJsonToString.\");\r\n        }\r\n\r\n        if (this.formatJsonToHtml === JsonObject.prototype.formatJsonToHtml) {\r\n            // Error Type 4. Child has not implemented this abstract method.\r\n            throw new TypeError(\"Please implement abstract method formatJsonToHtml.\");\r\n        }\r\n        this._root = root;\r\n        this._isKey = isKey;\r\n        this._input = input;\r\n        this._keyValue = false;\r\n        this._rawInput = '';\r\n    }\r\n\r\n    get root() {\r\n        return this._root;\r\n    }\r\n\r\n    set root(newRoot) {\r\n        this._root = newRoot;\r\n    }\r\n\r\n    get isKey() {\r\n        return this._isKey;\r\n    }\r\n\r\n    set isKey(newKey) {\r\n        this._isKey = newKey;\r\n    }\r\n\r\n    get input() {\r\n        return this._input;\r\n    }\r\n\r\n    set input(newInput) {\r\n        this._input = newInput;\r\n    }\r\n\r\n    get rawInput() {\r\n        return this._rawInput;\r\n    }\r\n\r\n    set rawInput(raw) {\r\n        this._rawInput = raw;\r\n    }\r\n\r\n    set keyValue(newValue) {\r\n        this._keyValue = newValue;\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        throw new TypeError(\"Do not call abstract method toString from child.\");\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        throw new TypeError(\"Do not call abstract method toHtml from child.\");\r\n    }\r\n}","import JsonObject from './JsonObject.js';\r\n\r\nvar logger = require('../logger/logger');\r\n\r\nexport default class JsonString extends JsonObject {\r\n\r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n        this.removeSpecialChars();\r\n    }\r\n\r\n    removeSpecialChars() {\r\n        var tmp = this._input;\r\n        var i = 0;\r\n        var r = [];\r\n        for(i=0;i<tmp.length;i++) {\r\n            if(tmp[i] != '\\r' && tmp[i] != '\\t' && tmp[i] != '\\n') {\r\n                r.push(tmp[i]);\r\n            }\r\n        }\r\n\r\n        this._input = r.join(\"\");\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        ++currentLevel;\r\n        let destination = \"\";\r\n        let tabs = '';\r\n        let i;\r\n        for (i = 0; i < currentLevel; i++)\r\n            tabs = tabs.concat(\"\\t\");\r\n        logger.debug('appendable->' + appendable);\r\n        if (this._isKey) {\r\n            destination += tabs + \"\\\"\" + this._input + \"\\\"\";\r\n        } else if (this._keyValue) {    \r\n            destination += \"\\\"\" + this._input + \"\\\"\";\r\n        } else {\r\n            destination += tabs + \"\\\"\" + this._input + \"\\\"\";\r\n        }\r\n        logger.debug('destination->' + destination);\r\n        appendable.destination = destination;\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        if (this._isKey) {\r\n            destination += \"<span class=\\\"type-key\\\">\\\"\";\r\n        } else {\r\n            destination += \"<span class=\\\"type-string\\\">\\\"\";\r\n        }\r\n        destination += this._input + \"\\\"</span>\";\r\n        appendable.destination = destination;\r\n    }\r\n}","module.exports.debug = (msg) => {\r\n    //console.log(msg);\r\n}\r\nmodule.exports.info = (msg) => {\r\n   //console.log(msg);\r\n}\r\n\r\n// var appRoot = require('app-root-path');\r\n// var winston = require('winston');\r\n\r\n// const logFormat = winston.format.combine(\r\n// \t\t winston.format.colorize(),\r\n// \t\t winston.format.timestamp(),\r\n// \t\t winston.format.align(),\r\n// \t\t winston.format.printf(\r\n// \t\t  info => `${info.timestamp} ${info.level}: ${info.message}`,\r\n// \t\t),);\r\n\r\n// // define the custom settings for each transport (file, console)\r\n// var options = {\r\n//   console: {\r\n//     level: 'debug',\r\n//     handleExceptions: true,\r\n//     json: false,\r\n//     colorize: true\r\n//   }\r\n// };\r\n\r\n// // instantiate a new Winston Logger with the settings defined above\r\n// let logger = winston.createLogger({\r\n// \t  format: logFormat,\r\n// \t  transports: [\r\n// \t    new (winston.transports.Console)(options.console)\r\n// \t  ],\r\n// \t  exitOnError: false, // do not exit on handled exceptions\r\n// \t});\r\n\r\n// // create a stream object with a 'write' function that will be used by `morgan`\r\n// logger.stream = {\r\n//   write: function(message, encoding) {\r\n//     // use the 'info' log level so the output will be picked up by both transports (file and console)\r\n//     logger.info(message);\r\n//   },\r\n// };\r\n\r\n// module.exports = logger;","import JsonString from \"../json/JsonString\";\r\nimport JsonBoolean from \"../json/JsonBoolean\";\r\nimport JsonNumber from \"../json/JsonNumber\";\r\nimport JsonNull from \"../json/JsonNull\";\r\nimport RJsonConstants from \"./RJsonConstants\";\r\nimport StringReader from \"../io/StringReader\";\r\nimport CharStream from \"../io/CharStream\";\r\nimport RJsonLexer from \"./RJsonLexer\";\r\nimport RJsonToken from \"./RJsonToken\";\r\n\r\nexport default class RJsonAbsParser extends RJsonConstants {\r\n\r\n    constructor(rinput,startNow) {\r\n        super();\r\n        \r\n        if(startNow === undefined) {\r\n            this.init(rinput);\r\n        }\r\n    }\r\n\r\n    init(rinput) {\r\n        this.input = rinput;\r\n        this.reader = new StringReader(this.input);\r\n        this.stream = new CharStream(this.reader);\r\n        this.lexer = new RJsonLexer(this.stream);\r\n        this.token = new RJsonToken();\r\n        this.token.next = this.jj_nt = this.lexer.getNextToken();\r\n        this.jj_gen = 0;\r\n        this.jj_la1 = new Array(13);\r\n        this.jj_la1_0 = [0xccf8480, 0x78000, 0x1ccf8000, 0x40, 0x1ccf8000, 0x40, 0xccf8480, 0xccf8000, 0x60000, 0x18000, 0xcc00000, 0x8800000, 0x4400000,];;\r\n        var i;\r\n        for (i = 0; i < 13; i++)\r\n            this.jj_la1[i] = -1;\r\n\r\n        this.jj_kind = -1;\r\n        this.nativeNumbers = false;\r\n    }\r\n\r\n    getNextToken() {\r\n        if ((this.token = this.jj_nt).next != null) this.jj_nt = this.jj_nt.next;\r\n        else this.jj_nt = this.jj_nt.next = this.lexer.getNextToken();\r\n        this.jj_gen++;\r\n        return this.token;\r\n    }\r\n\r\n    objectKey() {\r\n        let o, key;\r\n        switch (this.jj_nt.kind) {\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                key = this.string();\r\n                break;\r\n            case this.SYMBOL:\r\n                key = this.symbol();\r\n                break;\r\n            case this.NULL:\r\n                this.nullValue();\r\n                key = null;\r\n                break;\r\n            case this.NUMBER_INTEGER:\r\n            case this.NUMBER_DECIMAL:\r\n            case this.TRUE:\r\n            case this.FALSE:\r\n                switch (this.jj_nt.kind) {\r\n                    case this.TRUE:\r\n                    case this.FALSE:\r\n                        o = this.booleanValue();\r\n                        break;\r\n                    case this.NUMBER_INTEGER:\r\n                    case this.NUMBER_DECIMAL:\r\n                        o = this.number();\r\n                        break;\r\n                    default:\r\n                        this.jj_la1[1] = this.jj_gen;\r\n                        this.jj_consume_token(-1);\r\n                        throw new Error();\r\n                }\r\n                key = o;\r\n                break;\r\n            case this.BRACE_CLOSE:\r\n                break;\r\n            default:\r\n                this.jj_la1[2] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n        { if (true) { if(key) key.key = true; return key; } }\r\n    }\r\n\r\n    string() {\r\n        let s;\r\n        switch (this.jj_nt.kind) {\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                s = this.doubleQuoteString();\r\n                break;\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n                s = this.singleQuoteString();\r\n                break;\r\n            default:\r\n                this.jj_la1[10] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n        { if (true) return s; }\r\n    }\r\n\r\n    doubleQuoteString() {\r\n        switch (this.jj_nt.kind) {\r\n            case this.STRING_DOUBLE_EMPTY:\r\n                this.jj_consume_token(this.STRING_DOUBLE_EMPTY);\r\n                { if (true) return new JsonString(false, false, \"\"); }\r\n                break;\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                this.jj_consume_token(this.STRING_DOUBLE_NONEMPTY);\r\n                var image = this.token.image;\r\n                { if (true) return new JsonString(false, false, image); }\r\n                break;\r\n            default:\r\n                this.jj_la1[11] = this.sjj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n    }\r\n\r\n    singleQuoteString() {\r\n        switch (this.jj_nt.kind) {\r\n            case this.STRING_SINGLE_EMPTY:\r\n                this.jj_consume_token(this.STRING_SINGLE_EMPTY);\r\n                { if (true) return new JsonString(false, false, \"\"); }\r\n                break;\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n                this.jj_consume_token(this.STRING_SINGLE_NONEMPTY);\r\n                var image = token.image;\r\n                { if (true) return new JsonString(false, false, image); }\r\n                break;\r\n            default:\r\n                this.jj_la1[12] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n    }\r\n\r\n    symbol() {\r\n        this.jj_consume_token(this.SYMBOL);\r\n        { if (true) return new JsonString(false, false, token.image); }\r\n    }\r\n\r\n    nullValue() {\r\n        this.jj_consume_token(this.NULL);\r\n        { if (true) return new JsonNull(); }\r\n    }\r\n\r\n    booleanValue() {\r\n        var b;\r\n        switch (this.jj_nt.kind) {\r\n            case this.TRUE:\r\n                this.jj_consume_token(this.TRUE);\r\n                b = true;\r\n                break;\r\n            case this.FALSE:\r\n                this.jj_consume_token(this.FALSE);\r\n                b = false;\r\n                break;\r\n            default:\r\n                this.jj_la1[8] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n        { if (true) return new JsonBoolean(b); }\r\n    }\r\n\r\n    value() {\r\n        let x;\r\n        switch (this.jj_nt.kind) {\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                x = this.string();\r\n                break;\r\n            case this.NUMBER_INTEGER:\r\n            case this.NUMBER_DECIMAL:\r\n                x = this.number();\r\n                break;\r\n            case this.TRUE:\r\n            case this.FALSE:\r\n                x = this.booleanValue();\r\n                break;\r\n            case this.NULL:\r\n                x = this.nullValue();\r\n                break;\r\n            default:\r\n                this.jj_la1[7] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n        { if (true) return x; }\r\n    }\r\n\r\n    number() {\r\n        let t;\r\n        switch (this.jj_nt.kind) {\r\n            case this.NUMBER_DECIMAL:\r\n                t = this.jj_consume_token(this.NUMBER_DECIMAL);\r\n                if (nativeNumbers) {\r\n                    { if (true) return new JsonNumber(false, false, t.image); }\r\n                } else {\r\n                    { if (true) return new JsonNumber(false, false, t.image); }\r\n                }\r\n                break;\r\n            case this.NUMBER_INTEGER:\r\n                t = this.jj_consume_token(this.NUMBER_INTEGER);\r\n                if (this.nativeNumbers) {\r\n                    { if (true) return new JsonNumber(false, false, t.image); }\r\n                } else {\r\n                    { if (true) return new JsonNumber(false, false, t.image); }\r\n                }\r\n                break;\r\n            default:\r\n                this.jj_la1[9] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n    }\r\n}","export default class RJsonConstants {\r\n\r\n    constructor() {\r\n        /** End of File. */\r\n        this.EOF = 0;\r\n        /** RegularExpression Id. */\r\n        this.C_SINGLE_COMMENT = 1;\r\n        /** RegularExpression Id. */\r\n        this.C_MULTILINE_COMMENT = 2;\r\n        /** RegularExpression Id. */\r\n        this.SH_SINGLE_COMMENT = 3;\r\n        /** RegularExpression Id. */\r\n        this.WHITESPACE = 4;\r\n        /** RegularExpression Id. */\r\n        this.EOL = 5;\r\n        /** RegularExpression Id. */\r\n        this.COMMA = 6;\r\n        /** RegularExpression Id. */\r\n        this.BRACE_OPEN = 7;\r\n        /** RegularExpression Id. */\r\n        this.BRACE_CLOSE = 8;\r\n        /** RegularExpression Id. */\r\n        this.COLON = 9;\r\n        /** RegularExpression Id. */\r\n        this.BRACKET_OPEN = 10;\r\n        /** RegularExpression Id. */\r\n        this.BRACKET_CLOSE = 11;\r\n        /** RegularExpression Id. */\r\n        this.ZERO = 12;\r\n        /** RegularExpression Id. */\r\n        this.DIGIT_NONZERO = 13;\r\n        /** RegularExpression Id. */\r\n        this.DIGIT = 14;\r\n        /** RegularExpression Id. */\r\n        this.NUMBER_INTEGER = 15;\r\n        /** RegularExpression Id. */\r\n        this.NUMBER_DECIMAL = 16;\r\n        /** RegularExpression Id. */\r\n        this.TRUE = 17;\r\n        /** RegularExpression Id. */\r\n        this.FALSE = 18;\r\n        /** RegularExpression Id. */\r\n        this.NULL = 19;\r\n        /** RegularExpression Id. */\r\n        this.QUOTE_DOUBLE = 20;\r\n        /** RegularExpression Id. */\r\n        this.QUOTE_SINGLE = 21;\r\n        /** RegularExpression Id. */\r\n        this.STRING_SINGLE_EMPTY = 22;\r\n        /** RegularExpression Id. */\r\n        this.STRING_DOUBLE_EMPTY = 23;\r\n        /** RegularExpression Id. */\r\n        this.STRING_SINGLE_BODY = 24;\r\n        /** RegularExpression Id. */\r\n        this.STRING_DOUBLE_BODY = 25;\r\n        /** RegularExpression Id. */\r\n        this.STRING_SINGLE_NONEMPTY = 26;\r\n        /** RegularExpression Id. */\r\n        this.STRING_DOUBLE_NONEMPTY = 27;\r\n        /** RegularExpression Id. */\r\n        this.SYMBOL = 28;\r\n\r\n        /** Lexical state. */\r\n        this.DEFAULT = 0;\r\n\r\n        this.LEXICAL_ERROR = 0;\r\n\r\n        /** Literal token values. */\r\n        this.tokenImage = [\r\n            \"<EOF>\",\r\n            \"<C_SINGLE_COMMENT>\",\r\n            \"<C_MULTILINE_COMMENT>\",\r\n            \"<SH_SINGLE_COMMENT>\",\r\n            \"<WHITESPACE>\",\r\n            \"<EOL>\",\r\n            \"\\\",\\\"\",\r\n            \"\\\"{\\\"\",\r\n            \"\\\"}\\\"\",\r\n            \"\\\":\\\"\",\r\n            \"\\\"[\\\"\",\r\n            \"\\\"]\\\"\",\r\n            \"\\\"0\\\"\",\r\n            \"<DIGIT_NONZERO>\",\r\n            \"<DIGIT>\",\r\n            \"<NUMBER_INTEGER>\",\r\n            \"<NUMBER_DECIMAL>\",\r\n            \"\\\"true\\\"\",\r\n            \"\\\"false\\\"\",\r\n            \"\\\"null\\\"\",\r\n            \"\\\"\\\\\\\"\\\"\",\r\n            \"\\\"\\\\\\'\\\"\",\r\n            \"\\\"\\\\\\'\\\\\\'\\\"\",\r\n            \"\\\"\\\\\\\"\\\\\\\"\\\"\",\r\n            \"<STRING_SINGLE_BODY>\",\r\n            \"<STRING_DOUBLE_BODY>\",\r\n            \"<STRING_SINGLE_NONEMPTY>\",\r\n            \"<STRING_DOUBLE_NONEMPTY>\",\r\n            \"<SYMBOL>\",\r\n        ];\r\n    }\r\n}","import RJsonToken from './RJsonToken.js';\r\nimport RJsonTokenMgrError from './RJsonTokenMgrError.js';\r\nimport RJsonConstants from './RJsonConstants.js';\r\n\r\nvar logger = require('../logger/logger');\r\n\r\nexport default class RJsonLexer extends RJsonConstants {\r\n\r\n    constructor(istream) {\r\n        super();\r\n        this.input_stream = istream;\r\n        this.curChar = '';\r\n        this.matchedKind = 0;\r\n        this.matchedPos = 0;\r\n        this.toToken = [0x1ccf8fc1,];\r\n        this.curLexState = 0;\r\n        // this.strLiteralImages = [\r\n        //     \"\", null, null, null, null, 'null', '0o54', 0o173, 0o175, 0o072, 0o133, \r\n        //     0o135, null, null, null, null, null, null, null, null, null, null, \"\\'\", \r\n        //     \"\\\"\", null, null, null, null, null, ];\r\n        this.strLiteralImages = [\r\n            \"\", null, null, null, null, 'null', ',', '{', '}', ':', '[',\r\n            ']', null, null, null, null, null, null, null, null, null, null, \"\\'\",\r\n            \"\\\"\", null, null, null, null, null,];\r\n    }\r\n\r\n    getNextToken() {\r\n        logger.debug(\"getNextToken()\");\r\n        var matchedToken = null;\r\n        var curPos = 0;\r\n        EOFLoop:\r\n        for (; ;) {\r\n            try {\r\n                this.curChar = this.input_stream.beginToken();\r\n            } catch (e) {\r\n                logger.debug(e.stack);\r\n                this.matchedKind = 0;\r\n                matchedToken = this.fillToken();\r\n                return matchedToken;\r\n            }\r\n            logger.debug(\"this.curChar =\" + this.curChar);\r\n            this.matchedKind = 0x7fffffff;\r\n            this.matchedPos = 0;\r\n            curPos = this.analyzeCurrentCharacter();\r\n            logger.debug(\"matchedKind()->\" + this.matchedKind + \",curPos->\" + curPos);\r\n            if (this.matchedKind != 0x7fffffff) {\r\n               \r\n                if (this.matchedPos + 1 < curPos) {\r\n                    this.input_stream.backup(curPos - this.matchedPos - 1); // possible backtracking.\r\n                }\r\n                logger.debug(\"curPos=\" + curPos);\r\n                if ((this.matchedKind == this.C_SINGLE_COMMENT)\r\n                    || (this.matchedKind == this.C_MULTILINE_COMMENT) ) {\r\n                        logger.debug(\"this.matchedKind=\" + this.matchedKind);\r\n                    this.matchedToken = this.fillToken();\r\n                    logger.debug(\"getNextToken()::Matched\" + this.matchedKind);\r\n                    return matchedToken;\r\n                }\r\n                if (this.matchedKind == this.BRACE_OPEN || this.matchedKind == this.TRUE\r\n                    || this.matchedKind == this.NUMBER_INTEGER\r\n                    || this.matchedKind == this.NULL\r\n                    || this.matchedKind == this.COMMA \r\n                    || this.matchedKind == this.STRING_DOUBLE_EMPTY\r\n                    || this.matchedKind == this.STRING_DOUBLE_EMPTY) {\r\n                    matchedToken = this.fillToken();\r\n                    logger.debug(\"getNextToken()::Matched->\" + matchedToken);\r\n                    return matchedToken;\r\n                }\r\n                if ((this.toToken[this.matchedKind >> 6] & (1 << (this.matchedKind & 77))) != 0) {\r\n                    matchedToken = this.fillToken();\r\n                    logger.debug(\"getNextToken()::Matched >> 6->\" + this.matchedKind);\r\n                    return matchedToken;\r\n                } else {\r\n                    continue EOFLoop;\r\n                }\r\n            }\r\n            // error begins.....\r\n            let error_line = this.input_stream.getEndLine;\r\n            let error_column = this.input_stream.getEndColumn;\r\n            let error_after = null;\r\n            let EOFSeen = false;\r\n            try {\r\n                this.input_stream.readChar();\r\n                this.input_stream.backup(1);\r\n            } catch (e1) {\r\n                logger.debug(e1.stack);\r\n                EOFSeen = true;\r\n                error_after = curPos <= 1 ? \"\" : this.input_stream.getImage();\r\n                if (this.curChar == '\\n' || this.curChar == '\\r') {\r\n                    error_line++;\r\n                    error_column = 0;\r\n                } else {\r\n                    error_column++;\r\n                }\r\n            }\r\n            logger.debug('xxxxxxxxxxxx');\r\n            if (!EOFSeen) {\r\n                logger.debug('xxxxxxxxxxxx');\r\n                this.input_stream.backup(1);\r\n                error_after = curPos <= 1 ? \"\" : this.input_stream.getImage();\r\n            }\r\n            logger.debug('zzzzzzzzzzzzzzzz');\r\n            throw new RJsonTokenMgrError(EOFSeen, this.curLexState, error_line, error_column, error_after, this.curChar, this.LEXICAL_ERROR);\r\n        }\r\n    }\r\n\r\n    analyzeCurrentCharacter() {\r\n        if (this.curChar == ' ' || this.curChar == '\\t' || this.curChar == '\\n' || this.curChar == '\\r') {\r\n            this.consume_char();\r\n            try {\r\n                this.curChar = this.input_stream.readChar();\r\n            } catch (e) {\r\n                // hack for special characters after the last token.\r\n                this.matchedKind = 0;\r\n                return 1;\r\n            }\r\n            return this.analyzeCurrentCharacter();\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        //logger.debug('analyzeCurrentCharacter()->' + code);\r\n        switch (code) {\r\n            case 123: // '{'\r\n                return this.stopAtPos(0, this.BRACE_OPEN);\r\n            case 125: // '}'\r\n                return this.stopAtPos(0, this.BRACE_CLOSE);\r\n            case 34: // '\"'\r\n                logger.debug('case 34()->' + code);\r\n                return this.moveChar01(8);\r\n            case 39: // '\\''\r\n                return this.moveChar01(4);\r\n            case 44: // ','\r\n                return this.stopAtPos(0, this.COMMA);\r\n            case 58: // ':'\r\n                return this.stopAtPos(0, this.COLON);\r\n            case 91: // '['\r\n                return this.stopAtPos(0, this.BRACKET_OPEN);\r\n            case 93: // ']'\r\n                return this.stopAtPos(0, this.BRACKET_CLOSE);\r\n            case 70: // 'F'\r\n            case 102: // 'f'\r\n                return this.moveChar01(4);\r\n            case 78: // 'N'\r\n            case 110: // 'n'\r\n                return this.moveChar01(8);\r\n            case 84: // 'T'\r\n            case 116: // 't'\r\n                return this.moveChar01(2);\r\n            case 47: // '/'\r\n                return this.moveChar01(6);\r\n            case 35: // '#'\r\n                return this.moveChar(0, '\\n');\r\n            default:\r\n                return this.findNumber(0, 0);\r\n        }\r\n    }\r\n\r\n    isDigit() {\r\n        \r\n        let code = this.curChar.charCodeAt();\r\n        logger.debug(\"isDigit-\\\"\" + code + \"\\\"\");\r\n\r\n        if (code == 46) { // '.'\r\n            return true;\r\n        }\r\n\r\n        if (code > 47 && code < 58) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    findNumber(startState, curPos) {\r\n        logger.debug(\"findNumber=\\\"\" + this.curChar + \"\\\"\");\r\n        while (this.isDigit()) {\r\n            ++curPos;\r\n            try {\r\n                this.curChar = this.input_stream.readChar();\r\n            } catch (e) {\r\n                return curPos;\r\n            }\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        logger.debug(\"\\\"\" + code + \"\\\"\");\r\n        if (code == 44 || code == 125\r\n            || this.curChar == '\\r' || this.curChar == '\\n' || this.curChar == ' '\r\n            || this.curChar == '\\t') {\r\n            --curPos;\r\n            logger.debug(\"\\\"\" + code + \"\\\"\");\r\n            this.matchedKind = this.NUMBER_INTEGER;\r\n            this.matchedPos = curPos;\r\n            this.input_stream.backup(1);\r\n            return curPos;\r\n        }\r\n        // not a valid numbers\r\n        return curPos;\r\n    }\r\n\r\n    findStringLiteral(curPos, active0) {\r\n        //logger.debug(\"finding string literal\");\r\n        var kind = 0x7fffffff;\r\n        try {\r\n            this.curChar = this.input_stream.readChar();\r\n        } catch (e) {\r\n            return 1;\r\n        }\r\n        for (; ;) {\r\n            let code = this.curChar.charCodeAt();\r\n            //logger.debug(\"findStringLiteral() = \" + code);\r\n            switch (code) {\r\n                case 34: // '\"'\r\n                    kind = this.STRING_DOUBLE_NONEMPTY;\r\n                    break;\r\n                case 92: // '\\escape char\r\n                    // check if the next char is '\"', then it is escape sequence. consume the next token.\r\n                    try {\r\n                        this.curChar = this.input_stream.readChar();\r\n                    } catch (e) {\r\n                        return 1;\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            ++curPos;\r\n            if (kind != 0x7fffffff) {\r\n                this.matchedKind = kind;\r\n                this.matchedPos = curPos;\r\n                //logger.debug(\"returning curPos = \" + curPos);\r\n                return curPos;\r\n            }\r\n            try {\r\n                this.curChar = this.input_stream.readChar();\r\n            } catch (e) {\r\n                logger.debug(e.stack);\r\n                return curPos;\r\n            }\r\n        }\r\n    }\r\n\r\n    moveChar(curPos, target) {\r\n        logger.debug(\"moveChar::curChar=\" + this.curChar + \",target=\" + target);\r\n        var kind = 0x7fffffff;\r\n        try {\r\n            this.curChar = this.input_stream.readChar();\r\n        } catch (e) {\r\n            return 1;\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        for (; ;) {\r\n            if (this.curChar == '\\n' || this.curChar == '\\r' || this.curChar == '\\f') {\r\n                kind = this.C_SINGLE_COMMENT;\r\n            }\r\n            if (code == 42) { // '*'\r\n                \r\n                // lookahead for char '/'\r\n                try {\r\n                    this.curChar = this.input_stream.readChar();\r\n                } catch (e) {\r\n                    return 1;\r\n                }\r\n                let ccode = this.curChar.charCodeAt();\r\n                if (ccode == 47) {\r\n                    ++curPos;\r\n                    kind = this.C_MULTILINE_COMMENT;\r\n                } else {\r\n                    this.input_stream.backup(1);\r\n                }\r\n            }\r\n\r\n            ++curPos;\r\n            if (kind != 0x7fffffff) {\r\n                this.matchedKind = kind;\r\n                this.matchedPos = curPos;\r\n                return curPos;\r\n            }\r\n            try {\r\n                this.curChar = this.input_stream.readChar();\r\n            } catch (e) {\r\n                return curPos;\r\n            }\r\n            code = this.curChar.charCodeAt();\r\n        }\r\n    }\r\n\r\n    moveChar01(active0) {\r\n        try {\r\n            //logger.debug(\"@moveChar01::curChar=\" + this.curChar + \",code=\" + code);\r\n            this.curChar = this.input_stream.readChar();\r\n            //logger.debug(\"@moveChar01::curChar=\" + this.curChar + \",code=\" + code);\r\n        } catch (e) {\r\n            logger.debug(e.stack);\r\n            return 1;\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        logger.debug(\"moveChar01::curChar=\" + this.curChar + \",code=\" + code);\r\n        switch (code) {\r\n            case 34: // '\"'\r\n                if ((active0 & 8) != 0)\r\n                    return this.stopAtPos(1, this.STRING_DOUBLE_EMPTY);\r\n                break;\r\n            case 39: // '\\''\r\n                if ((active0 & 4) != 0)\r\n                    return this.stopAtPos(1, this.STRING_SINGLE_EMPTY);\r\n                break;\r\n            case 65: // 'A'\r\n            case 97: // 'a'\r\n                if ((active0 & 4) != 0)\r\n                    return this.moveChar02(active0, 4);\r\n                break;\r\n            case 82: // 'R'\r\n            case 114: // 'r'\r\n                if ((active0 & 2) != 0)\r\n                    return this.moveChar02(active0, 4);\r\n                break;\r\n            case 85: // 'U'\r\n            case 117: // 'u'\r\n                if ((active0 & 8) != 0)\r\n                    return this.moveChar02(active0, 8);\r\n                break;\r\n            case 47: // '/' - C_SINGLE_COMMENT\r\n                if ((active0 & 6) != 0)\r\n                    return this.moveChar(0, '\\n');\r\n                break;\r\n            case 42: // '*' - C_MULTILINE_COMMENT\r\n                if ((active0 & 6) != 0)\r\n                    return this.moveChar(0, '*');\r\n                break;\r\n            default:\r\n                break;\r\n\r\n        }\r\n        return this.findStringLiteral(0, active0);\r\n    }\r\n\r\n    moveChar02(old0, active0) {\r\n        try {\r\n            this.curChar = this.input_stream.readChar();\r\n        } catch (e) {\r\n            return 2;\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        //logger.debug(\"moveChar02::curChar=\" + this.curChar + \",code=\" + code);\r\n        switch (code) {\r\n            case 76: // L\r\n            case 108:// l\r\n                return this.moveChar03(active0, 5);\r\n            case 85:// U\r\n            case 117:// u\r\n                return this.moveChar03(active0, 2);\r\n            default:\r\n                break;\r\n        }\r\n        return this.findStringLiteral(1, active0);\r\n    }\r\n\r\n    moveChar03(old0, active0) {\r\n        try {\r\n            this.curChar = this.input_stream.readChar();\r\n        } catch (e) {\r\n            return 3;\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        logger.debug(\"moveChar03::curChar=\" + this.curChar + \",code=\" + code);\r\n        switch (code) {\r\n            case 69: // E\r\n            case 101: // e\r\n                if ((active0 & 2) != 0)\r\n                    return this.stopAtPos(3, this.TRUE);\r\n                break;\r\n            case 76: // L\r\n            case 108:// l\r\n                \r\n                if ((active0 & 5) != 0) {\r\n                    logger.debug('moveChar03->foundNull-' + (active0 & 5));\r\n                    return this.stopAtPos(3, this.NULL);\r\n                }\r\n                break;\r\n            case 83: // S\r\n            case 115:// s\r\n                return this.moveChar04(active0, 4);\r\n            default:\r\n                break;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    moveChar04(old0, active0) {\r\n        try {\r\n            this.curChar = this.input_stream.readChar();\r\n        } catch (e) {\r\n            return 4;\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        logger.debug(\"moveChar04::curChar=\" + this.curChar + \",code=\" + code);\r\n        switch (code) {\r\n            case 69: // E\r\n            case 101:// e\r\n                if ((active0 & 4) != 0)\r\n                    return this.stopAtPos(4, this.FALSE);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    stopAtPos(pos, kind) {\r\n        this.matchedKind = kind;\r\n        this.matchedPos = pos;\r\n        return pos + 1;\r\n    }\r\n\r\n    checkForSpace() {\r\n        let code = this.curChar.charCodeAt();\r\n        if (code == 32) {\r\n            try {\r\n                curChar = input_stream.readChar();\r\n            } catch (e) {\r\n            }\r\n            let ccode = this.curChar.charCodeAt();\r\n            if (ccode != 32) {\r\n                input_stream.backup(1);\r\n                return;\r\n            } else {\r\n                this.checkForSpace();\r\n            }\r\n        }\r\n    }\r\n\r\n    fillToken() {\r\n        let beginLine = this.input_stream.getBeginLine;\r\n        let beginColumn = this.input_stream.getBeginColumn;\r\n        let endLine = this.input_stream.getEndLine;\r\n        let endColumn = this.input_stream.getEndColumn;\r\n        var im = this.strLiteralImages[this.matchedKind];\r\n        let tokenImage = (im == null) ? this.input_stream.getImage() : im;\r\n        //let tokenImage = this.input_stream.getImage();\r\n        let token = RJsonToken.newToken(this.matchedKind, tokenImage);\r\n        logger.debug('generated new token ->' + token.toString());\r\n        token.beginLine = beginLine;\r\n        token.endLine = endLine;\r\n        token.beginColumn = beginColumn;\r\n        token.endColumn = endColumn;\r\n        return token;\r\n    }\r\n\r\n    consume_char() {\r\n        if (this.curChar == '\\n') {\r\n        } else if (this.curChar == ' ') {\r\n            this.input_stream.spaceDetected();\r\n        }\r\n\r\n    }\r\n}\r\n","import JsonMap from \"../json/JsonMap\";\r\nimport JsonList from \"../json/JsonList\";\r\nimport RJsonAbsParser from \"./RJsonAbsParser\";\r\nimport RJsonParserError from \"./RJsonParserError\";\r\n\r\nvar logger = require('../logger/logger');\r\n\r\nexport default class RJsonParser extends RJsonAbsParser {\r\n\r\n    constructor(rinput, startNow) {\r\n        super(rinput, startNow);\r\n    }\r\n\r\n    parse() {\r\n\r\n        var toReturn = this.anything();\r\n        toReturn.root = true;\r\n        toReturn.rawInput = this.input;\r\n        if (!this.ensureEOF()) {\r\n            throw new Error(\"parser.expectedEOF\");\r\n        }\r\n        return toReturn;\r\n\r\n    }\r\n\r\n    anything() {\r\n        logger.debug(\"RJsonParser::anything()\" + this.jj_nt);\r\n        let x;\r\n        switch (this.jj_nt.kind) {\r\n            case this.BRACE_OPEN:\r\n                x = this.object();\r\n                break;\r\n            case this.BRACKET_OPEN:\r\n                x = this.list();\r\n                break;\r\n            case this.NUMBER_INTEGER:\r\n            case this.NUMBER_DECIMAL:\r\n            case this.TRUE:\r\n            case this.FALSE:\r\n            case this.NULL:\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                x = this.value();\r\n                break;\r\n            case this.BRACKET_CLOSE:\r\n                break;\r\n            default:\r\n                this.jj_la1[0] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new RJsonParserError();\r\n        }\r\n        { if (true) return x; }\r\n    }\r\n\r\n    object() {\r\n        let map = new JsonMap(true, false, new Map());\r\n        let key, value;\r\n        this.jj_consume_token(this.BRACE_OPEN);\r\n        switch (this.jj_nt.kind) {\r\n            case this.NUMBER_INTEGER:\r\n            case this.NUMBER_DECIMAL:\r\n            case this.TRUE:\r\n            case this.FALSE:\r\n            case this.NULL:\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n            case this.SYMBOL:\r\n                key = this.objectKey();\r\n                this.jj_consume_token(this.COLON);\r\n                value = this.anything();\r\n                value.key = true;\r\n                map.put(key, value);\r\n                key = null; value = null;\r\n                label_1:\r\n                while (true) {\r\n                    switch (this.jj_nt.kind) {\r\n                        case this.COMMA:\r\n                            ;\r\n                            break;\r\n                        default:\r\n                            this.jj_la1[3] = this.jj_gen;\r\n                            break label_1;\r\n                    }\r\n                    logger.debug('^^^^^^^^->' + this.jj_nt.kind);\r\n                    this.jj_consume_token(this.COMMA);\r\n                    logger.debug('^^^^^^^^->' + this.jj_nt.kind);\r\n                    key = this.objectKey();\r\n                    if (!key)\r\n                        break;\r\n                    this.jj_consume_token(this.COLON);\r\n                    value = this.anything();\r\n                    value.key = true;\r\n                    map.put(key, value);\r\n                    key = null; value = null;\r\n                }\r\n                break;\r\n            default:\r\n                this.jj_la1[4] = this.jj_gen;\r\n        }\r\n        this.jj_consume_token(this.BRACE_CLOSE);\r\n        { if (true) return map; }\r\n    }\r\n\r\n    list() {\r\n        let list = new JsonList(true, false, []);\r\n        logger.debug(\"RJsonParser::list()\" + this.jj_nt.toString());\r\n        let value;\r\n        this.jj_consume_token(this.BRACKET_OPEN);\r\n        switch (this.jj_nt.kind) {\r\n            case this.BRACE_OPEN:\r\n            case this.BRACKET_OPEN:\r\n            case this.NUMBER_INTEGER:\r\n            case this.NUMBER_DECIMAL:\r\n            case this.TRUE:\r\n            case this.FALSE:\r\n            case this.NULL:\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                value = this.anything();\r\n                list.add(value);\r\n                value = null;\r\n                label_2:\r\n                while (true) {\r\n                    switch (this.jj_nt.kind) {\r\n                        case this.COMMA:\r\n                            ;\r\n                            break;\r\n                        default:\r\n                            this.jj_la1[5] = this.jj_gen;\r\n                            break label_2;\r\n                    }\r\n                    logger.debug('^^^^^^^^->' + this.jj_nt.kind);\r\n                    this.jj_consume_token(this.COMMA);\r\n                    logger.debug('^^^^^^^^->' + this.jj_nt.kind);\r\n                    value = this.anything();\r\n                    if(!value)\r\n                        break;\r\n                    list.add(value);\r\n                    value = null;\r\n                }\r\n                break;\r\n            default:\r\n                this.jj_la1[6] = this.jj_gen;\r\n                ;\r\n        }\r\n        this.jj_consume_token(this.BRACKET_CLOSE);\r\n        { if (true) return list; }\r\n    }\r\n\r\n\r\n\r\n    ensureEOF() {\r\n        this.jj_consume_token(0);\r\n        { if (true) return true; }\r\n    }\r\n\r\n    jj_consume_token(kind) {\r\n\r\n        logger.debug(\"01-RJsonParser::jj_consume_token::this.jj_nt=\" + this.jj_nt + \",cKind=\" + kind + \",this.jj_nt.next=\" + this.jj_nt.next);\r\n        var oldToken = this.token;\r\n        if ((this.token = this.jj_nt).next != null) {\r\n            this.jj_nt = this.jj_nt.next;\r\n        } else {\r\n            this.jj_nt = this.jj_nt.next = this.lexer.getNextToken();\r\n            logger.debug(\"02-RJsonParser::jj_consume_token::this.jj_nt=\" + this.jj_nt + \",cKind=\" + kind + \",this.jj_nt.next=\" + this.jj_nt.next);\r\n        }\r\n        logger.debug('token.kind=' + this.token.kind);\r\n\r\n        if (this.token.kind === kind) {\r\n            logger.debug(\"03-RJsonParser::jj_consume_token::matched(this.token.kind)\" + this.token.kind + \",ckind=\" + kind);\r\n            this.jj_gen++;\r\n            return this.token;\r\n        }\r\n\r\n\r\n        this.jj_nt = this.token;\r\n        this.token = oldToken;\r\n        this.jj_kind = kind;\r\n        //logger.debug('-------------------');\r\n        var parserError = this.generateParseException();\r\n        //logger.debug('-------------------' + e.message);\r\n        throw parserError;\r\n    }\r\n\r\n    generateParseException() {\r\n        logger.debug('generateParseException');\r\n        var jj_expentries = [];\r\n        var la1tokens = [];\r\n        var jj_expentry = [];\r\n        var i, j, k, l;\r\n        if (this.jj_kind >= 0) {\r\n            la1tokens[this.jj_kind] = true;\r\n            this.jj_kind = -1;\r\n        }\r\n        for (i = 0; i < 13; i++) {\r\n            if (this.jj_la1[i] == this.jj_gen) {\r\n                for (j = 0; j < 32; j++) {\r\n                    if ((this.jj_la1_0[i] & (1 << j)) != 0) {\r\n                        la1tokens[j] = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (k = 0; k < 29; k++) {\r\n            if (la1tokens[k]) {\r\n                jj_expentry[0] = k;\r\n                jj_expentries.push(jj_expentry);\r\n            }\r\n        }\r\n        var exptokseq = [];\r\n        for (l = 0; l < jj_expentries.size; l++) {\r\n            exptokseq[l] = jj_expentries[l];\r\n        }\r\n\r\n        var e = new RJsonParserError(this.token, exptokseq, this.tokenImage);\r\n        logger.debug('generateParseException ::' + e.getMessage());\r\n        return e;\r\n    }\r\n\r\n    static runParser(input) {\r\n        var instance = new RJsonParser(input);\r\n        var jsonObject = instance.parse();\r\n        return jsonObject;\r\n    }\r\n}\r\n\r\nexport function runParser(input) {\r\n    RJsonParser.runParser(input);\r\n}","var logger = require('../logger/logger');\r\n\r\nexport default class RJsonParserError extends Error {\r\n\r\n    constructor(_currentTokenVal, _expectedTokenSequencesVal, _tokenImageVal) {\r\n        super();\r\n        this.name = \"RJsonParserError\"; \r\n        this.currentToken = _currentTokenVal;\r\n        this.expectedTokenSequences = _expectedTokenSequencesVal;\r\n        this.tokenImage = _tokenImageVal;\r\n        this.eol = \"&\";\r\n    }\r\n\r\n    getMessage() {\r\n        let expected = '';\r\n        let maxSize, i, j = 0;\r\n        for (i = 0; i < this.expectedTokenSequences.length; i++) {\r\n            if (maxSize < this.expectedTokenSequences[i].length) {\r\n                maxSize = this.expectedTokenSequences[i].length;\r\n            }\r\n            for (j = 0; j < this.expectedTokenSequences[i].length; j++) {\r\n                expected += this.tokenImage[this.expectedTokenSequences[i][j]] + ' ';\r\n            }\r\n            if (this.expectedTokenSequences[i][this.expectedTokenSequences[i].length - 1] != 0) {\r\n                expected += \"...\";\r\n            }\r\n            expected += eol + \"    \";\r\n        }\r\n\r\n        let retval = \"Encountered \\\"\";\r\n        let tok = this.currentToken.next;\r\n        for (i = 0; i < maxSize; i++) {\r\n            if (i != 0) retval += \" \";\r\n            if (tok.kind == 0) {\r\n                retval += this.tokenImage[0];\r\n                break;\r\n            }\r\n            retval += \" \" + this.tokenImage[tok.kind];\r\n            retval += \" \\\"\";\r\n            retval += this.add_escapes(tok.image);\r\n            retval += \" \\\"\";\r\n            tok = tok.next;\r\n        }\r\n\r\n        retval += \"\\\" at line \" + this.currentToken.next.beginLine + \", column \" + this.currentToken.next;\r\n        retval += \".\" + this.eol;\r\n        if (this.expectedTokenSequences.length == 1) {\r\n            retval += \"Was expecting:\" + this.eol + \"    \";\r\n        } else {\r\n            retval += \"Was expecting one of:\" + this.eol + \"    \";\r\n        }\r\n        retval += expected;\r\n        this.message = retval;\r\n        logger.debug(this.message);\r\n        return retval;\r\n    }\r\n\r\n    addEscapes(str) {\r\n        let i,ch;\r\n        let retval = \"\";\r\n        for (i = 0; i < str.length; i++) {\r\n            switch (str.charAt(i)) {\r\n                case 0:\r\n                    continue;\r\n                case '\\b':\r\n                    retval += \"\\\\b\";\r\n                    continue;\r\n                case '\\t':\r\n                    retval += \"\\\\t\";\r\n                    continue;\r\n                case '\\n':\r\n                    retval += \"\\\\n\";\r\n                    continue;\r\n                case '\\f':\r\n                    retval += \"\\\\f\";\r\n                    continue;\r\n                case '\\r':\r\n                    retval += \"\\\\r\";\r\n                    continue;\r\n                case '\\\"':\r\n                    retval += \"\\\\\\\"\";\r\n                    continue;\r\n                case '\\'':\r\n                    retval += \"\\\\\\'\";\r\n                    continue;\r\n                case '\\\\':\r\n                    retval += \"\\\\\\\\\";\r\n                    continue;\r\n                default:\r\n                    if ((ch = str.charAt(i)) < 0x20 || ch > 0x7e) {\r\n                        var s = \"0000\" + ch.toString();\r\n                        retval += \"\\\\u\" + s.substring(s.length - 4, s.length);\r\n                    } else {\r\n                        retval += ch;\r\n                    }\r\n                    continue;\r\n            }\r\n        }\r\n        return retval.toString();\r\n    }\r\n}","var logger = require('../logger/logger');\r\n\r\nexport default class RJsonToken {\r\n    constructor(ofkind,nimage) {\r\n        this._kind = ofkind;\r\n        this._image = nimage;\r\n        this._next = null;\r\n        this.specialToken = null;\r\n    }\r\n\r\n    set next(newNext) {\r\n        this._next = newNext;\r\n    }\r\n\r\n    get next() {\r\n        return this._next;\r\n    }\r\n\r\n    set beginLine(line) {\r\n        this._beginLine = line;\r\n    }\r\n\r\n    get beginLine() {\r\n        return this._beginLine;\r\n    }\r\n\r\n    set endLine(line) {\r\n        this._endLine = line;\r\n    }\r\n\r\n    set beginColumn(column) {\r\n        this._beginColumn = column;\r\n    }\r\n\r\n    get beginColumn() {\r\n        return this._beginColumn;\r\n    }\r\n\r\n    set endColumn(column) {\r\n        this._endColumn = column;\r\n    }\r\n\r\n    get kind() {\r\n        return this._kind;\r\n    }\r\n\r\n    set kind(newKind) {\r\n        this._kind = newKind;\r\n    }\r\n\r\n    get image() {\r\n        logger.debug('returning from token image length ->' + this._image.length);\r\n        return this._image;\r\n    }\r\n\r\n    static newToken(kind,image) {\r\n        return new RJsonToken(kind,image);\r\n    }\r\n\r\n    toString() {\r\n     return \"kind=\" + this._kind + \",image=\" + this.image;\r\n    }\r\n}","var logger = require('../logger/logger');\r\n\r\nexport default class RJsonTokenMgrError {\r\n    static addEscapes(str) {\r\n        //logger.debug('addEscapes)' + str);\r\n        let i,ch;\r\n        let retval = \"\";\r\n        for (i = 0; i < str.length; i++) {\r\n            switch (str.charAt(i)) {\r\n                case 0:\r\n                    continue;\r\n                case '\\b':\r\n                    retval += \"\\\\b\";\r\n                    continue;\r\n                case '\\t':\r\n                    retval += \"\\\\t\";\r\n                    continue;\r\n                case '\\n':\r\n                    retval += \"\\\\n\";\r\n                    continue;\r\n                case '\\f':\r\n                    retval += \"\\\\f\";\r\n                    continue;\r\n                case '\\r':\r\n                    retval += \"\\\\r\";\r\n                    continue;\r\n                case '\\\"':\r\n                    retval += \"\\\\\\\"\";\r\n                    continue;\r\n                case '\\'':\r\n                    retval += \"\\\\\\'\";\r\n                    continue;\r\n                case '\\\\':\r\n                    retval += \"\\\\\\\\\";\r\n                    continue;\r\n                default:\r\n                    if ((ch = str.charAt(i)) < 0x20 || ch > 0x7e) {\r\n                        var s = \"0000\" + ch.toString();\r\n                        retval += \"\\\\u\" + s.substring(s.length - 4, s.length);\r\n                        //logger.debug('retval' + retval);\r\n                    } else {\r\n                        retval += ch;\r\n                    }\r\n                    continue;\r\n            }\r\n        }\r\n        //logger.debug('8888' + retval.toString());\r\n        return retval.toString();\r\n    }\r\n\r\n    static LexicalError(EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar) {\r\n        let code = curChar.charCodeAt();\r\n        //logger.debug('LexicalError(EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar)');\r\n        var res = \"Lexical error at line \" +\r\n            errorLine + \", column \" +\r\n            errorColumn + \".  Encountered: \" +\r\n            (EOFSeen ? \"<EOF> \" : (\"\\\"\" + RJsonTokenMgrError.addEscapes(curChar) + \"\\\"\") + \" (\" + code + \"), \") +\r\n            \"after : \\\"\" + RJsonTokenMgrError.addEscapes(errorAfter) + \"\\\"\";\r\n        //logger.debug(res);\r\n    }\r\n\r\n    constructor(EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar, reason) {\r\n        this.message = RJsonTokenMgrError.LexicalError(EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar);\r\n        this.reason = reason;\r\n    }\r\n}"],"sourceRoot":""}