{"version":3,"sources":["webpack://RJsonParser/webpack/universalModuleDefinition","webpack://RJsonParser/./src/app.js","webpack://RJsonParser/./src/io/CharStream.js","webpack://RJsonParser/./src/io/IOString.js","webpack://RJsonParser/./src/io/Reader.js","webpack://RJsonParser/./src/io/StringReader.js","webpack://RJsonParser/./src/json/JsonBoolean.js","webpack://RJsonParser/./src/json/JsonList.js","webpack://RJsonParser/./src/json/JsonMap.js","webpack://RJsonParser/./src/json/JsonNull.js","webpack://RJsonParser/./src/json/JsonNumber.js","webpack://RJsonParser/./src/json/JsonObject.js","webpack://RJsonParser/./src/json/JsonString.js","webpack://RJsonParser/./src/logger/logger.js","webpack://RJsonParser/./src/parser/RJsonAbsParser.js","webpack://RJsonParser/./src/parser/RJsonConstants.js","webpack://RJsonParser/./src/parser/RJsonLexer.js","webpack://RJsonParser/./src/parser/RJsonParser.js","webpack://RJsonParser/./src/parser/RJsonParserError.js","webpack://RJsonParser/./src/parser/RJsonToken.js","webpack://RJsonParser/./src/parser/RJsonTokenMgrError.js"],"names":["root","factory","exports","module","define","amd","this","example","init","console","log","document","getElementById","classList","toggle","target","value","instance","jsonObj","parse","appendable","destination","formatJsonToString","formatInputString","formatJsonToHtml","innerHTML","formatHtml","e","stack","message","JSON","stringify","addEventListener","format","logger","CharStream","stream","maxNextCharInd","nextCharInd","bufline","bufcolumn","column","line","bufpos","bufsize","available","maxBufSize","inBuf","prevCharIsCR","prevCharIsLF","tabSize","tokenBegin","nextCharBuf","Array","buffer","inputStream","readFromBuffer","readChar","c","adjustBuffSize","readByte","checkSpecial","updateLineColumn","fillBuff","debug","charCodeAt","i","read","close","Error","backup","olumn","amount","expandBuff","response","toString","IOString","chars","offset","count","j","ccode","code","join","Reader","newInput","constructor","TypeError","prototype","getChars","input","length","next","mark","cbuf","len","srcBegin","srcEnd","dst","dstBegin","StringReader","super","ensureOpen","n","Math","min","JsonBoolean","isKey","currentLevel","_input","JsonList","jsonObject","push","tabs","size","forEach","element","cAppendable","_root","JsonMap","jsonObjectKey","jsonObjectValue","set","info","key","keyAppendable","valueAppendable","keyValue","JsonNumber","JsonObject","_isKey","_keyValue","_rawInput","newRoot","newKey","raw","newValue","JsonString","removeSpecialChars","tmp","r","concat","msg","RJsonAbsParser","rinput","startNow","undefined","reader","lexer","token","jj_nt","getNextToken","jj_gen","jj_la1","jj_la1_0","jj_kind","nativeNumbers","o","kind","STRING_SINGLE_EMPTY","STRING_DOUBLE_EMPTY","STRING_SINGLE_NONEMPTY","STRING_DOUBLE_NONEMPTY","string","SYMBOL","symbol","NULL","nullValue","NUMBER_INTEGER","NUMBER_DECIMAL","TRUE","FALSE","booleanValue","number","jj_consume_token","BRACE_CLOSE","s","doubleQuoteString","singleQuoteString","image","sjj_gen","b","x","t","RJsonConstants","EOF","C_SINGLE_COMMENT","C_MULTILINE_COMMENT","SH_SINGLE_COMMENT","WHITESPACE","EOL","COMMA","BRACE_OPEN","COLON","BRACKET_OPEN","BRACKET_CLOSE","ZERO","DIGIT_NONZERO","DIGIT","QUOTE_DOUBLE","QUOTE_SINGLE","STRING_SINGLE_BODY","STRING_DOUBLE_BODY","DEFAULT","LEXICAL_ERROR","tokenImage","RJsonLexer","istream","input_stream","curChar","matchedKind","matchedPos","toToken","curLexState","strLiteralImages","matchedToken","curPos","EOFLoop","beginToken","fillToken","analyzeCurrentCharacter","error_line","getEndLine","error_column","getEndColumn","error_after","EOFSeen","e1","getImage","consume_char","stopAtPos","moveChar01","moveChar","findNumber","startState","isDigit","active0","moveChar02","findStringLiteral","old0","moveChar03","moveChar04","pos","checkForSpace","beginLine","getBeginLine","beginColumn","getBeginColumn","endLine","endColumn","im","spaceDetected","RJsonParser","toReturn","anything","rawInput","ensureEOF","object","list","map","Map","objectKey","put","label_1","add","label_2","oldToken","generateParseException","k","l","jj_expentries","la1tokens","jj_expentry","exptokseq","getMessage","runParser","RJsonParserError","_currentTokenVal","_expectedTokenSequencesVal","_tokenImageVal","name","currentToken","expectedTokenSequences","eol","maxSize","expected","retval","tok","add_escapes","str","ch","charAt","substring","RJsonToken","ofkind","nimage","_kind","_image","_next","specialToken","newNext","_beginLine","_endLine","_beginColumn","_endColumn","newKind","RJsonTokenMgrError","lexState","errorLine","errorColumn","errorAfter","addEscapes","reason","LexicalError"],"mappings":"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","file":"app.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RJsonParser\"] = factory();\n\telse\n\t\troot[\"RJsonParser\"] = factory();\n})(this, function() {\nreturn ","import RJsonParser from \"./parser/RJsonParser\"\r\n\r\nimport css from \"./css/style.css\";\r\n\r\nvar example = { \"store\": { \"book\": [{ \"category\": \"reference\", \"author\": \"Nigel Rees\", \"title\": \"Sayings of the Century\", \"price\": 8.95 }, { \"category\": \"fiction\", \"author\": \"Evelyn Waugh\", \"title\": \"Sword of Honour\", \"price\": 12.99 }, { \"category\": \"fiction\", \"author\": \"J. R. R. Tolkien\", \"title\": \"The Lord of the Rings\", \"isbn\": \"0-395-19395-8\", \"price\": 22.99 }], \"bicycle\": { \"color\": \"red\", \"price\": 19.95 } } };\r\n\r\nformat();\r\n\r\nfunction formatInputString(jsonObj) {\r\n    var appendable = {\r\n        destination: \"\"\r\n    }\r\n    jsonObj.formatJsonToString(appendable, -1);\r\n    console.log(appendable.destination);\r\n    document.getElementById('inputtextarea').value = appendable.destination;\r\n}\r\n\r\nfunction formatHtml(jsonObj) {\r\n    var appendable = {\r\n        destination: \"\"\r\n    }\r\n    jsonObj.formatJsonToHtml(appendable, -1);\r\n    console.log(appendable.destination);\r\n    document.getElementById('json').innerHTML = appendable.destination;\r\n}\r\n\r\nfunction init() {\r\n    try {\r\n        console.log('reformatting.');\r\n        document.getElementById(\"input-spinner\").classList.toggle(\"hidden\");\r\n        var target = document.getElementById('inputtextarea');\r\n        console.log('parsing ' + target.value);\r\n        let instance = new RJsonParser(target.value);\r\n        target.value = 'loading';\r\n        console.log('parsing json...');\r\n        var jsonObj = instance.parse();\r\n        console.log('parsing json done...');\r\n        formatInputString(jsonObj);\r\n        formatHtml(jsonObj);\r\n        document.getElementById(\"input-spinner\").classList.toggle(\"hidden\");\r\n    } catch (e) {\r\n        console.log('exception');\r\n        console.log(e.stack);\r\n        document.getElementById('inputtextarea').innerHTML = e.message;\r\n    }\r\n}\r\n\r\nfunction format() {\r\n    try {\r\n        var target = document.getElementById('inputtextarea');\r\n        target.value = JSON.stringify(example);\r\n        init();\r\n        document.getElementById('loadjson').addEventListener('click', () => {\r\n            console.log('load json...' + document.getElementById('inputtextarea').value);\r\n            //alert('-----------' + document.getElementById('inputtextarea').innerHTML);\r\n            init();\r\n        })\r\n    } catch (e) {\r\n        console.log(e.stack);\r\n        //document.getElementById('inputtextarea').innerHTML = e.message;\r\n    }\r\n}\r\n\r\n\r\n","import IOString from './IOString.js';\r\n\r\nvar logger = require('../logger/logger');\r\n\r\nexport default class CharStream {\r\n    maxBufSize = 4096;\r\n\r\n    constructor(stream) {\r\n        this.maxNextCharInd = 0;\r\n        this.nextCharInd = -1;\r\n\r\n        this.bufline = [];\r\n        this.bufcolumn = [];\r\n        this.column = 0;\r\n        this.line = 1;\r\n\r\n        this.bufpos = -1;\r\n        this.bufsize = 0;\r\n        this.available = this.maxBufSize;\r\n        this.inBuf = 0;\r\n\r\n        this.prevCharIsCR = false;\r\n        this.prevCharIsLF = false;\r\n        this.tabSize = 4;\r\n\r\n        this.tokenBegin = 0;\r\n        this.nextCharBuf = new Array(this.maxBufSize);\r\n        this.buffer = [];\r\n        this.inputStream = stream;\r\n    }\r\n\r\n    beginToken() {\r\n        if (this.inBuf > 0) {\r\n            // lookahead and backup has happened.\r\n            return this.readFromBuffer();\r\n        }\r\n        this.tokenBegin = 0;\r\n        this.bufpos = -1;\r\n        return this.readChar();\r\n    }\r\n\r\n    readChar() {\r\n        if (this.inBuf > 0) {\r\n            // lookahead and backup has happened.\r\n            return this.readFromBuffer();\r\n        }\r\n        if (++this.bufpos === this.available)\r\n            this.adjustBuffSize();\r\n\r\n        let c;\r\n        if ((this.buffer[this.bufpos] = c = this.readByte()) == '\\\\') {\r\n            return this.checkSpecial(c);\r\n        } else {\r\n            this.updateLineColumn(c);\r\n            return c;\r\n        }\r\n    }\r\n\r\n    readByte() {\r\n\r\n        if (++this.nextCharInd >= this.maxNextCharInd)\r\n            this.fillBuff();\r\n        logger.debug(\"nextCharInd=\" + (this.nextCharInd) + \",this.maxNextCharInd=\" + this.maxNextCharInd + \",code=\" + this.nextCharBuf[this.nextCharInd].charCodeAt());\r\n        return this.nextCharBuf[this.nextCharInd];\r\n    }\r\n\r\n    fillBuff() {\r\n        let i;\r\n        if (this.maxNextCharInd === this.maxBufSize)\r\n            this.maxNextCharInd = this.nextCharInd = 0;\r\n        try {\r\n            if ((i = this.inputStream.read(this.nextCharBuf, this.maxNextCharInd, this.maxBufSize - this.maxNextCharInd)) === -1) {\r\n                this.inputStream.close();\r\n                throw new Error(\"stream has not enough data.\");\r\n            } else {\r\n                this.maxNextCharInd += i;\r\n            }\r\n        } catch (e) {\r\n            if (this.bufpos != 0) {\r\n                --this.bufpos;\r\n                this.backup(0);\r\n            } else {\r\n                this.bufline[this.bufpos] = this.line;\r\n                this.bufcolumn[this.bufpos] = this.olumn;\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    backup(amount) {\r\n        //logger.debug('inBuf-' + this.inBuf + \",bufPos-\" + this.bufpos);\r\n        this.inBuf += amount;\r\n        if ((this.bufpos -= amount) < 0)\r\n            this.bufpos += this.bufsize;\r\n        //this.tokenBegin = amount;\r\n        //logger.debug('inBuf-' + this.inBuf + \",bufPos-\" + this.bufpos);\r\n    }\r\n\r\n    readFromBuffer() {\r\n        //logger.debug('reading from inBuf-' + this.inBuf);\r\n        --this.inBuf;\r\n        if (++this.bufpos == this.bufsize)\r\n            this.bufpos = 0;\r\n        return this.buffer[this.bufpos];\r\n    }\r\n\r\n    adjustBuffSize() {\r\n        if (this.available === this.bufsize) {\r\n            if (this.tokenBegin > 2048) {\r\n                this.bufpos = 0;\r\n            } else {\r\n                this.expandBuff(true);\r\n            }\r\n        } else if (this.available > this.tokenBegin) {\r\n            this.available = this.bufsize;\r\n        } else if ((this.tokenBegin - this.available) < 2048) {\r\n            this.expandBuff(true);\r\n        } else {\r\n            this.available = this.tokenBegin;\r\n        }\r\n    }\r\n\r\n    expandBuff() {\r\n        throw new Error(\"Implementation to be done....\");\r\n    }\r\n\r\n    checkSpecial(c) {\r\n        //throw new Error(\"Implementation to be done....\");\r\n        return c;\r\n    }\r\n\r\n    updateLineColumn(c) {\r\n        this.column++;\r\n        if (this.prevCharIsLF) {\r\n            this.prevCharIsLF = false;\r\n            this.line += (this.column = 1);\r\n        } else if (this.prevCharIsCR) {\r\n            this.prevCharIsCR = false;\r\n            if (c == '\\n') {\r\n                this.prevCharIsLF = true;\r\n            } else {\r\n                this.line += (this.column = 1);\r\n            }\r\n        }\r\n\r\n        switch (c) {\r\n            case '\\r':\r\n                //this.tokenBegin++;\r\n                this.prevCharIsCR = true;\r\n                break;\r\n            case '\\n':\r\n                //this.tokenBegin++;\r\n                this.prevCharIsLF = true;\r\n                break;\r\n            case '\\t':\r\n                //this.tokenBegin++;\r\n                this.column--;\r\n                this.column += (this.tabSize - (this.column % this.tabSize));\r\n                break;\r\n            case 32:\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.bufline[this.bufpos] = this.line;\r\n        this.bufcolumn[this.bufpos] = this.column;\r\n    }\r\n\r\n    spaceDetected() {\r\n        this.tokenBegin++;\r\n    }\r\n\r\n    getImage() {\r\n        var response;\r\n        logger.debug(\"bufpos=\" + this.bufpos + \",tokenBegin=\" + this.tokenBegin);\r\n        //logger.debug(\"buffer=\" + this.buffer[0].charCodeAt() + \",\" + this.buffer[1].charCodeAt() );\r\n        //logger.debug(\"buffer=\" + this.buffer[2].charCodeAt() + \",\" + this.buffer[3].charCodeAt() );\r\n        //logger.debug(\"buffer=\" + this.buffer[4].charCodeAt() + \",\" + this.buffer[5].charCodeAt() );\r\n        //logger.debug(\"buffer=\" + this.buffer[6].charCodeAt() + \",\" + this.buffer[7].charCodeAt() );\r\n        if (this.bufpos >= this.tokenBegin) {\r\n            response = new IOString(this.buffer, this.tokenBegin, this.bufpos - this.tokenBegin + 1);\r\n            logger.debug(\"response=\" + response.toString());\r\n        } else {\r\n            response = new IOString(this.buffer, this.tokenBegin, this.bufsize - this.tokenBegin).toString() + new IOString(this.buffer, 0, this.bufpos + 1).toString();\r\n            logger.debug(\"response=\" + response.toString());\r\n        }\r\n        return response.stringify();\r\n    }\r\n\r\n    get getColumn() {\r\n        return this.bufcolumn[this.bufpos];\r\n    }\r\n\r\n    get getLine() {\r\n        return this.bufline[this.bufpos];\r\n    }\r\n\r\n    get getEndLine() {\r\n        return this.bufline[this.bufpos];\r\n    }\r\n\r\n    get getBeginColumn() {\r\n        return this.bufcolumn[this.tokenBegin];\r\n    }\r\n\r\n    get getBeginLine() {\r\n        return this.bufline[this.tokenBegin];\r\n    }\r\n}","var logger = require('../logger/logger');\r\n\r\nexport default class IOString {\r\n\r\n    constructor(chars, offset, count) {\r\n        if (offset < 0)\r\n            throw new Error('Offset cannot be negative');\r\n        if (count < 0)\r\n            throw new Error('count cannot be negative');\r\n\r\n        let i;\r\n        let j= offset;\r\n        this.value = [];\r\n        var ccode = chars[j].charCodeAt();\r\n        // fix for removing white space in the begining of the string.\r\n        while(ccode === 32) {\r\n            j++;\r\n            ccode = chars[j].charCodeAt();\r\n        }\r\n        \r\n        for (i = j; i < (offset + count); i++) {\r\n            var code = chars[i].charCodeAt();\r\n            logger.debug('code at i=' + i +\",code=\" + code);\r\n            //this.value.push(chars[i]);\r\n            if (code != 34) // '\\\"'\r\n                this.value[i] = chars[i];\r\n\r\n        }\r\n    }\r\n\r\n\r\n    toString() {\r\n        return this.value.join(\"\");\r\n    }\r\n\r\n    stringify() {\r\n        return this.value.join(\"\");\r\n    }\r\n}\r\n","export default class Reader {\r\n\r\n    constructor(newInput) {\r\n        if (this.constructor === Reader) {\r\n            throw new TypeError(\"Can not construct abstract class.\");\r\n        }\r\n\r\n        if (this.read === Reader.prototype.read) {\r\n            // Error Type 4. Child has not implemented this abstract method.\r\n            throw new TypeError(\"Please implement abstract method read.\");\r\n        }\r\n\r\n        if (this.getChars === Reader.prototype.getChars) {\r\n            // Error Type 4. Child has not implemented this abstract method.\r\n            throw new TypeError(\"Please implement abstract method getChars.\");\r\n        }\r\n\r\n        if (this.close === Reader.prototype.close) {\r\n            // Error Type 4. Child has not implemented this abstract method.\r\n            throw new TypeError(\"Please implement abstract close getChars.\");\r\n        }\r\n        \r\n        this.input = newInput;\r\n        this.length = this.input.length;\r\n        this.next = 0;\r\n        this.mark = 0;\r\n    }\r\n\r\n    read(cbuf, offset, len) {\r\n        throw new TypeError(\"Do not call abstract method read from child.\");\r\n    }\r\n\r\n    getChars(srcBegin, srcEnd, dst, dstBegin) {\r\n        throw new TypeError(\"Do not call abstract method getChars from child.\");\r\n    }\r\n\r\n    close() {\r\n        throw new TypeError(\"Do not call abstract method close from child.\");\r\n    }\r\n\r\n    ensureOpen() {\r\n        if (this.input === null)\r\n            throw new Error('Stream closed');\r\n    }\r\n}","import Reader from './Reader.js';\r\n\r\nvar logger = require('../logger/logger');\r\n\r\nexport default class StringReader extends Reader {\r\n\r\n    constructor(newInput) {\r\n        super(newInput);\r\n    }\r\n    /*\r\n     * Reads characters into a portion of an array. This method will block until some input is \r\n     * available, an I/O error occurs, or the end of the stream is reached.\r\n     * \r\n     * return The number of characters read, or -1 if the end of the stream has been reached\r\n     */\r\n    read(cbuf, offset, len) {\r\n        this.ensureOpen();\r\n        if ((offset < 0) || (offset > cbuf.length) || (len < 0) ||\r\n            ((offset + len) > cbuf.length) || ((offset + len) < 0)) {\r\n            throw new Error('index out of bounds.');\r\n        } else if (len == 0) {\r\n            return 0;\r\n        }\r\n        if (this.next >= this.length)\r\n            return -1;\r\n        var n = Math.min(this.length - this.next, len);\r\n        this.getChars(this.next, this.next + n, cbuf, offset);\r\n        this.next += n;\r\n        return n;\r\n    }\r\n\r\n    getChars(srcBegin, srcEnd, dst, dstBegin) {\r\n        if (srcBegin < 0) {\r\n            new Error('index out of bounds - ' + srcBegin);\r\n        }\r\n        if (srcEnd > this.input.length) {\r\n            new Error('index out of bounds - ' + srcEnd);\r\n        }   \r\n        if (srcBegin > srcEnd) {\r\n            throw new Error('index out of bounds - ' + (srcEnd - srcBegin));\r\n        }\r\n        var i;\r\n        for(i = srcBegin; i <= srcEnd; i++) {\r\n            dst[dstBegin] = this.input[i];\r\n            dstBegin++;\r\n        }\r\n    }\r\n\r\n    close() {\r\n        this.input = null;\r\n    }\r\n}","\r\nimport JsonObject from './JsonObject.js';\r\n\r\nexport default class JsonBoolean extends JsonObject {\r\n\r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        //console.log('destination->' + destination);\r\n        if(this._input)\r\n            appendable.destination = true;\r\n        else \r\n            appendable.destination = false;\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        destination += \"<span class=\\\"type-boolean\\\">\";\r\n        destination += this._input + \"</span>\";\r\n        appendable.destination = destination;\r\n    }\r\n}","\r\nimport JsonObject from './JsonObject.js';\r\n\r\nexport default class JsonList extends JsonObject {\r\n    \r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n    }\r\n\r\n    add(jsonObject) {\r\n        this._input.push(jsonObject);\r\n        return this;\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        ++currentLevel;\r\n        let tabs = '';\r\n        let i,j;\r\n        for (i = 0; i < currentLevel; i++)\r\n            tabs += \"\\t\";\r\n        let destination = \"\";\r\n        destination += \"\\n\" + tabs + \"[\\n\";\r\n        j = 0;\r\n        let size = this._input.length;\r\n        this._input.forEach(element => {\r\n            var cAppendable = {\r\n                destination : \"\"\r\n            }\r\n            element.formatJsonToString(cAppendable,currentLevel);\r\n            destination += cAppendable.destination;\r\n            if(j != (size-1))\r\n                destination += \",\\n\";\r\n            j++;\r\n        });\r\n        destination += \"\\n\" + tabs + \"]\";\r\n        appendable.destination += destination;\r\n        //console.log('destination->' + destination);\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        if(this._root) {\r\n            destination += \"<div class=\\\"json-viewer\\\"><code class=\\\"js\\\" id=\\\"js\\\">\";\r\n        }\r\n        \r\n        let size = this._input.length;\r\n        destination += \"<a class=\\\"list-link\\\" href=\\\"javascript:void(0)\\\">[\";\r\n        destination += \"<span style=\\\"color: #1d57d4;\\\"><i onClick=\\\"spanClicked(event);\\\" class=\\\"far fa-minus-square\\\"></i></span>\";\r\n        destination += \"<span style=\\\"color: #1d57d4;\\\" class=\\\"hide\\\"><i onClick=\\\"spanClicked(event);\\\" class=\\\"fas fa-plus-square\\\"></i></span>\";\r\n        destination += \"<span class=\\\"hide\\\"><span onClick=\\\"spanClicked(event);\\\" class=\\\"items-ph\\\">\" + size + \" items</span></span>\";\r\n        destination += \"</a>\";\r\n        let j = 0;\r\n        destination += \"<ul data-level=\\\"\" + ++currentLevel + \"\\\" class=\\\"type-array\\\">\";\r\n        this._input.forEach(element => {\r\n           \r\n            destination += \"<li>\";\r\n            var cAppendable = {\r\n                destination : 0\r\n            }\r\n            element.formatJsonToHtml(cAppendable,currentLevel);\r\n            destination += cAppendable.destination;\r\n            if(j != (size-1))\r\n                destination += \"<span class=\\\"type-comma\\\">\" + \",\" + \"</span>\";\r\n            destination += \"</li>\";\r\n            j++;\r\n        });\r\n        destination += \"</ul>\";\r\n        destination += \"<span class=\\\"type-symbol\\\">]</span>\";\r\n        if(this._root) {\r\n            destination += \"</code></div>\";\r\n        }\r\n\r\n        appendable.destination = destination;\r\n    }\r\n}","var logger = require('../logger/logger');\r\n\r\nimport JsonObject from './JsonObject.js';\r\n\r\nexport default class JsonMap extends JsonObject {\r\n    \r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n    }\r\n\r\n    put(jsonObjectKey,jsonObjectValue) {\r\n        this._input.set(jsonObjectKey, jsonObjectValue);\r\n        logger.debug('map size ->' + this._input.size);\r\n        return this;\r\n    }\r\n    \r\n    formatJsonToString(appendable, currentLevel) {\r\n        ++currentLevel;\r\n        let tabs = '';\r\n        let i,j;\r\n        for (i = 0; i < currentLevel; i++)\r\n            tabs += \"\\t\";\r\n        let destination = \"\";\r\n        destination += \"\" + tabs + \"{\\n\";\r\n        j = 0;\r\n        let size = this._input.size;\r\n        logger.info('size of the map ' + this._input.size);\r\n\r\n        this._input.forEach(function(value, key) {\r\n            var keyAppendable = {\r\n                destination : \"\"\r\n            }\r\n            var valueAppendable = {\r\n                destination : \"\"\r\n            }\r\n         \r\n            key.formatJsonToString(keyAppendable,currentLevel);\r\n            destination += keyAppendable.destination;\r\n            destination += \" : \";\r\n            \r\n            value.keyValue = true;\r\n            value.formatJsonToString(valueAppendable,currentLevel);\r\n            destination += valueAppendable.destination;\r\n            if(j != (size-1))\r\n                destination += \",\\n\";\r\n            j++;  \r\n        });\r\n        destination += \"\\n\" + tabs + \"}\";\r\n        appendable.destination += destination;\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        logger.debug('formatting to html...' + this._root);\r\n        if(this._root) {\r\n            destination += \"<div class=\\\"json-viewer\\\"><code class=\\\"js\\\" id=\\\"js\\\">\";\r\n        }\r\n        logger.debug('formatting to html...');\r\n        \r\n        let size = this._input.size;\r\n        destination += \"<a class=\\\"list-link\\\" href=\\\"javascript:void(0)\\\">{\";\r\n        destination += \"<span style=\\\"color: #1d57d4;\\\"><i onClick=\\\"spanClicked(event);\\\" class=\\\"far fa-minus-square\\\"></i></span>\";\r\n        destination += \"<span style=\\\"color: #1d57d4;\\\" class=\\\"hide\\\"><i onClick=\\\"spanClicked(event);\\\" class=\\\"fas fa-plus-square\\\"></i></span>\";\r\n        destination += \"<span class=\\\"hide\\\"><span onClick=\\\"spanClicked(event);\\\" class=\\\"items-ph\\\">\" + size + \" items</span></span>\";\r\n        destination += \"</a>\";\r\n        let j = 0;\r\n        destination += \"<ul data-level=\\\"\" + ++currentLevel + \"\\\" class=\\\"type-array\\\">\";\r\n        this._input.forEach(function(value, key) {\r\n            destination += \"<li>\";\r\n            var keyAppendable = {\r\n                destination : \"\"\r\n            }\r\n            key.formatJsonToHtml(keyAppendable,currentLevel);\r\n            destination += keyAppendable.destination;\r\n            destination += \"<span class=\\\"type-colon\\\">:</span>\";\r\n\t\t\tvar valueAppendable = {\r\n                destination : \"\"\r\n            }\r\n            value.formatJsonToHtml(valueAppendable,currentLevel);\r\n            destination += valueAppendable.destination;\r\n            logger.debug(\"j value \" + j);\r\n            if(j != (size-1))\r\n                destination += \"<span class=\\\"type-comma\\\">\" + \",\" + \"</span>\";\r\n            destination += \"</li>\";\r\n            j++;  \r\n        });\r\n        destination += \"</ul>\";\r\n        destination += \"<span class=\\\"type-symbol\\\">}</span>\";\r\n        if(this._root) {\r\n            destination += \"</code></div>\";\r\n        }\r\n\r\n        appendable.destination = destination;\r\n    }\r\n}","\r\nimport JsonObject from './JsonObject.js';\r\n\r\nexport default class JsonBoolean extends JsonObject {\r\n\r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        //console.log('destination->' + destination);\r\n        appendable.destination = null;\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        destination += \"<span class=\\\"type-null\\\">\";\r\n        destination += this._input + \"</span>\";\r\n        appendable.destination = destination;\r\n    }\r\n}","\r\nimport JsonObject from './JsonObject.js';\r\n\r\nexport default class JsonNumber extends JsonObject {\r\n\r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        //console.log('destination->' + destination);\r\n        appendable.destination += this._input;\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        destination += \"<span class=\\\"type-number\\\">\";\r\n        destination += this._input + \"</span>\";\r\n        appendable.destination = destination;\r\n    }\r\n}","export default class JsonObject {\r\n\r\n    constructor(root, isKey, input) {\r\n        // if (this.constructor === JsonObject) {\r\n        //     throw new TypeError(\"Can not construct abstract class.\");\r\n        // }\r\n\r\n        if (this.formatJsonToString === JsonObject.prototype.formatJsonToString) {\r\n            // Error Type 4. Child has not implemented this abstract method.\r\n            throw new TypeError(\"Please implement abstract method formatJsonToString.\");\r\n        }\r\n\r\n        if (this.formatJsonToHtml === JsonObject.prototype.formatJsonToHtml) {\r\n            // Error Type 4. Child has not implemented this abstract method.\r\n            throw new TypeError(\"Please implement abstract method formatJsonToHtml.\");\r\n        }\r\n        this._root = root;\r\n        this._isKey = isKey;\r\n        this._input = input;\r\n        this._keyValue = false;\r\n        this._rawInput = '';\r\n    }\r\n\r\n    get root() {\r\n        return this._root;\r\n    }\r\n\r\n    set root(newRoot) {\r\n        this._root = newRoot;\r\n    }\r\n\r\n    get isKey() {\r\n        return this._isKey;\r\n    }\r\n\r\n    set isKey(newKey) {\r\n        this._isKey = newKey;\r\n    }\r\n\r\n    get input() {\r\n        return this._input;\r\n    }\r\n\r\n    set input(newInput) {\r\n        this._input = newInput;\r\n    }\r\n\r\n    get rawInput() {\r\n        return this._rawInput;\r\n    }\r\n\r\n    set rawInput(raw) {\r\n        this._rawInput = raw;\r\n    }\r\n\r\n    set keyValue(newValue) {\r\n        this._keyValue = newValue;\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        throw new TypeError(\"Do not call abstract method toString from child.\");\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        throw new TypeError(\"Do not call abstract method toHtml from child.\");\r\n    }\r\n}","import JsonObject from './JsonObject.js';\r\n\r\nvar logger = require('../logger/logger');\r\n\r\nexport default class JsonString extends JsonObject {\r\n\r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n        this.removeSpecialChars();\r\n    }\r\n\r\n    removeSpecialChars() {\r\n        var tmp = this._input;\r\n        var i = 0;\r\n        var r = [];\r\n        for(i=0;i<tmp.length;i++) {\r\n            if(tmp[i] != '\\r' && tmp[i] != '\\t' && tmp[i] != '\\n') {\r\n                r.push(tmp[i]);\r\n            }\r\n        }\r\n\r\n        this._input = r.join(\"\");\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        ++currentLevel;\r\n        let destination = \"\";\r\n        let tabs = '';\r\n        let i;\r\n        for (i = 0; i < currentLevel; i++)\r\n            tabs = tabs.concat(\"\\t\");\r\n        logger.debug('appendable->' + appendable);\r\n        if (this._isKey) {\r\n            destination += tabs + \"\\\"\" + this._input + \"\\\"\";\r\n        } else if (this._keyValue) {    \r\n            destination += \"\\\"\" + this._input + \"\\\"\";\r\n        } else {\r\n            destination += tabs + \"\\\"\" + this._input + \"\\\"\";\r\n        }\r\n        logger.debug('destination->' + destination);\r\n        appendable.destination = destination;\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        if (this._isKey) {\r\n            destination += \"<span class=\\\"type-key\\\">\\\"\";\r\n        } else {\r\n            destination += \"<span class=\\\"type-string\\\">\\\"\";\r\n        }\r\n        destination += this._input + \"\\\"</span>\";\r\n        appendable.destination = destination;\r\n    }\r\n}","module.exports.debug = (msg) => {\r\n    //console.log(msg);\r\n}\r\nmodule.exports.info = (msg) => {\r\n   //console.log(msg);\r\n}\r\n\r\n// var appRoot = require('app-root-path');\r\n// var winston = require('winston');\r\n\r\n// const logFormat = winston.format.combine(\r\n// \t\t winston.format.colorize(),\r\n// \t\t winston.format.timestamp(),\r\n// \t\t winston.format.align(),\r\n// \t\t winston.format.printf(\r\n// \t\t  info => `${info.timestamp} ${info.level}: ${info.message}`,\r\n// \t\t),);\r\n\r\n// // define the custom settings for each transport (file, console)\r\n// var options = {\r\n//   console: {\r\n//     level: 'debug',\r\n//     handleExceptions: true,\r\n//     json: false,\r\n//     colorize: true\r\n//   }\r\n// };\r\n\r\n// // instantiate a new Winston Logger with the settings defined above\r\n// let logger = winston.createLogger({\r\n// \t  format: logFormat,\r\n// \t  transports: [\r\n// \t    new (winston.transports.Console)(options.console)\r\n// \t  ],\r\n// \t  exitOnError: false, // do not exit on handled exceptions\r\n// \t});\r\n\r\n// // create a stream object with a 'write' function that will be used by `morgan`\r\n// logger.stream = {\r\n//   write: function(message, encoding) {\r\n//     // use the 'info' log level so the output will be picked up by both transports (file and console)\r\n//     logger.info(message);\r\n//   },\r\n// };\r\n\r\n// module.exports = logger;","import JsonString from \"../json/JsonString\";\r\nimport JsonBoolean from \"../json/JsonBoolean\";\r\nimport JsonNumber from \"../json/JsonNumber\";\r\nimport JsonNull from \"../json/JsonNull\";\r\nimport RJsonConstants from \"./RJsonConstants\";\r\nimport StringReader from \"../io/StringReader\";\r\nimport CharStream from \"../io/CharStream\";\r\nimport RJsonLexer from \"./RJsonLexer\";\r\nimport RJsonToken from \"./RJsonToken\";\r\n\r\nexport default class RJsonAbsParser extends RJsonConstants {\r\n\r\n    constructor(rinput,startNow) {\r\n        super();\r\n        \r\n        if(startNow === undefined) {\r\n            this.init(rinput);\r\n        }\r\n    }\r\n\r\n    init(rinput) {\r\n        this.input = rinput;\r\n        this.reader = new StringReader(this.input);\r\n        this.stream = new CharStream(this.reader);\r\n        this.lexer = new RJsonLexer(this.stream);\r\n        this.token = new RJsonToken();\r\n        this.token.next = this.jj_nt = this.lexer.getNextToken();\r\n        this.jj_gen = 0;\r\n        this.jj_la1 = new Array(13);\r\n        this.jj_la1_0 = [0xccf8480, 0x78000, 0x1ccf8000, 0x40, 0x1ccf8000, 0x40, 0xccf8480, 0xccf8000, 0x60000, 0x18000, 0xcc00000, 0x8800000, 0x4400000,];;\r\n        var i;\r\n        for (i = 0; i < 13; i++)\r\n            this.jj_la1[i] = -1;\r\n\r\n        this.jj_kind = -1;\r\n        this.nativeNumbers = false;\r\n    }\r\n\r\n    getNextToken() {\r\n        if ((this.token = this.jj_nt).next != null) this.jj_nt = this.jj_nt.next;\r\n        else this.jj_nt = this.jj_nt.next = this.lexer.getNextToken();\r\n        this.jj_gen++;\r\n        return this.token;\r\n    }\r\n\r\n    objectKey() {\r\n        let o, key;\r\n        switch (this.jj_nt.kind) {\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                key = this.string();\r\n                break;\r\n            case this.SYMBOL:\r\n                key = this.symbol();\r\n                break;\r\n            case this.NULL:\r\n                this.nullValue();\r\n                key = null;\r\n                break;\r\n            case this.NUMBER_INTEGER:\r\n            case this.NUMBER_DECIMAL:\r\n            case this.TRUE:\r\n            case this.FALSE:\r\n                switch (this.jj_nt.kind) {\r\n                    case this.TRUE:\r\n                    case this.FALSE:\r\n                        o = this.booleanValue();\r\n                        break;\r\n                    case this.NUMBER_INTEGER:\r\n                    case this.NUMBER_DECIMAL:\r\n                        o = this.number();\r\n                        break;\r\n                    default:\r\n                        this.jj_la1[1] = this.jj_gen;\r\n                        this.jj_consume_token(-1);\r\n                        throw new Error();\r\n                }\r\n                key = o;\r\n                break;\r\n            case this.BRACE_CLOSE:\r\n                break;\r\n            default:\r\n                this.jj_la1[2] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n        { if (true) { if(key) key.key = true; return key; } }\r\n    }\r\n\r\n    string() {\r\n        let s;\r\n        switch (this.jj_nt.kind) {\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                s = this.doubleQuoteString();\r\n                break;\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n                s = this.singleQuoteString();\r\n                break;\r\n            default:\r\n                this.jj_la1[10] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n        { if (true) return s; }\r\n    }\r\n\r\n    doubleQuoteString() {\r\n        switch (this.jj_nt.kind) {\r\n            case this.STRING_DOUBLE_EMPTY:\r\n                this.jj_consume_token(this.STRING_DOUBLE_EMPTY);\r\n                { if (true) return new JsonString(false, false, \"\"); }\r\n                break;\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                this.jj_consume_token(this.STRING_DOUBLE_NONEMPTY);\r\n                var image = this.token.image;\r\n                { if (true) return new JsonString(false, false, image); }\r\n                break;\r\n            default:\r\n                this.jj_la1[11] = this.sjj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n    }\r\n\r\n    singleQuoteString() {\r\n        switch (this.jj_nt.kind) {\r\n            case this.STRING_SINGLE_EMPTY:\r\n                this.jj_consume_token(this.STRING_SINGLE_EMPTY);\r\n                { if (true) return new JsonString(false, false, \"\"); }\r\n                break;\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n                this.jj_consume_token(this.STRING_SINGLE_NONEMPTY);\r\n                var image = token.image;\r\n                { if (true) return new JsonString(false, false, image); }\r\n                break;\r\n            default:\r\n                this.jj_la1[12] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n    }\r\n\r\n    symbol() {\r\n        this.jj_consume_token(this.SYMBOL);\r\n        { if (true) return new JsonString(false, false, token.image); }\r\n    }\r\n\r\n    nullValue() {\r\n        this.jj_consume_token(this.NULL);\r\n        { if (true) return new JsonNull(); }\r\n    }\r\n\r\n    booleanValue() {\r\n        var b;\r\n        switch (this.jj_nt.kind) {\r\n            case this.TRUE:\r\n                this.jj_consume_token(this.TRUE);\r\n                b = true;\r\n                break;\r\n            case this.FALSE:\r\n                this.jj_consume_token(this.FALSE);\r\n                b = false;\r\n                break;\r\n            default:\r\n                this.jj_la1[8] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n        { if (true) return new JsonBoolean(b); }\r\n    }\r\n\r\n    value() {\r\n        let x;\r\n        switch (this.jj_nt.kind) {\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                x = this.string();\r\n                break;\r\n            case this.NUMBER_INTEGER:\r\n            case this.NUMBER_DECIMAL:\r\n                x = this.number();\r\n                break;\r\n            case this.TRUE:\r\n            case this.FALSE:\r\n                x = this.booleanValue();\r\n                break;\r\n            case this.NULL:\r\n                x = this.nullValue();\r\n                break;\r\n            default:\r\n                this.jj_la1[7] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n        { if (true) return x; }\r\n    }\r\n\r\n    number() {\r\n        let t;\r\n        switch (this.jj_nt.kind) {\r\n            case this.NUMBER_DECIMAL:\r\n                t = this.jj_consume_token(this.NUMBER_DECIMAL);\r\n                if (nativeNumbers) {\r\n                    { if (true) return new JsonNumber(false, false, t.image); }\r\n                } else {\r\n                    { if (true) return new JsonNumber(false, false, t.image); }\r\n                }\r\n                break;\r\n            case this.NUMBER_INTEGER:\r\n                t = this.jj_consume_token(this.NUMBER_INTEGER);\r\n                if (this.nativeNumbers) {\r\n                    { if (true) return new JsonNumber(false, false, t.image); }\r\n                } else {\r\n                    { if (true) return new JsonNumber(false, false, t.image); }\r\n                }\r\n                break;\r\n            default:\r\n                this.jj_la1[9] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n    }\r\n}","export default class RJsonConstants {\r\n\r\n    constructor() {\r\n        /** End of File. */\r\n        this.EOF = 0;\r\n        /** RegularExpression Id. */\r\n        this.C_SINGLE_COMMENT = 1;\r\n        /** RegularExpression Id. */\r\n        this.C_MULTILINE_COMMENT = 2;\r\n        /** RegularExpression Id. */\r\n        this.SH_SINGLE_COMMENT = 3;\r\n        /** RegularExpression Id. */\r\n        this.WHITESPACE = 4;\r\n        /** RegularExpression Id. */\r\n        this.EOL = 5;\r\n        /** RegularExpression Id. */\r\n        this.COMMA = 6;\r\n        /** RegularExpression Id. */\r\n        this.BRACE_OPEN = 7;\r\n        /** RegularExpression Id. */\r\n        this.BRACE_CLOSE = 8;\r\n        /** RegularExpression Id. */\r\n        this.COLON = 9;\r\n        /** RegularExpression Id. */\r\n        this.BRACKET_OPEN = 10;\r\n        /** RegularExpression Id. */\r\n        this.BRACKET_CLOSE = 11;\r\n        /** RegularExpression Id. */\r\n        this.ZERO = 12;\r\n        /** RegularExpression Id. */\r\n        this.DIGIT_NONZERO = 13;\r\n        /** RegularExpression Id. */\r\n        this.DIGIT = 14;\r\n        /** RegularExpression Id. */\r\n        this.NUMBER_INTEGER = 15;\r\n        /** RegularExpression Id. */\r\n        this.NUMBER_DECIMAL = 16;\r\n        /** RegularExpression Id. */\r\n        this.TRUE = 17;\r\n        /** RegularExpression Id. */\r\n        this.FALSE = 18;\r\n        /** RegularExpression Id. */\r\n        this.NULL = 19;\r\n        /** RegularExpression Id. */\r\n        this.QUOTE_DOUBLE = 20;\r\n        /** RegularExpression Id. */\r\n        this.QUOTE_SINGLE = 21;\r\n        /** RegularExpression Id. */\r\n        this.STRING_SINGLE_EMPTY = 22;\r\n        /** RegularExpression Id. */\r\n        this.STRING_DOUBLE_EMPTY = 23;\r\n        /** RegularExpression Id. */\r\n        this.STRING_SINGLE_BODY = 24;\r\n        /** RegularExpression Id. */\r\n        this.STRING_DOUBLE_BODY = 25;\r\n        /** RegularExpression Id. */\r\n        this.STRING_SINGLE_NONEMPTY = 26;\r\n        /** RegularExpression Id. */\r\n        this.STRING_DOUBLE_NONEMPTY = 27;\r\n        /** RegularExpression Id. */\r\n        this.SYMBOL = 28;\r\n\r\n        /** Lexical state. */\r\n        this.DEFAULT = 0;\r\n\r\n        this.LEXICAL_ERROR = 0;\r\n\r\n        /** Literal token values. */\r\n        this.tokenImage = [\r\n            \"<EOF>\",\r\n            \"<C_SINGLE_COMMENT>\",\r\n            \"<C_MULTILINE_COMMENT>\",\r\n            \"<SH_SINGLE_COMMENT>\",\r\n            \"<WHITESPACE>\",\r\n            \"<EOL>\",\r\n            \"\\\",\\\"\",\r\n            \"\\\"{\\\"\",\r\n            \"\\\"}\\\"\",\r\n            \"\\\":\\\"\",\r\n            \"\\\"[\\\"\",\r\n            \"\\\"]\\\"\",\r\n            \"\\\"0\\\"\",\r\n            \"<DIGIT_NONZERO>\",\r\n            \"<DIGIT>\",\r\n            \"<NUMBER_INTEGER>\",\r\n            \"<NUMBER_DECIMAL>\",\r\n            \"\\\"true\\\"\",\r\n            \"\\\"false\\\"\",\r\n            \"\\\"null\\\"\",\r\n            \"\\\"\\\\\\\"\\\"\",\r\n            \"\\\"\\\\\\'\\\"\",\r\n            \"\\\"\\\\\\'\\\\\\'\\\"\",\r\n            \"\\\"\\\\\\\"\\\\\\\"\\\"\",\r\n            \"<STRING_SINGLE_BODY>\",\r\n            \"<STRING_DOUBLE_BODY>\",\r\n            \"<STRING_SINGLE_NONEMPTY>\",\r\n            \"<STRING_DOUBLE_NONEMPTY>\",\r\n            \"<SYMBOL>\",\r\n        ];\r\n    }\r\n}","import RJsonToken from './RJsonToken.js';\r\nimport RJsonTokenMgrError from './RJsonTokenMgrError.js';\r\nimport RJsonConstants from './RJsonConstants.js';\r\n\r\nvar logger = require('../logger/logger');\r\n\r\nexport default class RJsonLexer extends RJsonConstants {\r\n\r\n    constructor(istream) {\r\n        super();\r\n        this.input_stream = istream;\r\n        this.curChar = '';\r\n        this.matchedKind = 0;\r\n        this.matchedPos = 0;\r\n        this.toToken = [0x1ccf8fc1,];\r\n        this.curLexState = 0;\r\n        // this.strLiteralImages = [\r\n        //     \"\", null, null, null, null, 'null', '0o54', 0o173, 0o175, 0o072, 0o133, \r\n        //     0o135, null, null, null, null, null, null, null, null, null, null, \"\\'\", \r\n        //     \"\\\"\", null, null, null, null, null, ];\r\n        this.strLiteralImages = [\r\n            \"\", null, null, null, null, 'null', ',', '{', '}', ':', '[',\r\n            ']', null, null, null, null, null, null, null, null, null, null, \"\\'\",\r\n            \"\\\"\", null, null, null, null, null,];\r\n    }\r\n\r\n    getNextToken() {\r\n        logger.debug(\"getNextToken()\");\r\n        var matchedToken = null;\r\n        var curPos = 0;\r\n        EOFLoop:\r\n        for (; ;) {\r\n            try {\r\n                this.curChar = this.input_stream.beginToken();\r\n            } catch (e) {\r\n                logger.debug(e.stack);\r\n                this.matchedKind = 0;\r\n                matchedToken = this.fillToken();\r\n                return matchedToken;\r\n            }\r\n            logger.debug(\"this.curChar =\" + this.curChar);\r\n            this.matchedKind = 0x7fffffff;\r\n            this.matchedPos = 0;\r\n            curPos = this.analyzeCurrentCharacter();\r\n            logger.debug(\"matchedKind()->\" + this.matchedKind + \",curPos->\" + curPos);\r\n            if (this.matchedKind != 0x7fffffff) {\r\n               \r\n                if (this.matchedPos + 1 < curPos) {\r\n                    this.input_stream.backup(curPos - this.matchedPos - 1); // possible backtracking.\r\n                }\r\n                logger.debug(\"curPos=\" + curPos);\r\n                if ((this.matchedKind == this.C_SINGLE_COMMENT)\r\n                    || (this.matchedKind == this.C_MULTILINE_COMMENT)) {\r\n                    this.matchedToken = this.fillToken();\r\n                    logger.debug(\"getNextToken()::Matched\" + this.matchedKind);\r\n                    return matchedToken;\r\n                }\r\n                if (this.matchedKind == this.BRACE_OPEN || this.matchedKind == this.TRUE\r\n                    || this.matchedKind == this.NUMBER_INTEGER\r\n                    || this.matchedKind == this.NULL\r\n                    || this.matchedKind == this.COMMA) {\r\n                    matchedToken = this.fillToken();\r\n                    logger.debug(\"getNextToken()::Matched->\" + matchedToken);\r\n                    return matchedToken;\r\n                }\r\n                if ((this.toToken[this.matchedKind >> 6] & (1 << (this.matchedKind & 77))) != 0) {\r\n                    matchedToken = this.fillToken();\r\n                    logger.debug(\"getNextToken()::Matched >> 6->\" + this.matchedKind);\r\n                    return matchedToken;\r\n                } else {\r\n                    continue EOFLoop;\r\n                }\r\n            }\r\n            // error begins.....\r\n            let error_line = this.input_stream.getEndLine;\r\n            let error_column = this.input_stream.getEndColumn;\r\n            let error_after = null;\r\n            let EOFSeen = false;\r\n            try {\r\n                this.input_stream.readChar();\r\n                this.input_stream.backup(1);\r\n            } catch (e1) {\r\n                logger.debug(e1.stack);\r\n                EOFSeen = true;\r\n                error_after = curPos <= 1 ? \"\" : this.input_stream.getImage();\r\n                if (this.curChar == '\\n' || this.curChar == '\\r') {\r\n                    error_line++;\r\n                    error_column = 0;\r\n                } else {\r\n                    error_column++;\r\n                }\r\n            }\r\n            logger.debug('xxxxxxxxxxxx');\r\n            if (!EOFSeen) {\r\n                logger.debug('xxxxxxxxxxxx');\r\n                this.input_stream.backup(1);\r\n                error_after = curPos <= 1 ? \"\" : this.input_stream.getImage();\r\n            }\r\n            logger.debug('zzzzzzzzzzzzzzzz');\r\n            throw new RJsonTokenMgrError(EOFSeen, this.curLexState, error_line, error_column, error_after, this.curChar, this.LEXICAL_ERROR);\r\n        }\r\n    }\r\n\r\n    analyzeCurrentCharacter() {\r\n        if (this.curChar == ' ' || this.curChar == '\\t' || this.curChar == '\\n' || this.curChar == '\\r') {\r\n            this.consume_char();\r\n            try {\r\n                this.curChar = this.input_stream.readChar();\r\n            } catch (e) {\r\n                // hack for special characters after the last token.\r\n                this.matchedKind = 0;\r\n                return 1;\r\n            }\r\n            return this.analyzeCurrentCharacter();\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        //logger.debug('analyzeCurrentCharacter()->' + code);\r\n        switch (code) {\r\n            case 123: // '{'\r\n                return this.stopAtPos(0, this.BRACE_OPEN);\r\n            case 125: // '}'\r\n                return this.stopAtPos(0, this.BRACE_CLOSE);\r\n            case 34: // '\"'\r\n                logger.debug('case 34()->' + code);\r\n                return this.moveChar01(8);\r\n            case 39: // '\\''\r\n                return this.moveChar01(4);\r\n            case 44: // ','\r\n                return this.stopAtPos(0, this.COMMA);\r\n            case 58: // ':'\r\n                return this.stopAtPos(0, this.COLON);\r\n            case 91: // '['\r\n                return this.stopAtPos(0, this.BRACKET_OPEN);\r\n            case 93: // ']'\r\n                return this.stopAtPos(0, this.BRACKET_CLOSE);\r\n            case 70: // 'F'\r\n            case 102: // 'f'\r\n                return this.moveChar01(4);\r\n            case 78: // 'N'\r\n            case 110: // 'n'\r\n                return this.moveChar01(8);\r\n            case 84: // 'T'\r\n            case 116: // 't'\r\n                return this.moveChar01(2);\r\n            case 47: // '/'\r\n                return this.moveChar01(6);\r\n            case 35: // '#'\r\n                return this.moveChar(0, '\\n');\r\n            default:\r\n                return this.findNumber(0, 0);\r\n        }\r\n    }\r\n\r\n    isDigit() {\r\n        \r\n        let code = this.curChar.charCodeAt();\r\n        logger.debug(\"isDigit-\\\"\" + code + \"\\\"\");\r\n\r\n        if (code == 46) { // '.'\r\n            return true;\r\n        }\r\n\r\n        if (code > 47 && code < 58) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    findNumber(startState, curPos) {\r\n        logger.debug(\"findNumber=\\\"\" + this.curChar + \"\\\"\");\r\n        while (this.isDigit()) {\r\n            ++curPos;\r\n            try {\r\n                this.curChar = this.input_stream.readChar();\r\n            } catch (e) {\r\n                return curPos;\r\n            }\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        logger.debug(\"\\\"\" + code + \"\\\"\");\r\n        if (code == 44 || code == 125\r\n            || this.curChar == '\\r' || this.curChar == '\\n' || this.curChar == ' '\r\n            || this.curChar == '\\t') {\r\n            --curPos;\r\n            logger.debug(\"\\\"\" + code + \"\\\"\");\r\n            this.matchedKind = this.NUMBER_INTEGER;\r\n            this.matchedPos = curPos;\r\n            this.input_stream.backup(1);\r\n            return curPos;\r\n        }\r\n        // not a valid numbers\r\n        return curPos;\r\n    }\r\n\r\n    findStringLiteral(curPos, active0) {\r\n        //logger.debug(\"finding string literal\");\r\n        var kind = 0x7fffffff;\r\n        try {\r\n            this.curChar = this.input_stream.readChar();\r\n        } catch (e) {\r\n            return 1;\r\n        }\r\n        for (; ;) {\r\n            let code = this.curChar.charCodeAt();\r\n            //logger.debug(\"findStringLiteral() = \" + code);\r\n            switch (code) {\r\n                case 34: // '\"'\r\n                    kind = this.STRING_DOUBLE_NONEMPTY;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            ++curPos;\r\n            if (kind != 0x7fffffff) {\r\n                this.matchedKind = kind;\r\n                this.matchedPos = curPos;\r\n                //logger.debug(\"returning curPos = \" + curPos);\r\n                return curPos;\r\n            }\r\n            try {\r\n                this.curChar = this.input_stream.readChar();\r\n            } catch (e) {\r\n                logger.debug(e.stack);\r\n                return curPos;\r\n            }\r\n        }\r\n    }\r\n\r\n    moveChar(curPos, target) {\r\n        logger.debug(\"moveChar::curChar=\" + this.curChar + \",target=\" + target);\r\n        var kind = 0x7fffffff;\r\n        try {\r\n            this.curChar = this.input_stream.readChar();\r\n        } catch (e) {\r\n            return 1;\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        for (; ;) {\r\n            if (this.curChar == '\\n' || this.curChar == '\\r' || this.curChar == '\\f') {\r\n                kind = this.C_SINGLE_COMMENT;\r\n            }\r\n            if (code == 42) { // '*'\r\n                \r\n                // lookahead for char '/'\r\n                try {\r\n                    this.curChar = this.input_stream.readChar();\r\n                } catch (e) {\r\n                    return 1;\r\n                }\r\n                let ccode = this.curChar.charCodeAt();\r\n                if (ccode == 47) {\r\n                    ++curPos;\r\n                    kind = this.C_MULTILINE_COMMENT;\r\n                } else {\r\n                    this.input_stream.backup(1);\r\n                }\r\n            }\r\n\r\n            ++curPos;\r\n            if (kind != 0x7fffffff) {\r\n                this.matchedKind = kind;\r\n                this.matchedPos = curPos;\r\n                return curPos;\r\n            }\r\n            try {\r\n                this.curChar = this.input_stream.readChar();\r\n            } catch (e) {\r\n                return curPos;\r\n            }\r\n            code = this.curChar.charCodeAt();\r\n        }\r\n    }\r\n\r\n    moveChar01(active0) {\r\n        try {\r\n            //logger.debug(\"@moveChar01::curChar=\" + this.curChar + \",code=\" + code);\r\n            this.curChar = this.input_stream.readChar();\r\n            //logger.debug(\"@moveChar01::curChar=\" + this.curChar + \",code=\" + code);\r\n        } catch (e) {\r\n            logger.debug(e.stack);\r\n            return 1;\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        logger.debug(\"moveChar01::curChar=\" + this.curChar + \",code=\" + code);\r\n        switch (code) {\r\n            case 34: // '\"'\r\n                if ((active0 & 8) != 0)\r\n                    return this.stopAtPos(1, this.STRING_DOUBLE_EMPTY);\r\n                break;\r\n            case 39: // '\\''\r\n                if ((active0 & 4) != 0)\r\n                    return this.stopAtPos(1, this.STRING_SINGLE_EMPTY);\r\n                break;\r\n            case 65: // 'A'\r\n            case 97: // 'a'\r\n                if ((active0 & 4) != 0)\r\n                    return this.moveChar02(active0, 4);\r\n                break;\r\n            case 82: // 'R'\r\n            case 114: // 'r'\r\n                if ((active0 & 2) != 0)\r\n                    return this.moveChar02(active0, 4);\r\n                break;\r\n            case 85: // 'U'\r\n            case 117: // 'u'\r\n                if ((active0 & 8) != 0)\r\n                    return this.moveChar02(active0, 8);\r\n                break;\r\n            case 47: // '/' - C_SINGLE_COMMENT\r\n                if ((active0 & 6) != 0)\r\n                    return this.moveChar(0, '\\n');\r\n                break;\r\n            case 42: // '*' - C_MULTILINE_COMMENT\r\n                if ((active0 & 6) != 0)\r\n                    return this.moveChar(0, '*');\r\n                break;\r\n            default:\r\n                break;\r\n\r\n        }\r\n        return this.findStringLiteral(0, active0);\r\n    }\r\n\r\n    moveChar02(old0, active0) {\r\n        try {\r\n            this.curChar = this.input_stream.readChar();\r\n        } catch (e) {\r\n            return 2;\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        //logger.debug(\"moveChar02::curChar=\" + this.curChar + \",code=\" + code);\r\n        switch (code) {\r\n            case 76: // L\r\n            case 108:// l\r\n                return this.moveChar03(active0, 5);\r\n            case 85:// U\r\n            case 117:// u\r\n                return this.moveChar03(active0, 2);\r\n            default:\r\n                break;\r\n        }\r\n        return this.findStringLiteral(1, active0);\r\n    }\r\n\r\n    moveChar03(old0, active0) {\r\n        try {\r\n            this.curChar = this.input_stream.readChar();\r\n        } catch (e) {\r\n            return 3;\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        logger.debug(\"moveChar03::curChar=\" + this.curChar + \",code=\" + code);\r\n        switch (code) {\r\n            case 69: // E\r\n            case 101: // e\r\n                if ((active0 & 2) != 0)\r\n                    return this.stopAtPos(3, this.TRUE);\r\n                break;\r\n            case 76: // L\r\n            case 108:// l\r\n                \r\n                if ((active0 & 5) != 0) {\r\n                    logger.debug('moveChar03->foundNull-' + (active0 & 5));\r\n                    return this.stopAtPos(3, this.NULL);\r\n                }\r\n                break;\r\n            case 83: // S\r\n            case 115:// s\r\n                return this.moveChar04(active0, 4);\r\n            default:\r\n                break;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    moveChar04(old0, active0) {\r\n        try {\r\n            this.curChar = this.input_stream.readChar();\r\n        } catch (e) {\r\n            return 4;\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        logger.debug(\"moveChar04::curChar=\" + this.curChar + \",code=\" + code);\r\n        switch (code) {\r\n            case 69: // E\r\n            case 101:// e\r\n                if ((active0 & 4) != 0)\r\n                    return this.stopAtPos(4, this.FALSE);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    stopAtPos(pos, kind) {\r\n        this.matchedKind = kind;\r\n        this.matchedPos = pos;\r\n        return pos + 1;\r\n    }\r\n\r\n    checkForSpace() {\r\n        let code = this.curChar.charCodeAt();\r\n        if (code == 32) {\r\n            try {\r\n                curChar = input_stream.readChar();\r\n            } catch (e) {\r\n            }\r\n            let ccode = this.curChar.charCodeAt();\r\n            if (ccode != 32) {\r\n                input_stream.backup(1);\r\n                return;\r\n            } else {\r\n                this.checkForSpace();\r\n            }\r\n        }\r\n    }\r\n\r\n    fillToken() {\r\n        let beginLine = this.input_stream.getBeginLine;\r\n        let beginColumn = this.input_stream.getBeginColumn;\r\n        let endLine = this.input_stream.getEndLine;\r\n        let endColumn = this.input_stream.getEndColumn;\r\n        var im = this.strLiteralImages[this.matchedKind];\r\n        let tokenImage = (im == null) ? this.input_stream.getImage() : im;\r\n        //let tokenImage = this.input_stream.getImage();\r\n        let token = RJsonToken.newToken(this.matchedKind, tokenImage);\r\n        logger.debug('generated new token ->' + token.toString());\r\n        token.beginLine = beginLine;\r\n        token.endLine = endLine;\r\n        token.beginColumn = beginColumn;\r\n        token.endColumn = endColumn;\r\n        return token;\r\n    }\r\n\r\n    consume_char() {\r\n        if (this.curChar == '\\n') {\r\n        } else if (this.curChar == ' ') {\r\n            this.input_stream.spaceDetected();\r\n        }\r\n\r\n    }\r\n}\r\n","import JsonMap from \"../json/JsonMap\";\r\nimport JsonList from \"../json/JsonList\";\r\nimport RJsonAbsParser from \"./RJsonAbsParser\";\r\nimport RJsonParserError from \"./RJsonParserError\";\r\n\r\nvar logger = require('../logger/logger');\r\n\r\nexport default class RJsonParser extends RJsonAbsParser {\r\n\r\n    constructor(rinput, startNow) {\r\n        super(rinput, startNow);\r\n    }\r\n\r\n    parse() {\r\n\r\n        var toReturn = this.anything();\r\n        toReturn.root = true;\r\n        toReturn.rawInput = this.input;\r\n        if (!this.ensureEOF()) {\r\n            throw new Error(\"parser.expectedEOF\");\r\n        }\r\n        return toReturn;\r\n\r\n    }\r\n\r\n    anything() {\r\n        logger.debug(\"RJsonParser::anything()\" + this.jj_nt);\r\n        let x;\r\n        switch (this.jj_nt.kind) {\r\n            case this.BRACE_OPEN:\r\n                x = this.object();\r\n                break;\r\n            case this.BRACKET_OPEN:\r\n                x = this.list();\r\n                break;\r\n            case this.NUMBER_INTEGER:\r\n            case this.NUMBER_DECIMAL:\r\n            case this.TRUE:\r\n            case this.FALSE:\r\n            case this.NULL:\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                x = this.value();\r\n                break;\r\n            case this.BRACKET_CLOSE:\r\n                break;\r\n            default:\r\n                this.jj_la1[0] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new RJsonParserError();\r\n        }\r\n        { if (true) return x; }\r\n    }\r\n\r\n    object() {\r\n        let map = new JsonMap(true, false, new Map());\r\n        let key, value;\r\n        this.jj_consume_token(this.BRACE_OPEN);\r\n        switch (this.jj_nt.kind) {\r\n            case this.NUMBER_INTEGER:\r\n            case this.NUMBER_DECIMAL:\r\n            case this.TRUE:\r\n            case this.FALSE:\r\n            case this.NULL:\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n            case this.SYMBOL:\r\n                key = this.objectKey();\r\n                this.jj_consume_token(this.COLON);\r\n                value = this.anything();\r\n                value.key = true;\r\n                map.put(key, value);\r\n                key = null; value = null;\r\n                label_1:\r\n                while (true) {\r\n                    switch (this.jj_nt.kind) {\r\n                        case this.COMMA:\r\n                            ;\r\n                            break;\r\n                        default:\r\n                            this.jj_la1[3] = this.jj_gen;\r\n                            break label_1;\r\n                    }\r\n                    logger.debug('^^^^^^^^->' + this.jj_nt.kind);\r\n                    this.jj_consume_token(this.COMMA);\r\n                    logger.debug('^^^^^^^^->' + this.jj_nt.kind);\r\n                    key = this.objectKey();\r\n                    if (!key)\r\n                        break;\r\n                    this.jj_consume_token(this.COLON);\r\n                    value = this.anything();\r\n                    value.key = true;\r\n                    map.put(key, value);\r\n                    key = null; value = null;\r\n                }\r\n                break;\r\n            default:\r\n                this.jj_la1[4] = this.jj_gen;\r\n        }\r\n        this.jj_consume_token(this.BRACE_CLOSE);\r\n        { if (true) return map; }\r\n    }\r\n\r\n    list() {\r\n        let list = new JsonList(true, false, []);\r\n        logger.debug(\"RJsonParser::list()\" + this.jj_nt.toString());\r\n        let value;\r\n        this.jj_consume_token(this.BRACKET_OPEN);\r\n        switch (this.jj_nt.kind) {\r\n            case this.BRACE_OPEN:\r\n            case this.BRACKET_OPEN:\r\n            case this.NUMBER_INTEGER:\r\n            case this.NUMBER_DECIMAL:\r\n            case this.TRUE:\r\n            case this.FALSE:\r\n            case this.NULL:\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                value = this.anything();\r\n                list.add(value);\r\n                value = null;\r\n                label_2:\r\n                while (true) {\r\n                    switch (this.jj_nt.kind) {\r\n                        case this.COMMA:\r\n                            ;\r\n                            break;\r\n                        default:\r\n                            this.jj_la1[5] = this.jj_gen;\r\n                            break label_2;\r\n                    }\r\n                    logger.debug('^^^^^^^^->' + this.jj_nt.kind);\r\n                    this.jj_consume_token(this.COMMA);\r\n                    logger.debug('^^^^^^^^->' + this.jj_nt.kind);\r\n                    value = this.anything();\r\n                    if(!value)\r\n                        break;\r\n                    list.add(value);\r\n                    value = null;\r\n                }\r\n                break;\r\n            default:\r\n                this.jj_la1[6] = this.jj_gen;\r\n                ;\r\n        }\r\n        this.jj_consume_token(this.BRACKET_CLOSE);\r\n        { if (true) return list; }\r\n    }\r\n\r\n\r\n\r\n    ensureEOF() {\r\n        this.jj_consume_token(0);\r\n        { if (true) return true; }\r\n    }\r\n\r\n    jj_consume_token(kind) {\r\n\r\n        logger.debug(\"01-RJsonParser::jj_consume_token::this.jj_nt=\" + this.jj_nt + \",cKind=\" + kind + \",this.jj_nt.next=\" + this.jj_nt.next);\r\n        var oldToken = this.token;\r\n        if ((this.token = this.jj_nt).next != null) {\r\n            this.jj_nt = this.jj_nt.next;\r\n        } else {\r\n            this.jj_nt = this.jj_nt.next = this.lexer.getNextToken();\r\n            logger.debug(\"02-RJsonParser::jj_consume_token::this.jj_nt=\" + this.jj_nt + \",cKind=\" + kind + \",this.jj_nt.next=\" + this.jj_nt.next);\r\n        }\r\n        logger.debug('token.kind=' + this.token.kind);\r\n\r\n        if (this.token.kind === kind) {\r\n            logger.debug(\"03-RJsonParser::jj_consume_token::matched(this.token.kind)\" + this.token.kind + \",ckind=\" + kind);\r\n            this.jj_gen++;\r\n            return this.token;\r\n        }\r\n\r\n\r\n        this.jj_nt = this.token;\r\n        this.token = oldToken;\r\n        this.jj_kind = kind;\r\n        //logger.debug('-------------------');\r\n        var parserError = this.generateParseException();\r\n        //logger.debug('-------------------' + e.message);\r\n        throw parserError;\r\n    }\r\n\r\n    generateParseException() {\r\n        logger.debug('generateParseException');\r\n        var jj_expentries = [];\r\n        var la1tokens = [];\r\n        var jj_expentry = [];\r\n        var i, j, k, l;\r\n        if (this.jj_kind >= 0) {\r\n            la1tokens[this.jj_kind] = true;\r\n            this.jj_kind = -1;\r\n        }\r\n        for (i = 0; i < 13; i++) {\r\n            if (this.jj_la1[i] == this.jj_gen) {\r\n                for (j = 0; j < 32; j++) {\r\n                    if ((this.jj_la1_0[i] & (1 << j)) != 0) {\r\n                        la1tokens[j] = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (k = 0; k < 29; k++) {\r\n            if (la1tokens[k]) {\r\n                jj_expentry[0] = k;\r\n                jj_expentries.push(jj_expentry);\r\n            }\r\n        }\r\n        var exptokseq = [];\r\n        for (l = 0; l < jj_expentries.size; l++) {\r\n            exptokseq[l] = jj_expentries[l];\r\n        }\r\n\r\n        var e = new RJsonParserError(this.token, exptokseq, this.tokenImage);\r\n        logger.debug('generateParseException ::' + e.getMessage());\r\n        return e;\r\n    }\r\n\r\n    static runParser(input) {\r\n        var instance = new RJsonParser(input);\r\n        var jsonObject = instance.parse();\r\n        return jsonObject;\r\n    }\r\n}\r\n\r\nexport function runParser(input) {\r\n    RJsonParser.runParser(input);\r\n}","var logger = require('../logger/logger');\r\n\r\nexport default class RJsonParserError extends Error {\r\n\r\n    constructor(_currentTokenVal, _expectedTokenSequencesVal, _tokenImageVal) {\r\n        super();\r\n        this.name = \"RJsonParserError\"; \r\n        this.currentToken = _currentTokenVal;\r\n        this.expectedTokenSequences = _expectedTokenSequencesVal;\r\n        this.tokenImage = _tokenImageVal;\r\n        this.eol = \"&\";\r\n    }\r\n\r\n    getMessage() {\r\n        let expected = '';\r\n        let maxSize, i, j = 0;\r\n        for (i = 0; i < this.expectedTokenSequences.length; i++) {\r\n            if (maxSize < this.expectedTokenSequences[i].length) {\r\n                maxSize = this.expectedTokenSequences[i].length;\r\n            }\r\n            for (j = 0; j < this.expectedTokenSequences[i].length; j++) {\r\n                expected += this.tokenImage[this.expectedTokenSequences[i][j]] + ' ';\r\n            }\r\n            if (this.expectedTokenSequences[i][this.expectedTokenSequences[i].length - 1] != 0) {\r\n                expected += \"...\";\r\n            }\r\n            expected += eol + \"    \";\r\n        }\r\n\r\n        let retval = \"Encountered \\\"\";\r\n        let tok = this.currentToken.next;\r\n        for (i = 0; i < maxSize; i++) {\r\n            if (i != 0) retval += \" \";\r\n            if (tok.kind == 0) {\r\n                retval += this.tokenImage[0];\r\n                break;\r\n            }\r\n            retval += \" \" + this.tokenImage[tok.kind];\r\n            retval += \" \\\"\";\r\n            retval += this.add_escapes(tok.image);\r\n            retval += \" \\\"\";\r\n            tok = tok.next;\r\n        }\r\n\r\n        retval += \"\\\" at line \" + this.currentToken.next.beginLine + \", column \" + this.currentToken.next;\r\n        retval += \".\" + this.eol;\r\n        if (this.expectedTokenSequences.length == 1) {\r\n            retval += \"Was expecting:\" + this.eol + \"    \";\r\n        } else {\r\n            retval += \"Was expecting one of:\" + this.eol + \"    \";\r\n        }\r\n        retval += expected;\r\n        this.message = retval;\r\n        logger.debug(this.message);\r\n        return retval;\r\n    }\r\n\r\n    addEscapes(str) {\r\n        let i,ch;\r\n        let retval = \"\";\r\n        for (i = 0; i < str.length; i++) {\r\n            switch (str.charAt(i)) {\r\n                case 0:\r\n                    continue;\r\n                case '\\b':\r\n                    retval += \"\\\\b\";\r\n                    continue;\r\n                case '\\t':\r\n                    retval += \"\\\\t\";\r\n                    continue;\r\n                case '\\n':\r\n                    retval += \"\\\\n\";\r\n                    continue;\r\n                case '\\f':\r\n                    retval += \"\\\\f\";\r\n                    continue;\r\n                case '\\r':\r\n                    retval += \"\\\\r\";\r\n                    continue;\r\n                case '\\\"':\r\n                    retval += \"\\\\\\\"\";\r\n                    continue;\r\n                case '\\'':\r\n                    retval += \"\\\\\\'\";\r\n                    continue;\r\n                case '\\\\':\r\n                    retval += \"\\\\\\\\\";\r\n                    continue;\r\n                default:\r\n                    if ((ch = str.charAt(i)) < 0x20 || ch > 0x7e) {\r\n                        var s = \"0000\" + ch.toString();\r\n                        retval += \"\\\\u\" + s.substring(s.length - 4, s.length);\r\n                    } else {\r\n                        retval += ch;\r\n                    }\r\n                    continue;\r\n            }\r\n        }\r\n        return retval.toString();\r\n    }\r\n}","var logger = require('../logger/logger');\r\n\r\nexport default class RJsonToken {\r\n    constructor(ofkind,nimage) {\r\n        this._kind = ofkind;\r\n        this._image = nimage;\r\n        this._next = null;\r\n        this.specialToken = null;\r\n    }\r\n\r\n    set next(newNext) {\r\n        this._next = newNext;\r\n    }\r\n\r\n    get next() {\r\n        return this._next;\r\n    }\r\n\r\n    set beginLine(line) {\r\n        this._beginLine = line;\r\n    }\r\n\r\n    get beginLine() {\r\n        return this._beginLine;\r\n    }\r\n\r\n    set endLine(line) {\r\n        this._endLine = line;\r\n    }\r\n\r\n    set beginColumn(column) {\r\n        this._beginColumn = column;\r\n    }\r\n\r\n    get beginColumn() {\r\n        return this._beginColumn;\r\n    }\r\n\r\n    set endColumn(column) {\r\n        this._endColumn = column;\r\n    }\r\n\r\n    get kind() {\r\n        return this._kind;\r\n    }\r\n\r\n    set kind(newKind) {\r\n        this._kind = newKind;\r\n    }\r\n\r\n    get image() {\r\n        logger.debug('returning from token image length ->' + this._image.length);\r\n        return this._image;\r\n    }\r\n\r\n    static newToken(kind,image) {\r\n        return new RJsonToken(kind,image);\r\n    }\r\n\r\n    toString() {\r\n     return \"kind=\" + this._kind + \",image=\" + this.image;\r\n    }\r\n}","var logger = require('../logger/logger');\r\n\r\nexport default class RJsonTokenMgrError {\r\n    static addEscapes(str) {\r\n        //logger.debug('addEscapes)' + str);\r\n        let i,ch;\r\n        let retval = \"\";\r\n        for (i = 0; i < str.length; i++) {\r\n            switch (str.charAt(i)) {\r\n                case 0:\r\n                    continue;\r\n                case '\\b':\r\n                    retval += \"\\\\b\";\r\n                    continue;\r\n                case '\\t':\r\n                    retval += \"\\\\t\";\r\n                    continue;\r\n                case '\\n':\r\n                    retval += \"\\\\n\";\r\n                    continue;\r\n                case '\\f':\r\n                    retval += \"\\\\f\";\r\n                    continue;\r\n                case '\\r':\r\n                    retval += \"\\\\r\";\r\n                    continue;\r\n                case '\\\"':\r\n                    retval += \"\\\\\\\"\";\r\n                    continue;\r\n                case '\\'':\r\n                    retval += \"\\\\\\'\";\r\n                    continue;\r\n                case '\\\\':\r\n                    retval += \"\\\\\\\\\";\r\n                    continue;\r\n                default:\r\n                    if ((ch = str.charAt(i)) < 0x20 || ch > 0x7e) {\r\n                        var s = \"0000\" + ch.toString();\r\n                        retval += \"\\\\u\" + s.substring(s.length - 4, s.length);\r\n                        //logger.debug('retval' + retval);\r\n                    } else {\r\n                        retval += ch;\r\n                    }\r\n                    continue;\r\n            }\r\n        }\r\n        //logger.debug('8888' + retval.toString());\r\n        return retval.toString();\r\n    }\r\n\r\n    static LexicalError(EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar) {\r\n        let code = curChar.charCodeAt();\r\n        //logger.debug('LexicalError(EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar)');\r\n        var res = \"Lexical error at line \" +\r\n            errorLine + \", column \" +\r\n            errorColumn + \".  Encountered: \" +\r\n            (EOFSeen ? \"<EOF> \" : (\"\\\"\" + RJsonTokenMgrError.addEscapes(curChar) + \"\\\"\") + \" (\" + code + \"), \") +\r\n            \"after : \\\"\" + RJsonTokenMgrError.addEscapes(errorAfter) + \"\\\"\";\r\n        //logger.debug(res);\r\n    }\r\n\r\n    constructor(EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar, reason) {\r\n        this.message = RJsonTokenMgrError.LexicalError(EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar);\r\n        this.reason = reason;\r\n    }\r\n}"],"sourceRoot":""}