{"version":3,"sources":["webpack://RJsonParser/webpack/universalModuleDefinition","webpack://RJsonParser/./src/app.js","webpack://RJsonParser/./src/io/CharStream.js","webpack://RJsonParser/./src/io/Reader.js","webpack://RJsonParser/./src/io/String.js","webpack://RJsonParser/./src/io/StringReader.js","webpack://RJsonParser/./src/json/JsonBoolean.js","webpack://RJsonParser/./src/json/JsonList.js","webpack://RJsonParser/./src/json/JsonMap.js","webpack://RJsonParser/./src/json/JsonNull.js","webpack://RJsonParser/./src/json/JsonNumber.js","webpack://RJsonParser/./src/json/JsonObject.js","webpack://RJsonParser/./src/json/JsonString.js","webpack://RJsonParser/./src/logger/logger.js","webpack://RJsonParser/./src/parser/RJsonAbsParser.js","webpack://RJsonParser/./src/parser/RJsonConstants.js","webpack://RJsonParser/./src/parser/RJsonLexer.js","webpack://RJsonParser/./src/parser/RJsonParser.js","webpack://RJsonParser/./src/parser/RJsonParserError.js","webpack://RJsonParser/./src/parser/RJsonToken.js","webpack://RJsonParser/./src/parser/RJsonTokenMgrError.js"],"names":["root","factory","exports","module","define","amd","this","init","console","log","textDiv","document","getElementById","jsonDiv","jsonObj","innerHTML","parse","appendable","destination","formatJsonToString","formatInputString","formatJsonToHtml","formatHtml","e","stack","addEventListener","format","logger","CharStream","stream","maxNextCharInd","nextCharInd","bufline","bufcolumn","column","line","bufpos","bufsize","available","maxBufSize","inBuf","prevCharIsCR","prevCharIsLF","tabSize","tokenBegin","nextCharBuf","Array","buffer","inputStream","readFromBuffer","readChar","c","adjustBuffSize","readByte","checkSpecial","updateLineColumn","fillBuff","debug","i","read","close","Error","backup","olumn","amount","expandBuff","toString","stringify","Reader","newInput","constructor","TypeError","prototype","getChars","input","length","next","mark","cbuf","offset","len","srcBegin","srcEnd","dst","dstBegin","String","chars","count","value","join","StringReader","super","ensureOpen","n","Math","min","JsonBoolean","isKey","currentLevel","_input","JsonList","jsonObject","push","j","tabs","size","forEach","element","cAppendable","_root","JsonMap","jsonObjectKey","jsonObjectValue","set","info","key","keyAppendable","valueAppendable","keyValue","JsonNumber","JsonObject","_isKey","_keyValue","_rawInput","newRoot","newKey","raw","newValue","JsonString","concat","msg","RJsonAbsParser","rinput","startNow","undefined","reader","lexer","token","jj_nt","getNextToken","jj_gen","jj_la1","jj_la1_0","jj_kind","nativeNumbers","o","kind","STRING_SINGLE_EMPTY","STRING_DOUBLE_EMPTY","STRING_SINGLE_NONEMPTY","STRING_DOUBLE_NONEMPTY","string","SYMBOL","symbol","NULL","nullValue","NUMBER_INTEGER","NUMBER_DECIMAL","TRUE","FALSE","booleanValue","number","jj_consume_token","s","doubleQuoteString","singleQuoteString","image","sjj_gen","b","x","t","RJsonConstants","EOF","C_SINGLE_COMMENT","C_MULTILINE_COMMENT","SH_SINGLE_COMMENT","WHITESPACE","EOL","COMMA","BRACE_OPEN","BRACE_CLOSE","COLON","BRACKET_OPEN","BRACKET_CLOSE","ZERO","DIGIT_NONZERO","DIGIT","QUOTE_DOUBLE","QUOTE_SINGLE","STRING_SINGLE_BODY","STRING_DOUBLE_BODY","DEFAULT","LEXICAL_ERROR","tokenImage","RJsonLexer","istream","input_stream","curChar","matchedKind","matchedPos","toToken","curLexState","strLiteralImages","matchedToken","curPos","EOFLoop","beginToken","fillToken","analyzeCurrentCharacter","error_line","getEndLine","error_column","getEndColumn","error_after","EOFSeen","e1","getImage","consume_char","charCodeAt","stopAtPos","moveChar01","moveChar","findNumber","code","startState","isDigit","active0","target","moveChar02","findStringLiteral","old0","moveChar03","moveChar04","pos","checkForSpace","beginLine","getBeginLine","beginColumn","getBeginColumn","endLine","endColumn","im","spaceDetected","RJsonParser","toReturn","anything","rawInput","ensureEOF","object","list","map","Map","objectKey","put","label_1","add","label_2","oldToken","generateParseException","k","l","jj_expentries","la1tokens","jj_expentry","exptokseq","getMessage","runParser","RJsonParserError","_currentTokenVal","_expectedTokenSequencesVal","_tokenImageVal","currentToken","expectedTokenSequences","eol","maxSize","expected","retval","tok","add_escapes","str","ch","charAt","substring","RJsonToken","ofkind","nimage","_kind","_image","_next","specialToken","newNext","_beginLine","_endLine","_beginColumn","_endColumn","newKind","RJsonTokenMgrError","lexState","errorLine","errorColumn","errorAfter","addEscapes","reason","message","LexicalError"],"mappings":"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","file":"app.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RJsonParser\"] = factory();\n\telse\n\t\troot[\"RJsonParser\"] = factory();\n})(this, function() {\nreturn ","import RJsonParser from \"./parser/RJsonParser\"\r\n\r\nimport css from \"./css/style.css\";\r\n\r\nformat();\r\n\r\nfunction formatInputString(jsonObj, textDiv) {\r\n    var appendable = {\r\n        destination: \"\"\r\n    }\r\n    jsonObj.formatJsonToString(appendable, -1);\r\n    textDiv.innerHTML = appendable.destination;\r\n}\r\n\r\nfunction formatHtml(jsonObj, jsonDiv) {\r\n    var appendable = {\r\n        destination: \"\"\r\n    }\r\n    jsonObj.formatJsonToHtml(appendable, -1);\r\n    jsonDiv.innerHTML = appendable.destination;\r\n}\r\n\r\nfunction init() {\r\n    try {\r\n        console.log('reformatting.');\r\n        let textDiv = document.getElementById('inputtextarea');\r\n        let jsonDiv = document.getElementById('json');\r\n        let instance = new RJsonParser(textDiv.innerHTML);\r\n        \r\n        var jsonObj = instance.parse();\r\n        formatInputString(jsonObj, textDiv);\r\n        formatHtml(jsonObj, jsonDiv);\r\n    } catch (e) {\r\n        console.log(e.stack);\r\n        //document.getElementById('inputtextarea').innerHTML = e.message;\r\n    }\r\n}\r\n\r\nfunction format() {\r\n    try {\r\n        init();\r\n        let textDiv = document.getElementById('inputtextarea');\r\n        textDiv.addEventListener('input', () => {\r\n            console.log('input changed...' + document.getElementById('inputtextarea').innerHTML);\r\n            //alert('-----------' + document.getElementById('inputtextarea').innerHTML);\r\n            init();\r\n        })\r\n    } catch (e) {\r\n        console.log(e.stack);\r\n        //document.getElementById('inputtextarea').innerHTML = e.message;\r\n    }\r\n}\r\n\r\n\r\n","import String from '../io/String.js';\r\n\r\nvar logger = require('../logger/logger');\r\n\r\nexport default class CharStream {\r\n    maxBufSize = 4096;\r\n\r\n    constructor(stream) {\r\n        this.maxNextCharInd = 0;\r\n        this.nextCharInd = -1;\r\n\r\n        this.bufline = [];\r\n        this.bufcolumn = [];\r\n        this.column = 0;\r\n        this.line = 1;\r\n\r\n        this.bufpos = -1;\r\n        this.bufsize = 0;\r\n        this.available = this.maxBufSize;\r\n        this.inBuf = 0;\r\n\r\n        this.prevCharIsCR = false;\r\n        this.prevCharIsLF = false;\r\n        this.tabSize = 4;\r\n\r\n        this.tokenBegin = 0;\r\n        this.nextCharBuf = new Array(this.maxBufSize);\r\n        this.buffer = [];\r\n        this.inputStream = stream;\r\n    }\r\n\r\n    beginToken() {\r\n        if (this.inBuf > 0) {\r\n            // lookahead and backup has happened.\r\n            return this.readFromBuffer();\r\n        }\r\n        this.tokenBegin = 0;\r\n        this.bufpos = -1;\r\n        return this.readChar();\r\n    }\r\n\r\n    readChar() {\r\n        if (this.inBuf > 0) {\r\n            // lookahead and backup has happened.\r\n            return this.readFromBuffer();\r\n        }\r\n        if (++this.bufpos === this.available)\r\n            this.adjustBuffSize();\r\n\r\n        let c;\r\n        if ((this.buffer[this.bufpos] = c = this.readByte()) == '\\\\') {\r\n            return this.checkSpecial(c);\r\n        } else {\r\n            this.updateLineColumn(c);\r\n            return c;\r\n        }\r\n    }\r\n\r\n    readByte() {\r\n        \r\n        if (++this.nextCharInd >= this.maxNextCharInd)\r\n            this.fillBuff();\r\n        logger.debug(\"nextCharInd=\" + (this.nextCharInd) + \",this.maxNextCharInd=\" + this.maxNextCharInd);\r\n        return this.nextCharBuf[this.nextCharInd];\r\n    }\r\n\r\n    fillBuff() {\r\n        let i;\r\n        if (this.maxNextCharInd === this.maxBufSize)\r\n            this.maxNextCharInd = this.nextCharInd = 0;\r\n        try {\r\n            if ((i = this.inputStream.read(this.nextCharBuf, this.maxNextCharInd, this.maxBufSize - this.maxNextCharInd)) === -1) {\r\n                this.inputStream.close();\r\n                throw new Error(\"stream has not enough data.\");\r\n            } else {\r\n                this.maxNextCharInd += i;\r\n            }\r\n        } catch (e) {\r\n            if (this.bufpos != 0) {\r\n                --this.bufpos;\r\n                this.backup(0);\r\n            } else {\r\n                this.bufline[this.bufpos] = this.line;\r\n                this.bufcolumn[this.bufpos] = this.olumn;\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    backup(amount) {\r\n        //logger.debug('inBuf-' + this.inBuf + \",bufPos-\" + this.bufpos);\r\n        this.inBuf += amount;\r\n        if ((this.bufpos -= amount) < 0)\r\n            this.bufpos += this.bufsize;\r\n        //this.tokenBegin = amount;\r\n        //logger.debug('inBuf-' + this.inBuf + \",bufPos-\" + this.bufpos);\r\n    }\r\n\r\n    readFromBuffer() {\r\n        //logger.debug('reading from inBuf-' + this.inBuf);\r\n        --this.inBuf;\r\n        if (++this.bufpos == this.bufsize)\r\n            this.bufpos = 0;\r\n        return this.buffer[this.bufpos];\r\n    }\r\n\r\n    adjustBuffSize() {\r\n        if (this.available === this.bufsize) {\r\n            if (this.tokenBegin > 2048) {\r\n                this.bufpos = 0;\r\n            } else {\r\n                this.expandBuff(true);\r\n            }\r\n        } else if (this.available > this.tokenBegin) {\r\n            this.available = this.bufsize;\r\n        } else if ((this.tokenBegin - this.available) < 2048) {\r\n            this.expandBuff(true);\r\n        } else {\r\n            this.available = this.tokenBegin;\r\n        }\r\n    }\r\n\r\n    expandBuff() {\r\n        throw new Error(\"Implementation to be done....\");\r\n    }\r\n\r\n    checkSpecial(c) {\r\n        throw new Error(\"Implementation to be done....\");\r\n    }\r\n\r\n    updateLineColumn(c) {\r\n        this.column++;\r\n        if (this.prevCharIsLF) {\r\n            this.prevCharIsLF = false;\r\n            this.line += (this.column = 1);\r\n        } else if (this.prevCharIsCR) {\r\n            this.prevCharIsCR = false;\r\n            if (c == '\\n') {\r\n                this.prevCharIsLF = true;\r\n            } else {\r\n                this.line += (this.column = 1);\r\n            }\r\n        }\r\n\r\n        switch (c) {\r\n            case '\\r':\r\n                this.tokenBegin++;\r\n                this.prevCharIsCR = true;\r\n                break;\r\n            case '\\n':\r\n                this.tokenBegin++;\r\n                this.prevCharIsLF = true;\r\n                break;\r\n            case '\\t':\r\n                this.tokenBegin++;\r\n                this.column--;\r\n                this.column += (this.tabSize - (this.column % this.tabSize));\r\n                break;\r\n            case 32:\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.bufline[this.bufpos] = this.line;\r\n        this.bufcolumn[this.bufpos] = this.column;\r\n    }\r\n\r\n    spaceDetected() {\r\n        this.tokenBegin++;\r\n    }\r\n\r\n    getImage() {\r\n        var response;\r\n        //logger.debug(\"bufpos=\" + this.bufpos + \",tokenBegin=\" + this.tokenBegin);\r\n        //logger.debug(\"buffer=\" + this.buffer[0] + \",\" + this.buffer[1] + \",\" + this.buffer[2] + \",\" + this.buffer[3] + \",\" + this.buffer[4]);\r\n        if (this.bufpos >= this.tokenBegin) {\r\n            response = new String(this.buffer, this.tokenBegin, this.bufpos - this.tokenBegin + 1);\r\n            //logger.debug(\"response=\" + response.toString());\r\n        } else {\r\n            response = new String(this.buffer, this.tokenBegin, this.bufsize - this.tokenBegin).toString() + new String(this.buffer, 0, this.bufpos + 1).toString();\r\n            //logger.debug(\"response=\" + response.toString());\r\n        }\r\n        return response.stringify();\r\n    }\r\n\r\n    get getColumn() {\r\n        return this.bufcolumn[this.bufpos];\r\n    }\r\n\r\n    get getLine() {\r\n        return this.bufline[this.bufpos];\r\n    }\r\n\r\n    get getEndLine() {\r\n        return this.bufline[this.bufpos];\r\n    }\r\n\r\n    get getBeginColumn() {\r\n        return this.bufcolumn[this.tokenBegin];\r\n    }\r\n\r\n    get getBeginLine() {\r\n        return this.bufline[this.tokenBegin];\r\n    }\r\n}","export default class Reader {\r\n\r\n    constructor(newInput) {\r\n        if (this.constructor === Reader) {\r\n            throw new TypeError(\"Can not construct abstract class.\");\r\n        }\r\n\r\n        if (this.read === Reader.prototype.read) {\r\n            // Error Type 4. Child has not implemented this abstract method.\r\n            throw new TypeError(\"Please implement abstract method read.\");\r\n        }\r\n\r\n        if (this.getChars === Reader.prototype.getChars) {\r\n            // Error Type 4. Child has not implemented this abstract method.\r\n            throw new TypeError(\"Please implement abstract method getChars.\");\r\n        }\r\n\r\n        if (this.close === Reader.prototype.close) {\r\n            // Error Type 4. Child has not implemented this abstract method.\r\n            throw new TypeError(\"Please implement abstract close getChars.\");\r\n        }\r\n        \r\n        this.input = newInput;\r\n        this.length = this.input.length;\r\n        this.next = 0;\r\n        this.mark = 0;\r\n    }\r\n\r\n    read(cbuf, offset, len) {\r\n        throw new TypeError(\"Do not call abstract method read from child.\");\r\n    }\r\n\r\n    getChars(srcBegin, srcEnd, dst, dstBegin) {\r\n        throw new TypeError(\"Do not call abstract method getChars from child.\");\r\n    }\r\n\r\n    close() {\r\n        throw new TypeError(\"Do not call abstract method close from child.\");\r\n    }\r\n\r\n    ensureOpen() {\r\n        if (this.input === null)\r\n            throw new Error('Stream closed');\r\n    }\r\n}","export default class String {\r\n\r\n    constructor(chars, offset, count) {\r\n        if (offset < 0)\r\n            throw new Error('Offset cannot be negative');\r\n        if (count < 0)\r\n            throw new Error('count cannot be negative');\r\n\r\n        let i;\r\n        this.value = [];\r\n        for (i = offset; i < (offset + count); i++) {\r\n            //this.value.push(chars[i]);\r\n            if(chars[i] != '\\\"')\r\n                this.value[i] = chars[i];\r\n        }\r\n    }\r\n\r\n    toString() {\r\n        return this.value.join(\"\");\r\n    }\r\n\r\n    stringify() {\r\n        return this.value.join(\"\");\r\n    }\r\n}\r\n","import Reader from './Reader.js';\r\n\r\nvar logger = require('../logger/logger');\r\n\r\nexport default class StringReader extends Reader {\r\n\r\n    constructor(newInput) {\r\n        super(newInput);\r\n    }\r\n    /*\r\n     * Reads characters into a portion of an array. This method will block until some input is \r\n     * available, an I/O error occurs, or the end of the stream is reached.\r\n     * \r\n     * return The number of characters read, or -1 if the end of the stream has been reached\r\n     */\r\n    read(cbuf, offset, len) {\r\n        this.ensureOpen();\r\n        if ((offset < 0) || (offset > cbuf.length) || (len < 0) ||\r\n            ((offset + len) > cbuf.length) || ((offset + len) < 0)) {\r\n            throw new Error('index out of bounds.');\r\n        } else if (len == 0) {\r\n            return 0;\r\n        }\r\n        if (this.next >= this.length)\r\n            return -1;\r\n        var n = Math.min(this.length - this.next, len);\r\n        this.getChars(this.next, this.next + n, cbuf, offset);\r\n        this.next += n;\r\n        return n;\r\n    }\r\n\r\n    getChars(srcBegin, srcEnd, dst, dstBegin) {\r\n        if (srcBegin < 0) {\r\n            new Error('index out of bounds - ' + srcBegin);\r\n        }\r\n        if (srcEnd > this.input.length) {\r\n            new Error('index out of bounds - ' + srcEnd);\r\n        }   \r\n        if (srcBegin > srcEnd) {\r\n            throw new Error('index out of bounds - ' + (srcEnd - srcBegin));\r\n        }\r\n        var i;\r\n        for(i = srcBegin; i <= srcEnd; i++) {\r\n            dst[dstBegin] = this.input[i];\r\n            dstBegin++;\r\n        }\r\n    }\r\n\r\n    close() {\r\n        this.input = null;\r\n    }\r\n}","\r\nimport JsonObject from './JsonObject.js';\r\n\r\nexport default class JsonBoolean extends JsonObject {\r\n\r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        //console.log('destination->' + destination);\r\n        if(this._input)\r\n            appendable.destination = true;\r\n        else \r\n            appendable.destination = false;\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        destination += \"<span class=\\\"type-boolean\\\">\";\r\n        destination += this._input + \"</span>\";\r\n        appendable.destination = destination;\r\n    }\r\n}","\r\nimport JsonObject from './JsonObject.js';\r\n\r\nexport default class JsonList extends JsonObject {\r\n    \r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n    }\r\n\r\n    add(jsonObject) {\r\n        this._input.push(jsonObject);\r\n        return this;\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        ++currentLevel;\r\n        let tabs = '';\r\n        let i,j;\r\n        for (i = 0; i < currentLevel; i++)\r\n            tabs += \"\\t\";\r\n        let destination = \"\";\r\n        destination += \"\\n\" + tabs + \"[\\n\";\r\n        j = 0;\r\n        let size = this._input.length;\r\n        this._input.forEach(element => {\r\n            var cAppendable = {\r\n                destination : \"\"\r\n            }\r\n            element.formatJsonToString(cAppendable,currentLevel);\r\n            destination += cAppendable.destination;\r\n            if(j != (size-1))\r\n                destination += \",\\n\";\r\n            j++;\r\n        });\r\n        destination += \"\\n\" + tabs + \"]\";\r\n        appendable.destination += destination;\r\n        //console.log('destination->' + destination);\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        if(this._root) {\r\n            destination += \"<div class=\\\"json-viewer\\\"><code class=\\\"js\\\" id=\\\"js\\\">\";\r\n        }\r\n        \r\n        let size = this._input.length;\r\n        destination += \"<a class=\\\"list-link\\\" href=\\\"javascript:void(0)\\\">[\";\r\n        destination += \"<span style=\\\"color: #1d57d4;\\\"><i onClick=\\\"spanClicked(event);\\\" class=\\\"far fa-minus-square\\\"></i></span>\";\r\n        destination += \"<span style=\\\"color: #1d57d4;\\\" class=\\\"hide\\\"><i onClick=\\\"spanClicked(event);\\\" class=\\\"fas fa-plus-square\\\"></i></span>\";\r\n        destination += \"<span class=\\\"hide\\\"><span onClick=\\\"spanClicked(event);\\\" class=\\\"items-ph\\\">\" + size + \" items</span></span>\";\r\n        destination += \"</a>\";\r\n        let i,j;\r\n        destination += \"<ul data-level=\\\"\" + ++currentLevel + \"\\\" class=\\\"type-array\\\">\";\r\n        this._input.forEach(element => {\r\n            j++;\r\n            destination += \"<li>\";\r\n            var cAppendable = {\r\n                destination : 0\r\n            }\r\n            element.formatJsonToHtml(cAppendable,currentLevel);\r\n            destination += cAppendable.destination;\r\n            if(j != (size-1))\r\n                destination += \"<span class=\\\"type-comma\\\">\" + \",\" + \"</span>\";\r\n            destination += \"</li>\";\r\n        });\r\n        destination += \"</ul>\";\r\n        destination += \"<span class=\\\"type-symbol\\\">]</span>\";\r\n        if(this._root) {\r\n            destination += \"</code></div>\";\r\n        }\r\n\r\n        appendable.destination = destination;\r\n    }\r\n}","var logger = require('../logger/logger');\r\n\r\nimport JsonObject from './JsonObject.js';\r\n\r\nexport default class JsonMap extends JsonObject {\r\n    \r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n    }\r\n\r\n    put(jsonObjectKey,jsonObjectValue) {\r\n        this._input.set(jsonObjectKey, jsonObjectValue);\r\n        logger.debug('map size ->' + this._input.size);\r\n        return this;\r\n    }\r\n    \r\n    formatJsonToString(appendable, currentLevel) {\r\n        ++currentLevel;\r\n        let tabs = '';\r\n        let i,j;\r\n        for (i = 0; i < currentLevel; i++)\r\n            tabs += \"\\t\";\r\n        let destination = \"\";\r\n        destination += \"\" + tabs + \"{\\n\";\r\n        j = 0;\r\n        let size = this._input.size;\r\n        logger.info('size of the map ' + this._input.size);\r\n\r\n        this._input.forEach(function(value, key) {\r\n            var keyAppendable = {\r\n                destination : \"\"\r\n            }\r\n            var valueAppendable = {\r\n                destination : \"\"\r\n            }\r\n         \r\n            key.formatJsonToString(keyAppendable,currentLevel);\r\n            destination += keyAppendable.destination;\r\n            destination += \" : \";\r\n            \r\n            value.keyValue = true;\r\n            value.formatJsonToString(valueAppendable,currentLevel);\r\n            destination += valueAppendable.destination;\r\n            if(j != (size-1))\r\n                destination += \",\\n\";\r\n            j++;  \r\n        });\r\n        destination += \"\\n\" + tabs + \"}\";\r\n        appendable.destination += destination;\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        logger.debug('formatting to html...' + this._root);\r\n        if(this._root) {\r\n            destination += \"<div class=\\\"json-viewer\\\"><code class=\\\"js\\\" id=\\\"js\\\">\";\r\n        }\r\n        logger.debug('formatting to html...');\r\n        \r\n        let size = this._input.size;\r\n        destination += \"<a class=\\\"list-link\\\" href=\\\"javascript:void(0)\\\">{\";\r\n        destination += \"<span style=\\\"color: #1d57d4;\\\"><i onClick=\\\"spanClicked(event);\\\" class=\\\"far fa-minus-square\\\"></i></span>\";\r\n        destination += \"<span style=\\\"color: #1d57d4;\\\" class=\\\"hide\\\"><i onClick=\\\"spanClicked(event);\\\" class=\\\"fas fa-plus-square\\\"></i></span>\";\r\n        destination += \"<span class=\\\"hide\\\"><span onClick=\\\"spanClicked(event);\\\" class=\\\"items-ph\\\">\" + size + \" items</span></span>\";\r\n        destination += \"</a>\";\r\n        let j;\r\n        destination += \"<ul data-level=\\\"\" + ++currentLevel + \"\\\" class=\\\"type-array\\\">\";\r\n        this._input.forEach(function(value, key) {\r\n            destination += \"<li>\";\r\n            var keyAppendable = {\r\n                destination : \"\"\r\n            }\r\n            key.formatJsonToHtml(keyAppendable,currentLevel);\r\n            destination += keyAppendable.destination;\r\n            destination += \"<span class=\\\"type-colon\\\">:</span>\";\r\n\t\t\tvar valueAppendable = {\r\n                destination : \"\"\r\n            }\r\n            value.formatJsonToHtml(valueAppendable,currentLevel);\r\n            destination += valueAppendable.destination;\r\n           \r\n            if(j != (size-1))\r\n                destination += \"<span class=\\\"type-comma\\\">\" + \",\" + \"</span>\";\r\n            destination += \"</li>\";\r\n            j++;  \r\n        });\r\n        destination += \"</ul>\";\r\n        destination += \"<span class=\\\"type-symbol\\\">}</span>\";\r\n        if(this._root) {\r\n            destination += \"</code></div>\";\r\n        }\r\n\r\n        appendable.destination = destination;\r\n    }\r\n}","\r\nimport JsonObject from './JsonObject.js';\r\n\r\nexport default class JsonBoolean extends JsonObject {\r\n\r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        //console.log('destination->' + destination);\r\n        appendable.destination = null;\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        destination += \"<span class=\\\"type-null\\\">\";\r\n        destination += this._input + \"</span>\";\r\n        appendable.destination = destination;\r\n    }\r\n}","\r\nimport JsonObject from './JsonObject.js';\r\n\r\nexport default class JsonNumber extends JsonObject {\r\n\r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        //console.log('destination->' + destination);\r\n        appendable.destination += this._input;\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        destination += \"<span class=\\\"type-number\\\">\";\r\n        destination += this._input + \"</span>\";\r\n        appendable.destination = destination;\r\n    }\r\n}","export default class JsonObject {\r\n\r\n    constructor(root, isKey, input) {\r\n        // if (this.constructor === JsonObject) {\r\n        //     throw new TypeError(\"Can not construct abstract class.\");\r\n        // }\r\n\r\n        if (this.formatJsonToString === JsonObject.prototype.formatJsonToString) {\r\n            // Error Type 4. Child has not implemented this abstract method.\r\n            throw new TypeError(\"Please implement abstract method formatJsonToString.\");\r\n        }\r\n\r\n        if (this.formatJsonToHtml === JsonObject.prototype.formatJsonToHtml) {\r\n            // Error Type 4. Child has not implemented this abstract method.\r\n            throw new TypeError(\"Please implement abstract method formatJsonToHtml.\");\r\n        }\r\n        this._root = root;\r\n        this._isKey = isKey;\r\n        this._input = input;\r\n        this._keyValue = false;\r\n        this._rawInput = '';\r\n    }\r\n\r\n    get root() {\r\n        return this._root;\r\n    }\r\n\r\n    set root(newRoot) {\r\n        this._root = newRoot;\r\n    }\r\n\r\n    get isKey() {\r\n        return this._isKey;\r\n    }\r\n\r\n    set isKey(newKey) {\r\n        this._isKey = newKey;\r\n    }\r\n\r\n    get input() {\r\n        return this._input;\r\n    }\r\n\r\n    set input(newInput) {\r\n        this._input = newInput;\r\n    }\r\n\r\n    get rawInput() {\r\n        return this._rawInput;\r\n    }\r\n\r\n    set rawInput(raw) {\r\n        this._rawInput = raw;\r\n    }\r\n\r\n    set keyValue(newValue) {\r\n        this._keyValue = newValue;\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        throw new TypeError(\"Do not call abstract method toString from child.\");\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        throw new TypeError(\"Do not call abstract method toHtml from child.\");\r\n    }\r\n}","import JsonObject from './JsonObject.js';\r\n\r\nvar logger = require('../logger/logger');\r\n\r\nexport default class JsonString extends JsonObject {\r\n\r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        ++currentLevel;\r\n        let destination = \"\";\r\n        let tabs = '';\r\n        let i;\r\n        for (i = 0; i < currentLevel; i++)\r\n            tabs = tabs.concat(\"\\t\");\r\n        logger.debug('appendable->' + appendable);\r\n        if (this._isKey) {\r\n            destination += tabs + \"\\\"\" + this._input + \"\\\"\";\r\n        } else if (this._keyValue) {    \r\n            destination += \"\\\"\" + this._input + \"\\\"\";\r\n        } else {\r\n            destination += tabs + \"\\\"\" + this._input + \"\\\"\";\r\n        }\r\n        logger.debug('destination->' + destination);\r\n        appendable.destination = destination;\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        if (this._isKey) {\r\n            destination += \"<span class=\\\"type-key\\\">\\\"\";\r\n        } else {\r\n            destination += \"<span class=\\\"type-string\\\">\\\"\";\r\n        }\r\n        destination += this._input + \"\\\"</span>\";\r\n        appendable.destination = destination;\r\n    }\r\n}","module.exports.debug = (msg) => {\r\n    console.log(msg);\r\n}\r\nmodule.exports.info = (msg) => {\r\n    console.log(msg);\r\n}","import JsonString from \"../json/JsonString\";\r\nimport JsonBoolean from \"../json/JsonBoolean\";\r\nimport JsonNumber from \"../json/JsonNumber\";\r\nimport JsonNull from \"../json/JsonNull\";\r\nimport RJsonConstants from \"./RJsonConstants\";\r\nimport StringReader from \"../io/StringReader\";\r\nimport CharStream from \"../io/CharStream\";\r\nimport RJsonLexer from \"./RJsonLexer\";\r\nimport RJsonToken from \"./RJsonToken\";\r\n\r\nexport default class RJsonAbsParser extends RJsonConstants {\r\n\r\n    constructor(rinput,startNow) {\r\n        super();\r\n        \r\n        if(startNow === undefined) {\r\n            this.init(rinput);\r\n        }\r\n    }\r\n\r\n    init(rinput) {\r\n        this.input = rinput;\r\n        this.reader = new StringReader(this.input);\r\n        this.stream = new CharStream(this.reader);\r\n        this.lexer = new RJsonLexer(this.stream);\r\n        this.token = new RJsonToken();\r\n        this.token.next = this.jj_nt = this.lexer.getNextToken();\r\n        this.jj_gen = 0;\r\n        this.jj_la1 = new Array(13);\r\n        this.jj_la1_0 = [0xccf8480, 0x78000, 0x1ccf8000, 0x40, 0x1ccf8000, 0x40, 0xccf8480, 0xccf8000, 0x60000, 0x18000, 0xcc00000, 0x8800000, 0x4400000,];;\r\n        var i;\r\n        for (i = 0; i < 13; i++)\r\n            this.jj_la1[i] = -1;\r\n\r\n        this.jj_kind = -1;\r\n        this.nativeNumbers = false;\r\n    }\r\n\r\n    getNextToken() {\r\n        if ((this.token = this.jj_nt).next != null) this.jj_nt = this.jj_nt.next;\r\n        else this.jj_nt = this.jj_nt.next = this.lexer.getNextToken();\r\n        this.jj_gen++;\r\n        return this.token;\r\n    }\r\n\r\n    objectKey() {\r\n        let o, key;\r\n        switch (this.jj_nt.kind) {\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                key = this.string();\r\n                break;\r\n            case SYMBOL:\r\n                key = this.symbol();\r\n                break;\r\n            case NULL:\r\n                this.nullValue();\r\n                key = null;\r\n                break;\r\n            case this.NUMBER_INTEGER:\r\n            case this.NUMBER_DECIMAL:\r\n            case this.TRUE:\r\n            case this.FALSE:\r\n                switch (this.jj_nt.kind) {\r\n                    case this.TRUE:\r\n                    case this.FALSE:\r\n                        o = this.booleanValue();\r\n                        break;\r\n                    case this.NUMBER_INTEGER:\r\n                    case this.NUMBER_DECIMAL:\r\n                        o = this.number();\r\n                        break;\r\n                    default:\r\n                        this.jj_la1[1] = this.jj_gen;\r\n                        this.jj_consume_token(-1);\r\n                        throw new Error();\r\n                }\r\n                key = o;\r\n                break;\r\n            default:\r\n                this.jj_la1[2] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n        { if (true) { key.key = true; return key; } }\r\n    }\r\n\r\n    string() {\r\n        let s;\r\n        switch (this.jj_nt.kind) {\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                s = this.doubleQuoteString();\r\n                break;\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n                s = this.singleQuoteString();\r\n                break;\r\n            default:\r\n                this.jj_la1[10] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n        { if (true) return s; }\r\n    }\r\n\r\n    doubleQuoteString() {\r\n        switch (this.jj_nt.kind) {\r\n            case this.STRING_DOUBLE_EMPTY:\r\n                this.jj_consume_token(this.STRING_DOUBLE_EMPTY);\r\n                { if (true) return new JsonString(false, false, \"\"); }\r\n                break;\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                this.jj_consume_token(this.STRING_DOUBLE_NONEMPTY);\r\n                var image = this.token.image;\r\n                { if (true) return new JsonString(false, false, image); }\r\n                break;\r\n            default:\r\n                this.jj_la1[11] = this.sjj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n    }\r\n\r\n    singleQuoteString() {\r\n        switch (this.jj_nt.kind) {\r\n            case this.STRING_SINGLE_EMPTY:\r\n                this.jj_consume_token(this.STRING_SINGLE_EMPTY);\r\n                { if (true) return new JsonString(false, false, \"\"); }\r\n                break;\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n                this.jj_consume_token(this.STRING_SINGLE_NONEMPTY);\r\n                var image = token.image;\r\n                { if (true) return new JsonString(false, false, image); }\r\n                break;\r\n            default:\r\n                this.jj_la1[12] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n    }\r\n\r\n    symbol() {\r\n        this.jj_consume_token(this.SYMBOL);\r\n        { if (true) return new JsonString(false, false, token.image); }\r\n    }\r\n\r\n    nullValue() {\r\n        this.jj_consume_token(this.NULL);\r\n        { if (true) return new JsonNull(); }\r\n    }\r\n\r\n    booleanValue() {\r\n        var b;\r\n        switch (this.jj_nt.kind) {\r\n            case this.TRUE:\r\n                this.jj_consume_token(this.TRUE);\r\n                b = true;\r\n                break;\r\n            case this.FALSE:\r\n                this.jj_consume_token(this.FALSE);\r\n                b = false;\r\n                break;\r\n            default:\r\n                this.jj_la1[8] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n        { if (true) return new JsonBoolean(b); }\r\n    }\r\n\r\n    value() {\r\n        let x;\r\n        switch (this.jj_nt.kind) {\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                x = this.string();\r\n                break;\r\n            case this.NUMBER_INTEGER:\r\n            case this.NUMBER_DECIMAL:\r\n                x = this.number();\r\n                break;\r\n            case this.TRUE:\r\n            case this.FALSE:\r\n                x = this.booleanValue();\r\n                break;\r\n            case this.NULL:\r\n                x = this.nullValue();\r\n                break;\r\n            default:\r\n                this.jj_la1[7] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n        { if (true) return x; }\r\n    }\r\n\r\n    number() {\r\n        let t;\r\n        switch (this.jj_nt.kind) {\r\n            case this.NUMBER_DECIMAL:\r\n                t = this.jj_consume_token(this.NUMBER_DECIMAL);\r\n                if (nativeNumbers) {\r\n                    { if (true) return new JsonNumber(false, false, t.image); }\r\n                } else {\r\n                    { if (true) return new JsonNumber(false, false, t.image); }\r\n                }\r\n                break;\r\n            case this.NUMBER_INTEGER:\r\n                t = this.jj_consume_token(this.NUMBER_INTEGER);\r\n                if (this.nativeNumbers) {\r\n                    { if (true) return new JsonNumber(false, false, t.image); }\r\n                } else {\r\n                    { if (true) return new JsonNumber(false, false, t.image); }\r\n                }\r\n                break;\r\n            default:\r\n                this.jj_la1[9] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n    }\r\n}","export default class RJsonConstants {\r\n\r\n    constructor() {\r\n        /** End of File. */\r\n        this.EOF = 0;\r\n        /** RegularExpression Id. */\r\n        this.C_SINGLE_COMMENT = 1;\r\n        /** RegularExpression Id. */\r\n        this.C_MULTILINE_COMMENT = 2;\r\n        /** RegularExpression Id. */\r\n        this.SH_SINGLE_COMMENT = 3;\r\n        /** RegularExpression Id. */\r\n        this.WHITESPACE = 4;\r\n        /** RegularExpression Id. */\r\n        this.EOL = 5;\r\n        /** RegularExpression Id. */\r\n        this.COMMA = 6;\r\n        /** RegularExpression Id. */\r\n        this.BRACE_OPEN = 7;\r\n        /** RegularExpression Id. */\r\n        this.BRACE_CLOSE = 8;\r\n        /** RegularExpression Id. */\r\n        this.COLON = 9;\r\n        /** RegularExpression Id. */\r\n        this.BRACKET_OPEN = 10;\r\n        /** RegularExpression Id. */\r\n        this.BRACKET_CLOSE = 11;\r\n        /** RegularExpression Id. */\r\n        this.ZERO = 12;\r\n        /** RegularExpression Id. */\r\n        this.DIGIT_NONZERO = 13;\r\n        /** RegularExpression Id. */\r\n        this.DIGIT = 14;\r\n        /** RegularExpression Id. */\r\n        this.NUMBER_INTEGER = 15;\r\n        /** RegularExpression Id. */\r\n        this.NUMBER_DECIMAL = 16;\r\n        /** RegularExpression Id. */\r\n        this.TRUE = 17;\r\n        /** RegularExpression Id. */\r\n        this.FALSE = 18;\r\n        /** RegularExpression Id. */\r\n        this.NULL = 19;\r\n        /** RegularExpression Id. */\r\n        this.QUOTE_DOUBLE = 20;\r\n        /** RegularExpression Id. */\r\n        this.QUOTE_SINGLE = 21;\r\n        /** RegularExpression Id. */\r\n        this.STRING_SINGLE_EMPTY = 22;\r\n        /** RegularExpression Id. */\r\n        this.STRING_DOUBLE_EMPTY = 23;\r\n        /** RegularExpression Id. */\r\n        this.STRING_SINGLE_BODY = 24;\r\n        /** RegularExpression Id. */\r\n        this.STRING_DOUBLE_BODY = 25;\r\n        /** RegularExpression Id. */\r\n        this.STRING_SINGLE_NONEMPTY = 26;\r\n        /** RegularExpression Id. */\r\n        this.STRING_DOUBLE_NONEMPTY = 27;\r\n        /** RegularExpression Id. */\r\n        this.SYMBOL = 28;\r\n\r\n        /** Lexical state. */\r\n        this.DEFAULT = 0;\r\n\r\n        this.LEXICAL_ERROR = 0;\r\n\r\n        /** Literal token values. */\r\n        this.tokenImage = [\r\n            \"<EOF>\",\r\n            \"<C_SINGLE_COMMENT>\",\r\n            \"<C_MULTILINE_COMMENT>\",\r\n            \"<SH_SINGLE_COMMENT>\",\r\n            \"<WHITESPACE>\",\r\n            \"<EOL>\",\r\n            \"\\\",\\\"\",\r\n            \"\\\"{\\\"\",\r\n            \"\\\"}\\\"\",\r\n            \"\\\":\\\"\",\r\n            \"\\\"[\\\"\",\r\n            \"\\\"]\\\"\",\r\n            \"\\\"0\\\"\",\r\n            \"<DIGIT_NONZERO>\",\r\n            \"<DIGIT>\",\r\n            \"<NUMBER_INTEGER>\",\r\n            \"<NUMBER_DECIMAL>\",\r\n            \"\\\"true\\\"\",\r\n            \"\\\"false\\\"\",\r\n            \"\\\"null\\\"\",\r\n            \"\\\"\\\\\\\"\\\"\",\r\n            \"\\\"\\\\\\'\\\"\",\r\n            \"\\\"\\\\\\'\\\\\\'\\\"\",\r\n            \"\\\"\\\\\\\"\\\\\\\"\\\"\",\r\n            \"<STRING_SINGLE_BODY>\",\r\n            \"<STRING_DOUBLE_BODY>\",\r\n            \"<STRING_SINGLE_NONEMPTY>\",\r\n            \"<STRING_DOUBLE_NONEMPTY>\",\r\n            \"<SYMBOL>\",\r\n        ];\r\n    }\r\n}","import RJsonToken from './RJsonToken.js';\r\nimport RJsonTokenMgrError from './RJsonTokenMgrError.js';\r\nimport RJsonConstants from './RJsonConstants.js';\r\n\r\nvar logger = require('../logger/logger');\r\n\r\nexport default class RJsonLexer extends RJsonConstants {\r\n\r\n    constructor(istream) {\r\n        super();\r\n        this.input_stream = istream;\r\n        this.curChar = '';\r\n        this.matchedKind = 0;\r\n        this.matchedPos = 0;\r\n        this.toToken = [0x1ccf8fc1,];\r\n        this.curLexState = 0;\r\n        // this.strLiteralImages = [\r\n        //     \"\", null, null, null, null, 'null', '0o54', 0o173, 0o175, 0o072, 0o133, \r\n        //     0o135, null, null, null, null, null, null, null, null, null, null, \"\\'\", \r\n        //     \"\\\"\", null, null, null, null, null, ];\r\n        this.strLiteralImages = [\r\n            \"\", null, null, null, null, 'null', ',', '{', '}', ':', '[',\r\n            ']', null, null, null, null, null, null, null, null, null, null, \"\\'\",\r\n            \"\\\"\", null, null, null, null, null,];\r\n    }\r\n\r\n    getNextToken() {\r\n        logger.debug(\"getNextToken()\");\r\n        var matchedToken = null;\r\n        var curPos = 0;\r\n        EOFLoop:\r\n        for (; ;) {\r\n            try {\r\n                this.curChar = this.input_stream.beginToken();\r\n            } catch (e) {\r\n                //logger.debug(e.stack);\r\n                this.matchedKind = 0;\r\n                matchedToken = this.fillToken();\r\n                return matchedToken;\r\n            }\r\n            logger.debug(\"this.curChar =\" + this.curChar);\r\n            this.matchedKind = 0x7fffffff;\r\n            this.matchedPos = 0;\r\n            curPos = this.analyzeCurrentCharacter();\r\n            logger.debug(\"matchedKind()->\" + this.matchedKind + \",curPos->\" + curPos);\r\n            if (this.matchedKind != 0x7fffffff) {\r\n               \r\n                if (this.matchedPos + 1 < curPos) {\r\n                    this.input_stream.backup(curPos - this.matchedPos - 1); // possible backtracking.\r\n                }\r\n                logger.debug(\"curPos=\" + curPos);\r\n                if ((this.matchedKind == this.C_SINGLE_COMMENT)\r\n                    || (this.matchedKind == this.C_MULTILINE_COMMENT)) {\r\n                    this.matchedToken = this.fillToken();\r\n                    logger.debug(\"getNextToken()::Matched\" + this.matchedKind);\r\n                    return matchedToken;\r\n                }\r\n                if (this.matchedKind == this.BRACE_OPEN || this.matchedKind == this.TRUE\r\n                    || this.matchedKind == this.NUMBER_INTEGER\r\n                    || this.matchedKind == this.NULL\r\n                    || this.matchedKind == this.COMMA) {\r\n                    matchedToken = this.fillToken();\r\n                    logger.debug(\"getNextToken()::Matched->\" + matchedToken);\r\n                    return matchedToken;\r\n                }\r\n                if ((this.toToken[this.matchedKind >> 6] & (1 << (this.matchedKind & 77))) != 0) {\r\n                    matchedToken = this.fillToken();\r\n                    logger.debug(\"getNextToken()::Matched >> 6->\" + this.matchedKind);\r\n                    return matchedToken;\r\n                } else {\r\n                    continue EOFLoop;\r\n                }\r\n            }\r\n            // error begins.....\r\n            let error_line = this.input_stream.getEndLine;\r\n            let error_column = this.input_stream.getEndColumn;\r\n            let error_after = null;\r\n            let EOFSeen = false;\r\n            try {\r\n                this.input_stream.readChar();\r\n                this.input_stream.backup(1);\r\n            } catch (e1) {\r\n                logger.debug(e1.stack);\r\n                EOFSeen = true;\r\n                error_after = curPos <= 1 ? \"\" : this.input_stream.getImage();\r\n                if (this.curChar == '\\n' || this.curChar == '\\r') {\r\n                    error_line++;\r\n                    error_column = 0;\r\n                } else {\r\n                    error_column++;\r\n                }\r\n            }\r\n            logger.debug('xxxxxxxxxxxx');\r\n            if (!EOFSeen) {\r\n                logger.debug('xxxxxxxxxxxx');\r\n                this.input_stream.backup(1);\r\n                error_after = curPos <= 1 ? \"\" : this.input_stream.getImage();\r\n            }\r\n            logger.debug('zzzzzzzzzzzzzzzz');\r\n            throw new RJsonTokenMgrError(EOFSeen, this.curLexState, error_line, error_column, error_after, this.curChar, this.LEXICAL_ERROR);\r\n        }\r\n    }\r\n\r\n    analyzeCurrentCharacter() {\r\n        if (this.curChar == ' ' || this.curChar == '\\t' || this.curChar == '\\n' || this.curChar == '\\r') {\r\n            this.consume_char();\r\n            try {\r\n                this.curChar = this.input_stream.readChar();\r\n            } catch (e) {\r\n                // hack for special characters after the last token.\r\n                this.matchedKind = 0;\r\n                return 1;\r\n            }\r\n            return this.analyzeCurrentCharacter();\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        //logger.debug('analyzeCurrentCharacter()->' + code);\r\n        switch (code) {\r\n            case 123: // '{'\r\n                return this.stopAtPos(0, this.BRACE_OPEN);\r\n            case 125: // '}'\r\n                return this.stopAtPos(0, this.BRACE_CLOSE);\r\n            case 34: // '\"'\r\n                return this.moveChar01(8);\r\n            case 39: // '\\''\r\n                return this.moveChar01(4);\r\n            case 44: // ','\r\n                return this.stopAtPos(0, this.COMMA);\r\n            case 58: // ':'\r\n                return this.stopAtPos(0, this.COLON);\r\n            case 91: // '['\r\n                return this.stopAtPos(0, this.BRACKET_OPEN);\r\n            case 93: // ']'\r\n                return this.stopAtPos(0, this.BRACKET_CLOSE);\r\n            case 70: // 'F'\r\n            case 102: // 'f'\r\n                return this.moveChar01(4);\r\n            case 78: // 'N'\r\n            case 110: // 'n'\r\n                return this.moveChar01(8);\r\n            case 84: // 'T'\r\n            case 116: // 't'\r\n                return this.moveChar01(2);\r\n            case 47: // '/'\r\n                return this.moveChar01(6);\r\n            case 35: // '#'\r\n                return this.moveChar(0, '\\n');\r\n            default:\r\n                return this.findNumber(0, 0);\r\n        }\r\n    }\r\n\r\n    isDigit() {\r\n        logger.debug(\"\\\"\" + this.curChar + \"\\\"\");\r\n        let code = this.curChar.charCodeAt();\r\n\r\n        if (code == 46) { // '.'\r\n            return true;\r\n        }\r\n\r\n        if (code > 47 && code < 58) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    findNumber(startState, curPos) {\r\n        logger.debug(\"\\\"\" + this.curChar + \"\\\"\");\r\n        while (this.isDigit()) {\r\n            ++curPos;\r\n            try {\r\n                this.curChar = this.input_stream.readChar();\r\n            } catch (e) {\r\n                return curPos;\r\n            }\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        logger.debug(\"\\\"\" + this.curChar + \"\\\"\");\r\n        if (code == 44 || code == 125\r\n            || this.curChar == '\\r' || this.curChar == '\\n' || this.curChar == ' '\r\n            || this.curChar == '\\t') {\r\n            --curPos;\r\n            logger.debug(\"\\\"\" + this.curChar + \"\\\"\");\r\n            this.matchedKind = this.NUMBER_INTEGER;\r\n            this.matchedPos = curPos;\r\n            this.input_stream.backup(1);\r\n            return curPos;\r\n        }\r\n        // not a valid numbers\r\n        return curPos;\r\n    }\r\n\r\n    findStringLiteral(curPos, active0) {\r\n        //logger.debug(\"finding string literal\");\r\n        var kind = 0x7fffffff;\r\n        try {\r\n            this.curChar = this.input_stream.readChar();\r\n        } catch (e) {\r\n            return 1;\r\n        }\r\n        for (; ;) {\r\n            let code = this.curChar.charCodeAt();\r\n            //logger.debug(\"findStringLiteral() = \" + code);\r\n            switch (code) {\r\n                case 34: // '\"'\r\n                    kind = this.STRING_DOUBLE_NONEMPTY;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            ++curPos;\r\n            if (kind != 0x7fffffff) {\r\n                this.matchedKind = kind;\r\n                this.matchedPos = curPos;\r\n                //logger.debug(\"returning curPos = \" + curPos);\r\n                return curPos;\r\n            }\r\n            try {\r\n                this.curChar = this.input_stream.readChar();\r\n            } catch (e) {\r\n                logger.debug(e.stack);\r\n                return curPos;\r\n            }\r\n        }\r\n    }\r\n\r\n    moveChar(curPos, target) {\r\n        logger.debug(\"moveChar::curChar=\" + this.curChar + \",target=\" + target);\r\n        var kind = 0x7fffffff;\r\n        try {\r\n            this.curChar = this.input_stream.readChar();\r\n        } catch (e) {\r\n            return 1;\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        for (; ;) {\r\n            if (this.curChar == '\\n' || this.curChar == '\\r' || this.curChar == '\\f') {\r\n                kind = this.C_SINGLE_COMMENT;\r\n            }\r\n            if (code == 42) { // '*'\r\n                \r\n                // lookahead for char '/'\r\n                try {\r\n                    this.curChar = this.input_stream.readChar();\r\n                } catch (e) {\r\n                    return 1;\r\n                }\r\n                let ccode = this.curChar.charCodeAt();\r\n                if (ccode == 47) {\r\n                    ++curPos;\r\n                    kind = this.C_MULTILINE_COMMENT;\r\n                } else {\r\n                    this.input_stream.backup(1);\r\n                }\r\n            }\r\n\r\n            ++curPos;\r\n            if (kind != 0x7fffffff) {\r\n                this.matchedKind = kind;\r\n                this.matchedPos = curPos;\r\n                return curPos;\r\n            }\r\n            try {\r\n                this.curChar = this.input_stream.readChar();\r\n            } catch (e) {\r\n                return curPos;\r\n            }\r\n            code = this.curChar.charCodeAt();\r\n        }\r\n    }\r\n\r\n    moveChar01(active0) {\r\n        try {\r\n            this.curChar = this.input_stream.readChar();\r\n        } catch (e) {\r\n            return 1;\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        logger.debug(\"moveChar01::curChar=\" + this.curChar + \",code=\" + code);\r\n        switch (code) {\r\n            case 34: // '\"'\r\n                if ((active0 & 8) != 0)\r\n                    return this.stopAtPos(1, this.STRING_DOUBLE_EMPTY);\r\n                break;\r\n            case 39: // '\\''\r\n                if ((active0 & 4) != 0)\r\n                    return this.stopAtPos(1, this.STRING_SINGLE_EMPTY);\r\n                break;\r\n            case 65: // 'A'\r\n            case 97: // 'a'\r\n                if ((active0 & 4) != 0)\r\n                    return this.moveChar02(active0, 4);\r\n                break;\r\n            case 82: // 'R'\r\n            case 114: // 'r'\r\n                if ((active0 & 2) != 0)\r\n                    return this.moveChar02(active0, 4);\r\n                break;\r\n            case 85: // 'U'\r\n            case 117: // 'u'\r\n                if ((active0 & 8) != 0)\r\n                    return this.moveChar02(active0, 8);\r\n                break;\r\n            case 47: // '/' - C_SINGLE_COMMENT\r\n                if ((active0 & 6) != 0)\r\n                    return this.moveChar(0, '\\n');\r\n                break;\r\n            case 42: // '*' - C_MULTILINE_COMMENT\r\n                if ((active0 & 6) != 0)\r\n                    return this.moveChar(0, '*');\r\n                break;\r\n            default:\r\n                break;\r\n\r\n        }\r\n        return this.findStringLiteral(0, active0);\r\n    }\r\n\r\n    moveChar02(old0, active0) {\r\n        try {\r\n            this.curChar = this.input_stream.readChar();\r\n        } catch (e) {\r\n            return 2;\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        logger.debug(\"moveChar02::curChar=\" + this.curChar + \",code=\" + code);\r\n        switch (code) {\r\n            case 76: // L\r\n            case 108:// l\r\n                return this.moveChar03(active0, 5);\r\n            case 85:// U\r\n            case 117:// u\r\n                return this.moveChar03(active0, 2);\r\n            default:\r\n                break;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    moveChar03(old0, active0) {\r\n        try {\r\n            this.curChar = this.input_stream.readChar();\r\n        } catch (e) {\r\n            return 3;\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        logger.debug(\"moveChar03::curChar=\" + this.curChar + \",code=\" + code);\r\n        switch (code) {\r\n            case 69: // E\r\n            case 101: // e\r\n                if ((active0 & 2) != 0)\r\n                    return this.stopAtPos(3, this.TRUE);\r\n                break;\r\n            case 76: // L\r\n            case 108:// l\r\n                \r\n                if ((active0 & 5) != 0) {\r\n                    logger.debug('moveChar03->foundNull-' + (active0 & 5));\r\n                    return this.stopAtPos(3, this.NULL);\r\n                }\r\n                break;\r\n            case 83: // S\r\n            case 115:// s\r\n                return this.moveChar04(active0, 4);\r\n            default:\r\n                break;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    moveChar04(old0, active0) {\r\n        try {\r\n            this.curChar = this.input_stream.readChar();\r\n        } catch (e) {\r\n            return 4;\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        logger.debug(\"moveChar04::curChar=\" + this.curChar + \",code=\" + code);\r\n        switch (code) {\r\n            case 69: // E\r\n            case 101:// e\r\n                if ((active0 & 4) != 0)\r\n                    return this.stopAtPos(4, this.FALSE);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    stopAtPos(pos, kind) {\r\n        this.matchedKind = kind;\r\n        this.matchedPos = pos;\r\n        return pos + 1;\r\n    }\r\n\r\n    checkForSpace() {\r\n        let code = this.curChar.charCodeAt();\r\n        if (code == 32) {\r\n            try {\r\n                curChar = input_stream.readChar();\r\n            } catch (e) {\r\n            }\r\n            let ccode = this.curChar.charCodeAt();\r\n            if (ccode != 32) {\r\n                input_stream.backup(1);\r\n                return;\r\n            } else {\r\n                this.checkForSpace();\r\n            }\r\n        }\r\n    }\r\n\r\n    fillToken() {\r\n        let beginLine = this.input_stream.getBeginLine;\r\n        let beginColumn = this.input_stream.getBeginColumn;\r\n        let endLine = this.input_stream.getEndLine;\r\n        let endColumn = this.input_stream.getEndColumn;\r\n        var im = this.strLiteralImages[this.matchedKind];\r\n        let tokenImage = (im == null) ? this.input_stream.getImage() : im;\r\n        //let tokenImage = this.input_stream.getImage();\r\n        let token = RJsonToken.newToken(this.matchedKind, tokenImage);\r\n        logger.debug('generated new token ->' + token.toString());\r\n        token.beginLine = beginLine;\r\n        token.endLine = endLine;\r\n        token.beginColumn = beginColumn;\r\n        token.endColumn = endColumn;\r\n        return token;\r\n    }\r\n\r\n    consume_char() {\r\n        if (this.curChar == '\\n') {\r\n        } else if (this.curChar == ' ') {\r\n            this.input_stream.spaceDetected();\r\n        }\r\n\r\n    }\r\n}\r\n","import JsonMap from \"../json/JsonMap\";\r\nimport JsonList from \"../json/JsonList\";\r\nimport RJsonAbsParser from \"./RJsonAbsParser\";\r\nimport RJsonParserError from \"./RJsonParserError\";\r\n\r\nvar logger = require('../logger/logger');\r\n\r\nexport default class RJsonParser extends RJsonAbsParser {\r\n\r\n    constructor(rinput,startNow) {\r\n        super(rinput,startNow);\r\n    }\r\n\r\n    parse() {\r\n        var toReturn = this.anything();\r\n        toReturn.root = true;\r\n        toReturn.rawInput = this.input;\r\n        if (!this.ensureEOF()) {\r\n            throw new Error(\"parser.expectedEOF\");\r\n        }\r\n        return toReturn;\r\n    }\r\n\r\n    anything() {\r\n        logger.debug(\"RJsonParser::anything()\" + this.jj_nt);\r\n        let x;\r\n        switch (this.jj_nt.kind) {\r\n            case this.BRACE_OPEN:\r\n                x = this.object();\r\n                break;\r\n            case this.BRACKET_OPEN:\r\n                x = this.list();\r\n                break;\r\n            case this.NUMBER_INTEGER:\r\n            case this.NUMBER_DECIMAL:\r\n            case this.TRUE:\r\n            case this.FALSE:\r\n            case this.NULL:\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                x = this.value();\r\n                break;\r\n            default:\r\n                this.jj_la1[0] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new RJsonParserError();\r\n        }\r\n        { if (true) return x; }\r\n    }\r\n\r\n    object() {\r\n        let map = new JsonMap(true, false, new Map());\r\n        let key, value;\r\n        this.jj_consume_token(this.BRACE_OPEN);\r\n        switch (this.jj_nt.kind) {\r\n            case this.NUMBER_INTEGER:\r\n            case this.NUMBER_DECIMAL:\r\n            case this.TRUE:\r\n            case this.FALSE:\r\n            case this.NULL:\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n            case this.SYMBOL:\r\n                key = this.objectKey();\r\n                this.jj_consume_token(this.COLON);\r\n                value = this.anything();\r\n                value.key = true;\r\n                map.put(key, value);\r\n                key = null; value = null;\r\n                label_1:\r\n                while (true) {\r\n                    switch (this.jj_nt.kind) {\r\n                        case this.COMMA:\r\n                            ;\r\n                            break;\r\n                        default:\r\n                            this.jj_la1[3] = this.jj_gen;\r\n                            break label_1;\r\n                    }\r\n                    this.jj_consume_token(this.COMMA);\r\n                    key = this.objectKey();\r\n                    this.jj_consume_token(this.COLON);\r\n                    value = this.anything();\r\n                    value.key = true;\r\n                    map.put(key, value);\r\n                    key = null; value = null;\r\n                }\r\n                break;\r\n            default:\r\n                this.jj_la1[4] = this.jj_gen;\r\n        }\r\n        this.jj_consume_token(this.BRACE_CLOSE);\r\n        { if (true) return map; }\r\n    }\r\n\r\n    list() {\r\n        let list = new JsonList(true, false, []);\r\n        logger.debug(\"RJsonParser::list()\" + this.jj_nt.toString());\r\n        let value;\r\n        this.jj_consume_token(this.BRACKET_OPEN);\r\n        switch (this.jj_nt.kind) {\r\n            case this.BRACE_OPEN:\r\n            case this.BRACKET_OPEN:\r\n            case this.NUMBER_INTEGER:\r\n            case this.NUMBER_DECIMAL:\r\n            case this.TRUE:\r\n            case this.FALSE:\r\n            case this.NULL:\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                value = this.anything();\r\n                list.add(value);\r\n                value = null;\r\n                label_2:\r\n                while (true) {\r\n                    switch (this.jj_nt.kind) {\r\n                        case this.COMMA:\r\n                            ;\r\n                            break;\r\n                        default:\r\n                            this.jj_la1[5] = this.jj_gen;\r\n                            break label_2;\r\n                    }\r\n                    this.jj_consume_token(this.COMMA);\r\n                    value = this.anything();\r\n                    list.add(value);\r\n                    value = null;\r\n                }\r\n                break;\r\n            default:\r\n                this.jj_la1[6] = this.jj_gen;\r\n                ;\r\n        }\r\n        this.jj_consume_token(this.BRACKET_CLOSE);\r\n        {if (true) return list;}\r\n    }\r\n\r\n    \r\n\r\n    ensureEOF() {\r\n        this.jj_consume_token(0);\r\n        { if (true) return true; }\r\n    }\r\n\r\n    jj_consume_token(kind) {\r\n        \r\n        logger.debug(\"01-RJsonParser::jj_consume_token::this.jj_nt=\" + this.jj_nt + \",cKind=\" + kind + \",this.jj_nt.next=\" + this.jj_nt.next);\r\n        var oldToken = this.token;\r\n        if ((this.token = this.jj_nt).next != null) {\r\n            this.jj_nt = this.jj_nt.next;\r\n        } else {\r\n            this.jj_nt = this.jj_nt.next = this.lexer.getNextToken();\r\n            logger.debug(\"02-RJsonParser::jj_consume_token::this.jj_nt=\" + this.jj_nt + \",cKind=\" + kind+ \",this.jj_nt.next=\" + this.jj_nt.next);\r\n        }\r\n        \r\n        \r\n        if (this.token.kind === kind) {\r\n            this.jj_gen++;\r\n            return this.token;\r\n        }\r\n        this.jj_nt = this.token;\r\n        this.token = oldToken;\r\n        this.jj_kind = kind;\r\n        logger.debug('-------------------');\r\n        throw this.generateParseException();\r\n        \r\n    }\r\n\r\n    generateParseException() {\r\n        logger.debug('generateParseException');\r\n        var jj_expentries = [];\r\n        var la1tokens = [];\r\n        var jj_expentry = [];\r\n        var i, j, k, l;\r\n        if (this.jj_kind >= 0) {\r\n            la1tokens[this.jj_kind] = true;\r\n            this.jj_kind = -1;\r\n        }\r\n        for (i = 0; i < 13; i++) {\r\n            if (this.jj_la1[i] == this.jj_gen) {\r\n                for (j = 0; j < 32; j++) {\r\n                    if ((this.jj_la1_0[i] & (1 << j)) != 0) {\r\n                        la1tokens[j] = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (k = 0; k < 29; k++) {\r\n            if (la1tokens[k]) {\r\n                jj_expentry[0] = k;\r\n                jj_expentries.push(jj_expentry);\r\n            }\r\n        }\r\n        var exptokseq = [];\r\n        for (l = 0; l < jj_expentries.size; l++) {\r\n            exptokseq[l] = jj_expentries[l];\r\n        }\r\n        \r\n        var e =  new RJsonParserError(this.token, exptokseq, this.tokenImage);\r\n        logger.debug('generateParseException ::' + e.getMessage());\r\n        return e;\r\n    }\r\n\r\n    static runParser(input) {\r\n        var instance = new RJsonParser(input);\r\n        var jsonObject = instance.parse();\r\n        return jsonObject;\r\n    }\r\n}\r\n\r\nexport function runParser(input) {\r\n    RJsonParser.runParser(input);\r\n}","export default class RJsonParserError extends Error {\r\n\r\n    constructor(_currentTokenVal, _expectedTokenSequencesVal, _tokenImageVal) {\r\n        super();\r\n        this.currentToken = _currentTokenVal;\r\n        this.expectedTokenSequences = _expectedTokenSequencesVal;\r\n        this.tokenImage = _tokenImageVal;\r\n        this.eol = \"&\";\r\n    }\r\n\r\n    toString() {\r\n        return \"i am exception\";\r\n    }\r\n\r\n    getMessage() {\r\n        let expected = '';\r\n        let maxSize, i, j = 0;\r\n        for (i = 0; i < this.expectedTokenSequences.length; i++) {\r\n            if (maxSize < this.expectedTokenSequences[i].length) {\r\n                maxSize = this.expectedTokenSequences[i].length;\r\n            }\r\n            for (j = 0; j < this.expectedTokenSequences[i].length; j++) {\r\n                expected += this.tokenImage[this.expectedTokenSequences[i][j]] + ' ';\r\n            }\r\n            if (this.expectedTokenSequences[i][this.expectedTokenSequences[i].length - 1] != 0) {\r\n                expected += \"...\";\r\n            }\r\n            expected += eol + \"    \";\r\n        }\r\n\r\n        let retval = \"Encountered \\\"\";\r\n        let tok = this.currentToken.next;\r\n        for (i = 0; i < maxSize; i++) {\r\n            if (i != 0) retval += \" \";\r\n            if (tok.kind == 0) {\r\n                retval += this.tokenImage[0];\r\n                break;\r\n            }\r\n            retval += \" \" + this.tokenImage[tok.kind];\r\n            retval += \" \\\"\";\r\n            retval += this.add_escapes(tok.image);\r\n            retval += \" \\\"\";\r\n            tok = tok.next;\r\n        }\r\n\r\n        retval += \"\\\" at line \" + this.currentToken.next.beginLine + \", column \" + this.currentToken.next;\r\n        retval += \".\" + this.eol;\r\n        if (this.expectedTokenSequences.length == 1) {\r\n            retval += \"Was expecting:\" + this.eol + \"    \";\r\n        } else {\r\n            retval += \"Was expecting one of:\" + this.eol + \"    \";\r\n        }\r\n        retval += expected;\r\n        return retval;\r\n    }\r\n\r\n    addEscapes(str) {\r\n        let i,ch;\r\n        let retval = \"\";\r\n        for (i = 0; i < str.length; i++) {\r\n            switch (str.charAt(i)) {\r\n                case 0:\r\n                    continue;\r\n                case '\\b':\r\n                    retval += \"\\\\b\";\r\n                    continue;\r\n                case '\\t':\r\n                    retval += \"\\\\t\";\r\n                    continue;\r\n                case '\\n':\r\n                    retval += \"\\\\n\";\r\n                    continue;\r\n                case '\\f':\r\n                    retval += \"\\\\f\";\r\n                    continue;\r\n                case '\\r':\r\n                    retval += \"\\\\r\";\r\n                    continue;\r\n                case '\\\"':\r\n                    retval += \"\\\\\\\"\";\r\n                    continue;\r\n                case '\\'':\r\n                    retval += \"\\\\\\'\";\r\n                    continue;\r\n                case '\\\\':\r\n                    retval += \"\\\\\\\\\";\r\n                    continue;\r\n                default:\r\n                    if ((ch = str.charAt(i)) < 0x20 || ch > 0x7e) {\r\n                        var s = \"0000\" + ch.toString();\r\n                        retval += \"\\\\u\" + s.substring(s.length - 4, s.length);\r\n                    } else {\r\n                        retval += ch;\r\n                    }\r\n                    continue;\r\n            }\r\n        }\r\n        return retval.toString();\r\n    }\r\n}","var logger = require('../logger/logger');\r\n\r\nexport default class RJsonToken {\r\n    constructor(ofkind,nimage) {\r\n        this._kind = ofkind;\r\n        this._image = nimage;\r\n        this._next = null;\r\n        this.specialToken = null;\r\n    }\r\n\r\n    set next(newNext) {\r\n        this._next = newNext;\r\n    }\r\n\r\n    get next() {\r\n        return this._next;\r\n    }\r\n\r\n    set beginLine(line) {\r\n        this._beginLine = line;\r\n    }\r\n\r\n    get beginLine() {\r\n        return this._beginLine;\r\n    }\r\n\r\n    set endLine(line) {\r\n        this._endLine = line;\r\n    }\r\n\r\n    set beginColumn(column) {\r\n        this._beginColumn = column;\r\n    }\r\n\r\n    get beginColumn() {\r\n        return this._beginColumn;\r\n    }\r\n\r\n    set endColumn(column) {\r\n        this._endColumn = column;\r\n    }\r\n\r\n    get kind() {\r\n        return this._kind;\r\n    }\r\n\r\n    set kind(newKind) {\r\n        this._kind = newKind;\r\n    }\r\n\r\n    get image() {\r\n        logger.debug('returning from token image length ->' + this._image.length);\r\n        return this._image;\r\n    }\r\n\r\n    static newToken(kind,image) {\r\n        return new RJsonToken(kind,image);\r\n    }\r\n\r\n    toString() {\r\n     return \"kind=\" + this._kind + \",image=\" + this.image;\r\n    }\r\n}","var logger = require('../logger/logger');\r\n\r\nexport default class RJsonTokenMgrError {\r\n    static addEscapes(str) {\r\n        //logger.debug('addEscapes)' + str);\r\n        let i,ch;\r\n        let retval = \"\";\r\n        for (i = 0; i < str.length; i++) {\r\n            switch (str.charAt(i)) {\r\n                case 0:\r\n                    continue;\r\n                case '\\b':\r\n                    retval += \"\\\\b\";\r\n                    continue;\r\n                case '\\t':\r\n                    retval += \"\\\\t\";\r\n                    continue;\r\n                case '\\n':\r\n                    retval += \"\\\\n\";\r\n                    continue;\r\n                case '\\f':\r\n                    retval += \"\\\\f\";\r\n                    continue;\r\n                case '\\r':\r\n                    retval += \"\\\\r\";\r\n                    continue;\r\n                case '\\\"':\r\n                    retval += \"\\\\\\\"\";\r\n                    continue;\r\n                case '\\'':\r\n                    retval += \"\\\\\\'\";\r\n                    continue;\r\n                case '\\\\':\r\n                    retval += \"\\\\\\\\\";\r\n                    continue;\r\n                default:\r\n                    if ((ch = str.charAt(i)) < 0x20 || ch > 0x7e) {\r\n                        var s = \"0000\" + ch.toString();\r\n                        retval += \"\\\\u\" + s.substring(s.length - 4, s.length);\r\n                        //logger.debug('retval' + retval);\r\n                    } else {\r\n                        retval += ch;\r\n                    }\r\n                    continue;\r\n            }\r\n        }\r\n        //logger.debug('8888' + retval.toString());\r\n        return retval.toString();\r\n    }\r\n\r\n    static LexicalError(EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar) {\r\n        let code = curChar.charCodeAt();\r\n        //logger.debug('LexicalError(EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar)');\r\n        var res = \"Lexical error at line \" +\r\n            errorLine + \", column \" +\r\n            errorColumn + \".  Encountered: \" +\r\n            (EOFSeen ? \"<EOF> \" : (\"\\\"\" + RJsonTokenMgrError.addEscapes(curChar) + \"\\\"\") + \" (\" + code + \"), \") +\r\n            \"after : \\\"\" + RJsonTokenMgrError.addEscapes(errorAfter) + \"\\\"\";\r\n        //logger.debug(res);\r\n    }\r\n\r\n    constructor(EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar, reason) {\r\n        this.message = RJsonTokenMgrError.LexicalError(EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar);\r\n        this.reason = reason;\r\n    }\r\n}"],"sourceRoot":""}